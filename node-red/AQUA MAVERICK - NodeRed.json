[{"id":"f951a401b9bb56d4","type":"tab","label":"Finalized flow","disabled":false,"info":"IIoT Wastewater Monitoring with Historical Data Analytics"},{"id":"ea794a154da25d76","type":"group","z":"f951a401b9bb56d4","name":"SENSOR DATA","style":{"label":true,"stroke":"#777777","color":"#0070c0"},"nodes":["698a53fd4f613024","e908d40fdf5ebefa","45bac5845f88a80d","8d422ebe4954c157"],"x":454,"y":219,"w":252,"h":202},{"id":"c8a05a80b8522e0c","type":"group","z":"f951a401b9bb56d4","name":"SENSOR GAUGE","style":{"label":true},"nodes":["31f6342eed1e67fe","e0a50e1f5aa9cb47","82e82cacc987bfa5","a30b7449fc7870b8"],"x":1234,"y":139,"w":232,"h":202},{"id":"2e23eec490713d78","type":"group","z":"f951a401b9bb56d4","name":"SENSOR CHART","style":{"label":true},"nodes":["4fec2aefb1ad3d59","f510c537dd4130b6","0a216f5c77f18cdf","04e5def9af2dd018"],"x":1234,"y":359,"w":232,"h":202},{"id":"bda6c5d33570dd19","type":"group","z":"f951a401b9bb56d4","name":"HISTORICAL CHART BY LOADING SAVED DATA","style":{"label":true},"nodes":["258dfafa3855cff1","f0f8a32d296422c1","cf956bf7769be3cb","98d7c5cb69e4ad86","5e69fdfc36e1849e"],"x":14,"y":599,"w":852,"h":122},{"id":"e014542aec6265e4","type":"group","z":"f951a401b9bb56d4","name":"STATUS AND MESSAGE","style":{"label":true},"nodes":["22e6f1a6f559dd7a","2ecc8045449d8f3e","b493abc4c9567c0d","c6346aaf246576ac","f8c93a1c224e2d51"],"x":1674,"y":239,"w":792,"h":162},{"id":"b04ddca6719d1577","type":"group","z":"f951a401b9bb56d4","name":"DATA VISUALIZATION","style":{"label":true},"nodes":["ce20c883f171ae71","cefee58f960a37b2"],"x":1674,"y":419,"w":352,"h":82},{"id":"f3bac752d535526d","type":"group","z":"f951a401b9bb56d4","name":"WATER QUALITY DATA","style":{"label":true},"nodes":["a09cadc905c280e2","82361c5f9a79d9c9","c487e70540948542","d052879566078f54"],"x":1674,"y":519,"w":652,"h":122},{"id":"5d136533d7eec2c8","type":"group","z":"f951a401b9bb56d4","name":"COMPONENTS HEALTH","style":{"label":true},"nodes":["de9f235684bb3aad","9f8ebdafc659108d"],"x":1674,"y":659,"w":572,"h":82},{"id":"5a166091742504f0","type":"group","z":"f951a401b9bb56d4","name":"EMERGENCY OVERRIDE","style":{"label":true},"nodes":["5dc11f4b66d3cb69","cb025b5c17f4652f"],"x":14,"y":759,"w":412,"h":82},{"id":"1337ac440d36780a","type":"group","z":"f951a401b9bb56d4","name":"STARTING","style":{"label":true},"nodes":["a7721cb26de8431a","98d5d56a6855d6be"],"x":14,"y":279,"w":392,"h":82},{"id":"d96597745a6def66","type":"group","z":"f951a401b9bb56d4","name":"DATA COLLECTOR","style":{"label":true},"nodes":["de891345f522616f"],"x":1234,"y":579,"w":212,"h":82},{"id":"1826a0bb27ccf03f","type":"group","z":"f951a401b9bb56d4","name":"DASHBOARD STYLE","style":{"label":true},"nodes":["be9a740676324818"],"x":274,"y":19,"w":212,"h":82},{"id":"24c40a031b8cf421","type":"group","z":"f951a401b9bb56d4","name":"ABOUT INFORMATION","style":{"label":true},"nodes":["6e39983e0b40dc80","b1466074c182f54e","f524534e578c5d09","cc302d4a9c4afa72","070716c9c19474d0"],"x":14,"y":19,"w":172,"h":242},{"id":"e5fcb9ee03a17075","type":"group","z":"f951a401b9bb56d4","name":"MINDCONNECT  LIBRARY","style":{"label":true},"nodes":["1825f18ce73bca5a","4d1d0aaf4eb86b93"],"x":954,"y":19,"w":392,"h":82},{"id":"3fa10a145ace2b44","type":"group","z":"f951a401b9bb56d4","name":"DATA SAVING","style":{"label":true},"nodes":["24a3609bc4cb46bd","1eb7c74f230969a4","a3988621a743029e","180f7d470e66d423","414fef7cbe44d41d"],"x":1694,"y":19,"w":772,"h":162},{"id":"df302fc4819edb46","type":"group","z":"f951a401b9bb56d4","name":"MACHINE LEARNING","style":{"label":true},"nodes":["54571cbd19178bf6","2829f343b3288301","6aaaf8996c6bbb1d","1b5f33b9eb3dafed"],"x":1668,"y":773,"w":1244,"h":774},{"id":"12076bdae9fd6764","type":"group","z":"f951a401b9bb56d4","name":"","style":{"label":true},"nodes":["b7a57e82b1da9d26","a958410c502b2bbf","88aa82eab7597e29","bae09b38098f3839","e5142b8c634628f2","4e3e6878ce92fb08","1f390d11d3fb7996","05ea6e6b1910461f","1397b7bd8960c5c3","91b4d0a92bef4046","35d34bda57a299d3","b62ce165c51953bc","99ddf94b83f87e4f","5ca81b4ef1c2937d","dd7bb7f12b2e43e1","21edfa543b97e226","a3964f330f65c75b","d319a3bc063d3ded","7798a797538dbfe0","b751056798c5eb9c","66917a902111aee9","1c5fe32e523e087e","3a108d4f68ba893f","63a582fef45728c8","b91ba92c5f818e50","fdbf3849f86d5480","a5ede0445fb3edca","f464d6b167cd9afe","da41ad80805b0ee2","88b475692441ab50","b7f232083f97013d","2d5ea961cd3449a1"],"x":474,"y":759,"w":692,"h":682},{"id":"54571cbd19178bf6","type":"group","z":"f951a401b9bb56d4","g":"df302fc4819edb46","name":"REGRESSION","style":{"label":true},"nodes":["a9a2c0b18b6751ca","02f278d602dbdc7a","ece029dd8f673300","505cc5b6b97e1f38","f8d02a9dab5155ea","504e421845e5875a","a08fc5430ca70112","387a3c8b1c02f4e5","36b22ec53bdfaa3c","3da83a96cfed2fe3","1167f5c69bfa7dd7","a3f4e41f33a07242","e20f45fde206f91f","cfce6b4707132d1d","a0beed6ed610352e","b1c7564f5503c77b"],"x":1694,"y":1159,"w":1072,"h":202},{"id":"2829f343b3288301","type":"group","z":"f951a401b9bb56d4","g":"df302fc4819edb46","name":"ANOMALY DETECTION","style":{"label":true},"nodes":["69daeecc893032a4","058dc73e2fdfbb44","1348539eef49fb83","b38d389385669359","ae13eb7e5c6c236d","95fe897a0de511e5","a1f026bebe8d4904","0aedfb4efc3c9fd8","df5cfa24ef08e770"],"x":1694,"y":939,"w":1192,"h":182},{"id":"6aaaf8996c6bbb1d","type":"group","z":"f951a401b9bb56d4","g":"df302fc4819edb46","name":"PREVENTIVE MAINTENANCE ","style":{"label":true},"nodes":["22e868acd1535e0c","62a2fc0a930a6f36","bc141f90cc88bbcf","49f35f7daa1a786f","66d313db7862afa2","96ed51ead175e09a","ed42d48d5d886e5f","e75b3366c2457668"],"x":1694,"y":1379,"w":1152,"h":142},{"id":"1b5f33b9eb3dafed","type":"group","z":"f951a401b9bb56d4","g":"df302fc4819edb46","name":"CLASSIFICATION","style":{"label":true},"nodes":["ca28c08c0a2ba804","89a68d164e8f6beb","fd3a13616ad48151","b59eeecab33e09fa","e524d26c014c0d60"],"x":1694,"y":799,"w":792,"h":122},{"id":"a7721cb26de8431a","type":"inject","z":"f951a401b9bb56d4","g":"1337ac440d36780a","name":"Every 4 sec","props":[{"p":"payload"}],"repeat":"3","crontab":"","once":true,"onceDelay":0.5,"topic":"","payload":"","payloadType":"date","x":130,"y":320,"wires":[["98d5d56a6855d6be"]]},{"id":"98d5d56a6855d6be","type":"function","z":"f951a401b9bb56d4","g":"1337ac440d36780a","name":"Trigger All","func":"return msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":320,"wires":[["698a53fd4f613024","e908d40fdf5ebefa","45bac5845f88a80d","8d422ebe4954c157"]]},{"id":"698a53fd4f613024","type":"function","z":"f951a401b9bb56d4","g":"ea794a154da25d76","name":"pH Sensor","func":"let temperature = flow.get(\"Temperature\") || 25;\nlet ph;\n\nif (Math.random() < 0.6) {\n    ph = 6.5 + Math.random() * 2; // Neutral\n} else {\n    if (Math.random() < 0.5) {\n        ph = Math.random() * 6.4; // Acidic\n    } else {\n        ph = 8.6 + Math.random() * (14 - 8.6); // Basic\n    }\n}\nph -= (temperature - 25) * 0.02;\nph = +(Math.max(0, Math.min(ph, 14))).toFixed(2);\n\nflow.set(\"pH\", ph);\nmsg.payload = ph;\nmsg.topic = \"pH\";\n\n// Assign label and color for use in gauges/cards\nif (ph <= 6.5) {\n    msg.level = \"Acidic\";\n    msg.gaugeColor = \"#ea4939\"; // Red for acidic\n} else if (ph <= 8.5) {\n    msg.level = \"Neutral\";\n    msg.gaugeColor = \"#fee140\"; // Yellow for neutral\n} else {\n    msg.level = \"Basic\";\n    msg.gaugeColor = \"#0ecb81\"; // Green for basic\n}\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":260,"wires":[["4d1d0aaf4eb86b93","a30b7449fc7870b8","4fec2aefb1ad3d59","de891345f522616f"]]},{"id":"e908d40fdf5ebefa","type":"function","z":"f951a401b9bb56d4","g":"ea794a154da25d76","name":"TDS Sensor","func":"let temp = flow.get(\"Temperature\") || 25;\nlet turb = flow.get(\"Turbidity\") || 20;\nlet tds_base = 200 + (temp * 3) + (turb * 2);\nlet tds = Math.min(tds_base + (Math.random() * 100 - 50), 2000);\ntds = +tds.toFixed(2);\nflow.set(\"TDS\", tds);\nmsg.payload = tds;\nmsg.topic = \"TDS\";\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":300,"wires":[["4d1d0aaf4eb86b93","82e82cacc987bfa5","f510c537dd4130b6","de891345f522616f"]]},{"id":"45bac5845f88a80d","type":"function","z":"f951a401b9bb56d4","g":"ea794a154da25d76","name":"Temperature Sensor","func":"let temperature;\nif (Math.random() < 0.6) {\n    temperature = 20 + Math.random() * 25;\n} else {\n    temperature = 45 + Math.random() * 55;\n}\ntemperature = +temperature.toFixed(1);\nflow.set(\"Temperature\", temperature);\nmsg.payload = temperature;\nmsg.topic = \"Temperature\";\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":340,"wires":[["4d1d0aaf4eb86b93","e0a50e1f5aa9cb47","0a216f5c77f18cdf","de891345f522616f"]]},{"id":"8d422ebe4954c157","type":"function","z":"f951a401b9bb56d4","g":"ea794a154da25d76","name":"Turbidity Sensor","func":"let tds = flow.get(\"TDS\") || 500;\nlet temperature = flow.get(\"Temperature\") || 25;\nlet ph = flow.get(\"pH\") || 7;\nlet base = (tds / 10) + (temperature / 2);\nlet microbe_kill = (ph < 6.5) ? -20 : 0;\nlet safe = Math.random() < 0.6;\nlet turbidity;\nif (safe) {\n    turbidity = 10 + Math.random() * 20;\n} else {\n    turbidity = base + microbe_kill + Math.random() * 30 - 15;\n}\nturbidity = Math.max(0, Math.min(turbidity, 500));\nturbidity = +turbidity.toFixed(2);\nflow.set(\"Turbidity\", turbidity);\nmsg.payload = turbidity;\nmsg.topic = \"Turbidity\";\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":380,"wires":[["4d1d0aaf4eb86b93","31f6342eed1e67fe","04e5def9af2dd018","de891345f522616f"]]},{"id":"de891345f522616f","type":"function","z":"f951a401b9bb56d4","g":"d96597745a6def66","name":"Status Collector","func":"// --- Update last-seen timestamp for Sensor Health Panel integration ---\nif (msg.topic === \"pH\") flow.set(\"pH_last\", Date.now());\nif (msg.topic === \"TDS\") flow.set(\"TDS_last\", Date.now());\nif (msg.topic === \"Temperature\") flow.set(\"Temperature_last\", Date.now());\nif (msg.topic === \"Turbidity\") flow.set(\"Turbidity_last\", Date.now());\n\n// Store latest value in flow context\nlet key = msg.topic;\nlet value = msg.payload;\nflow.set(key, value);\n\n// Retrieve latest values\nlet pH = Number(flow.get(\"pH\")) || 0;\nlet TDS = Number(flow.get(\"TDS\")) || 0;\nlet Turbidity = Number(flow.get(\"Turbidity\")) || 0;\nlet Temperature = Number(flow.get(\"Temperature\")) || 0;\n\n// Compute parameter status (ensure data is numeric)\nlet status = {\n    pH: (pH >= 6.5 && pH <= 8.5) ? \"SAFE\" : \"UNSAFE\",\n    TDS: (TDS <= 500) ? \"SAFE\" : \"UNSAFE\",\n    Turbidity: (Turbidity >= 10 && Turbidity <= 30) ? \"SAFE\" : \"UNSAFE\",\n    Temperature: (Temperature <= 45.0) ? \"SAFE\" : \"UNSAFE\"\n};\n\n// Build list of unsafe parameters\nlet unsafe = [];\nfor (let param in status) {\n    if (status[param] === \"UNSAFE\") {\n        unsafe.push(param);\n    }\n}\n\n// Manual flush/override logic\nlet manualFlush = flow.get(\"manual_flush_active\") || false;\nlet valveStatus = (manualFlush === true) ? \"OPEN\" : (unsafe.length === 0 ? \"OPEN\" : \"CLOSED\");\nflow.set(\"valve_status\", valveStatus);\n\n// Smart message logic (improved structure & consistency)\nlet message = \"\";\nif (unsafe.length === 0) {\n    message = \"✅ All parameters are safe. Water is clean for discharge.\";\n} else if (unsafe.length === 1) {\n    switch (unsafe[0]) {\n        case \"pH\":\n            message = \"⚠️ pH is out of range. May cause chemical imbalance.\";\n            break;\n        case \"TDS\":\n            message = \"⚠️ High TDS detected. Excess dissolved solids.\";\n            break;\n        case \"Turbidity\":\n            message = \"⚠️ Water is murky due to high turbidity.\";\n            break;\n        case \"Temperature\":\n            message = \"⚠️ Water is too hot. May harm aquatic life.\";\n            break;\n    }\n} else if (unsafe.length === 2) {\n    if (unsafe.includes(\"pH\") && unsafe.includes(\"TDS\")) {\n        message = \"❌ pH and TDS are unsafe. Check chemical quality.\";\n    } else if (unsafe.includes(\"Turbidity\") && unsafe.includes(\"Temperature\")) {\n        message = \"❌ Water is hot and murky. Unsafe to release.\";\n    } else {\n        message = `❌ ${unsafe.join(\" & \")} are unsafe. Caution advised.`;\n    }\n} else if (unsafe.length === 3) {\n    message = `🚨 Multiple issues: ${unsafe.join(\", \")} are unsafe.`;\n} else {\n    message = \"🚨 All parameters are unsafe! Discharge prohibited.\";\n}\n\n// Output message for dashboard and downstream nodes\nmsg.payload = {\n    pH: status.pH,\n    TDS: status.TDS,\n    Turbidity: status.Turbidity,\n    Temperature: status.Temperature,\n    valveStatus: valveStatus,\n    smartMessage: message,\n    pH_value: pH,\n    TDS_value: TDS,\n    Turbidity_value: Turbidity,\n    Temperature_value: Temperature\n};\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1340,"y":620,"wires":[["22e6f1a6f559dd7a","c6346aaf246576ac","2ecc8045449d8f3e","a09cadc905c280e2","c487e70540948542","de9f235684bb3aad","ce20c883f171ae71","1eb7c74f230969a4","ca28c08c0a2ba804","24a3609bc4cb46bd"]]},{"id":"22e6f1a6f559dd7a","type":"ui_template","z":"f951a401b9bb56d4","g":"e014542aec6265e4","group":"dash_grp","name":"Status","order":1,"width":21,"height":2,"format":"<style>\n  .status-bar-row {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    gap: 18px;\n    margin: 20px 0 8px 0;\n    flex-wrap: wrap;\n  }\n\n  .status-pill {\n    min-width: 90px;\n    padding: 13px 22px 11px 22px;\n    border-radius: 14px;\n    font-weight: 700;\n    letter-spacing: 0.03em;\n    font-size: 1.08em;\n    text-align: center;\n    backdrop-filter: blur(9px) brightness(1.05);\n    box-shadow: 0 2.5px 7px #0ecb8045, 0 1px 14px #1e1b4070;\n    display: inline-block;\n    border: 1.7px solid #2f425966;\n    background: rgba(29, 38, 58, 0.65);\n    color: #ddd;\n    transition: all 0.3s ease;\n  }\n\n  .status-safe {\n    background: linear-gradient(100deg, #1f3b2f90 10%, #22c55e30 90%);\n    color: #26f06b;\n    border: 2px solid #22c55eaa;\n    box-shadow: 0 0 14px #31f68a80, 0 0 8px #22c55e50 inset;\n    text-shadow: 0 1px 4px #21fca055;\n  }\n\n  .status-bad {\n    background: linear-gradient(100deg, #341f1f90 10%, #ea493940 90%);\n    color: #ff5e5e;\n    border: 2px solid #ea4939aa;\n    box-shadow: 0 0 14px #ff5f9980, 0 0 8px #ff3f5f50 inset;\n    text-shadow: 0 1px 4px #fc3e5085;\n  }\n\n  .status-pill span {\n    font-weight: 900;\n    letter-spacing: 0.05em;\n    margin-left: 10px;\n    color: inherit;\n  }\n\n  @media (max-width: 600px) {\n    .status-bar-row {\n      flex-direction: column;\n      gap: 14px;\n    }\n    .status-pill {\n      width: 96%;\n      min-width: 0;\n    }\n  }\n</style>\n\n<div class=\"status-bar-row\">\n  <div class=\"status-pill\"\n    ng-class=\"msg.payload.pH === 'SAFE' ? 'status-safe' : 'status-bad'\">\n    pH: <span>{{msg.payload.pH}}</span>\n  </div>\n  <div class=\"status-pill\"\n    ng-class=\"msg.payload.TDS === 'SAFE' ? 'status-safe' : 'status-bad'\">\n    TDS: <span>{{msg.payload.TDS}}</span>\n  </div>\n  <div class=\"status-pill\"\n    ng-class=\"msg.payload.Turbidity === 'SAFE' ? 'status-safe' : 'status-bad'\">\n    Turbidity: <span>{{msg.payload.Turbidity}}</span>\n  </div>\n  <div class=\"status-pill\"\n    ng-class=\"msg.payload.Temperature === 'SAFE' ? 'status-safe' : 'status-bad'\">\n    Temp: <span>{{msg.payload.Temperature}}</span>\n  </div>\n</div>\n","storeOutMessages":true,"fwdInMessages":false,"resendOnRefresh":true,"templateScope":"local","className":"","x":1750,"y":320,"wires":[[]]},{"id":"ce20c883f171ae71","type":"function","z":"f951a401b9bb56d4","g":"b04ddca6719d1577","name":"graph","func":"let msgs = [];\nlet pH = flow.get(\"pH\") || 0;\nlet TDS = flow.get(\"TDS\") || 0;\nlet Temperature = flow.get(\"Temperature\") || 0;\nlet Turbidity = flow.get(\"Turbidity\") || 0;\nmsgs.push({ topic: \"pH\", payload: pH });\nmsgs.push({ topic: \"TDS\", payload: TDS });\nmsgs.push({ topic: \"Temperature\", payload: Temperature });\nmsgs.push({ topic: \"Turbidity\", payload: Turbidity });\nreturn [msgs];","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":460,"wires":[["cefee58f960a37b2"]]},{"id":"cefee58f960a37b2","type":"ui_chart","z":"f951a401b9bb56d4","g":"b04ddca6719d1577","name":"Real-time Chart","group":"46dbe4179151e83e","order":2,"width":28,"height":16,"label":"Real-time Sensor Data","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"10000","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1920,"y":460,"wires":[[]]},{"id":"c6346aaf246576ac","type":"ui_template","z":"f951a401b9bb56d4","g":"e014542aec6265e4","group":"5825206d34439e3a","name":"Smart Message","order":1,"width":20,"height":6,"format":"<div class=\"smart-msg-banner-giant important-anim\"\n  ng-class=\"{\n    'smart-msg-safe': msg.payload.smartMessage && msg.payload.smartMessage.includes('Safe'),\n    'smart-msg-warning': msg.payload.smartMessage && msg.payload.smartMessage.includes('Warning'),\n    'smart-msg-unsafe': msg.payload.smartMessage && msg.payload.smartMessage.includes('Unsafe'),\n    'smart-msg-check': msg.payload.smartMessage && msg.payload.smartMessage.includes('Check'),\n    'smart-msg-default': !msg.payload.smartMessage\n      || (msg.payload.smartMessage && !msg.payload.smartMessage.match(/Safe|Warning|Unsafe|Check/))\n  }\"\n>\n  <span class=\"msg-type-icon giant\"\n    ng-if=\"msg.payload.smartMessage && msg.payload.smartMessage.includes('Safe')\">✅</span>\n  <span class=\"msg-type-icon giant\"\n    ng-if=\"msg.payload.smartMessage && msg.payload.smartMessage.includes('Warning')\">⚠️</span>\n  <span class=\"msg-type-icon giant\"\n    ng-if=\"msg.payload.smartMessage && msg.payload.smartMessage.includes('Unsafe')\">❌</span>\n  <span class=\"msg-type-icon giant\"\n    ng-if=\"msg.payload.smartMessage && msg.payload.smartMessage.includes('Check')\">🔎</span>\n  <span class=\"msg-content-cool\">{{msg.payload.smartMessage}}</span>\n</div>\n\n<style>\n.smart-msg-banner-giant {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 36px;\n  justify-content: flex-start;\n  padding: 46px 42px 46px 40px;\n  text-align: left;\n  font-size: 2.6em; /* Bigger base size! */\n  font-weight: 800;\n  color: #fff;\n  border-radius: 28px;\n  margin: 48px auto 32px auto;\n  letter-spacing: .035em;\n  font-family: 'Segoe UI', 'Orbitron', 'Arial Black', sans-serif;\n  max-width: 820px;\n  background: rgba(35, 41, 81, 0.77);\n  backdrop-filter: blur(16px);\n  overflow: hidden;\n  box-shadow:\n    0 8px 48px 8px #1156c044,\n    0 4px 28px #21e0b144,\n    0 0 0 8px #47d3e255;\n  border-left: 14px solid #5ca8ff;\n  transition: box-shadow 0.22s, background 0.35s;\n  animation: bannerPop 0.78s cubic-bezier(.23,1.61,.58,1) 1;\n}\n@keyframes bannerPop {\n  0% { transform: scale(.89) translateY(36px); opacity: 0; }\n  74% { transform: scale(1.05) translateY(-12px);}\n  100% { transform: scale(1) translateY(0); opacity: 1;}\n}\n.smart-msg-banner-giant .msg-type-icon.giant {\n  font-size: 3.2em;\n  margin-right: 18px;\n  filter: drop-shadow(0 6px 26px #fff8), drop-shadow(0 2px 8px #92ffe1bb);\n  opacity: 0.95;\n  transition: transform 0.3s;\n  animation: bounceIn 1.2s;\n}\n@keyframes bounceIn {\n  0% { transform: scale(0.7); opacity: 0.3;}\n  65% { transform: scale(1.15);}\n  100% { transform: scale(1); opacity: 1;}\n}\n.smart-msg-banner-giant .msg-content-cool {\n  flex: 1 1 auto;\n  line-height: 1.18em;\n  font-size: 1.18em;\n  font-weight: 900;\n  text-shadow:\n    0 2px 18px #0ffbb5cc,\n    0 0 12px #00ffc979;\n  transition: color 0.2s;\n  letter-spacing: .02em;\n  word-break: break-word;\n}\n\n/* Animated pulse for important banners */\n.smart-msg-banner-giant.important-anim {\n  animation: important-glow-extreme 2.3s infinite alternate;\n}\n\n@keyframes important-glow-extreme {\n  0% {\n    box-shadow:\n      0 8px 40px #ffd70077,\n      0 2px 23px #1156c044,\n      0 4px 32px #21e0b144,\n      0 0 0 8px #ffd70055;\n  }\n  50% {\n    box-shadow:\n      0 12px 64px #ffd700d5,\n      0 2px 29px #ffe666a6,\n      0 4px 32px #21e0b1bb,\n      0 0 0 11px #ffd70088;\n  }\n  100% {\n    box-shadow:\n      0 8px 40px #ffd70077,\n      0 2px 23px #1156c044,\n      0 4px 32px #21e0b144,\n      0 0 0 8px #ffd70055;\n  }\n}\n\n/* Status-dependent backgrounds and details */\n.smart-msg-safe { \n  background: linear-gradient(96deg, #20ec96 65%, #12c671 100%, #16ffdb 190%);\n  color: #fff;\n  border-left-color: #11faab;\n  box-shadow: 0 8px 48px #46fbae67, 0 4px 28px #23ffe948, 0 0 0 8px #09d19855;\n}\n.smart-msg-warning { \n  background: linear-gradient(98deg, #fff558 65%, #ffa800 100%);\n  color: #2c2c14;\n  border-left-color: #fae10d;\n  box-shadow: 0 7px 43px #fff476ac, 0 2px 18px #fff46a99;\n}\n.smart-msg-unsafe {\n  background: linear-gradient(98deg, #ff5d81 65%, #ea2000 100%);\n  color: #fcefef;\n  border-left-color: #ff2774;\n  box-shadow: 0 7px 44px #ff4f4fcd, 0 2px 19px #ffb9b997;\n}\n.smart-msg-check {\n  background: linear-gradient(98deg, #9f6aff 70%, #2e3192 100%);\n  color: #ffe8ff;\n  border-left-color: #b47cfc;\n  box-shadow: 0 8px 40px #ba95ff77, 0 2px 25px #7c5bd9cc;\n}\n.smart-msg-default {\n  background: linear-gradient(100deg, #252f4b 67%, #1a2236 100%);\n  color: #dde3f1;\n  border-left-color: #586aa9;\n  box-shadow: 0 6px 35px #22396666, 0 2px 14px #7bb8f9cc;\n}\n</style>\n","storeOutMessages":true,"fwdInMessages":false,"resendOnRefresh":true,"templateScope":"local","className":"","x":1780,"y":360,"wires":[[]]},{"id":"31f6342eed1e67fe","type":"ui_template","z":"f951a401b9bb56d4","g":"c8a05a80b8522e0c","group":"01f89b94e7de115a","name":"Turbidity Box","order":4,"width":10,"height":4,"format":"<div style=\"\n  margin: 16px auto;\n  padding: 22px 18px;\n  max-width: 340px;\n  background: linear-gradient(145deg, rgba(19,25,43,0.9), rgba(32,44,75,0.88));\n  border: 2px solid rgba(45,185,252,0.5);\n  border-radius: 18px;\n  box-shadow: 0 6px 24px #2db9fc55, 0 3px 18px #000c;\n  backdrop-filter: blur(6px);\n  font-family: 'Montserrat', 'Century Gothic', Arial, sans-serif;\n  color: #fff;\n  text-align: center;\n  \">\n  <div style=\"\n    font-size: 22px;\n    font-weight: 800;\n    letter-spacing: .035em;\n    color: #fde047;\n    margin-bottom: 10px;\n    text-shadow: 0 2px 10px #facc1577, 0 0 6px #fff2;\">\n    Turbidity\n  </div>\n  <span style=\"\n    display: inline-block;\n    background: linear-gradient(120deg,#1facfbdd 60%,#ffffff05 100%);\n    border-radius: 14px;\n    padding: 7px 26px;\n    font-size: 2.35em;\n    font-weight: 900;\n    color: #53ff7a;\n    box-shadow: 0 0 20px #1facfb88, 0 0 12px #1facfb33 inset;\n    letter-spacing: 0.045em;\n    text-shadow: 0 1px 8px #53ff7a66;\">\n    {{msg.payload}}\n  </span>\n  <span style=\"\n    font-size: 1em;\n    color: #e5e7eb;\n    margin-left: 8px;\n    font-weight: 600;\n    opacity: 0.88;\n    text-shadow: 0 0 6px #fff1;\">\n    NTU\n  </span>\n</div>\n","storeOutMessages":true,"fwdInMessages":false,"resendOnRefresh":true,"templateScope":"local","className":"","x":1330,"y":300,"wires":[[]]},{"id":"258dfafa3855cff1","type":"file in","z":"f951a401b9bb56d4","g":"bda6c5d33570dd19","name":"Read waterlog.jsonl","filename":"C:/Users/acer/OneDrive/Desktop/waterlog.jsonl","filenameType":"str","format":"utf8","allProps":false,"x":330,"y":640,"wires":[["f0f8a32d296422c1"]]},{"id":"f0f8a32d296422c1","type":"function","z":"f951a401b9bb56d4","g":"bda6c5d33570dd19","name":"Parse + Filter JSONL","func":"// msg.payload = content of JSONL file (raw string)\nconst lines = msg.payload.split(\"\\n\").filter(line => line.trim());\nconst now = new Date();\nlet startTime = new Date(now);\n\nswitch (msg.topic) {\n    case \"1h\":  startTime.setHours(now.getHours() - 1); break;\n    case \"24h\": startTime.setHours(now.getHours() - 24); break;\n    case \"7d\":  startTime.setDate(now.getDate() - 7); break;\n    default: startTime = new Date(0); // default: all data\n}\n\nlet pH=[], TDS=[], Temperature=[], Turbidity=[], labels=[];\n\nfor (let line of lines) {\n    try {\n        let rec = JSON.parse(line);\n        const ts = new Date(rec.timestamp);\n        if (ts >= startTime && ts <= now) {\n            labels.push(ts.toLocaleTimeString());\n            pH.push(Number(rec.pH));\n            TDS.push(Number(rec.TDS));\n            Temperature.push(Number(rec.Temperature));\n            Turbidity.push(Number(rec.Turbidity));\n        }\n    } catch (err) {\n        // Ignore malformed line\n    }\n}\n\nmsg.payload = {\n    series: [\"pH\", \"TDS\", \"Temperature\", \"Turbidity\"],\n    data: [pH, TDS, Temperature, Turbidity],\n    labels: labels\n};\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":640,"wires":[["cf956bf7769be3cb","5e69fdfc36e1849e"]]},{"id":"cf956bf7769be3cb","type":"debug","z":"f951a401b9bb56d4","g":"bda6c5d33570dd19","name":"debug 5","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":760,"y":680,"wires":[]},{"id":"2ecc8045449d8f3e","type":"ui_template","z":"f951a401b9bb56d4","g":"e014542aec6265e4","group":"45365d6b6e9cf321","name":"Valve Status Widget","order":1,"width":6,"height":2,"format":"<style>\n  .valve-status-card {\n    background: linear-gradient(125deg, #0d1a2f 70%, #1d2f51 100%);\n    border-radius: 17px;\n    padding: 20px 10px;\n    max-width: 420px;\n    margin: 17px auto 0 auto;\n    font-size: 1.34em;\n    color: #ffffff;\n    font-family: 'Fira Mono', 'Segoe UI', sans-serif;\n    text-align: center;\n    font-weight: 700;\n    box-shadow: 0 4px 18px #00ffc234, 0 3px 30px #33f8b160, 0 0 55px #1cc4c455;\n    border: 1.6px solid #2a3c5f;\n    letter-spacing: .045em;\n    backdrop-filter: blur(9px) brightness(1.1);\n    transition: all 0.3s ease-in-out;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .valve-status-card::after {\n    content: \"\";\n    position: absolute;\n    inset: 0;\n    border-radius: 17px;\n    background: linear-gradient(145deg, transparent 80%, #0fffc628 100%);\n    box-shadow: inset 0 0 80px #1efb9044;\n    pointer-events: none;\n    z-index: 1;\n  }\n\n  .valve-status-badge {\n    display: inline-block;\n    margin-left: 12px;\n    padding: 7px 20px;\n    border-radius: 30px;\n    font-weight: 900;\n    letter-spacing: .05em;\n    font-size: 1.12em;\n    background: #26334d;\n    position: relative;\n    z-index: 2;\n    transition: 0.25s ease;\n  }\n\n  .valve-open {\n    color: #0eff9c;\n    background: linear-gradient(90deg, #2dfcb370 0%, #1efca8aa 100%);\n    border: 2px solid #15ff99;\n    box-shadow: 0 0 14px #38ffcc80, 0 0 4px #11ff9980 inset;\n    text-shadow: 0 0 6px #2affc879;\n  }\n\n  .valve-closed {\n    color: #ff4e6b;\n    background: linear-gradient(90deg, #ff557570 0%, #fc3c6485 100%);\n    border: 2px solid #ff3e6c;\n    box-shadow: 0 0 14px #ff5f9980, 0 0 4px #ff3f5f80 inset;\n    text-shadow: 0 0 6px #ff728779;\n  }\n</style>\n\n<div class=\"valve-status-card\">\n  Valve is\n  <span class=\"valve-status-badge\"\n        ng-class=\"msg.payload.valveStatus === 'OPEN' ? 'valve-open' : 'valve-closed'\">\n    {{msg.payload.valveStatus}}\n  </span>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1800,"y":280,"wires":[["b493abc4c9567c0d"]]},{"id":"b493abc4c9567c0d","type":"function","z":"f951a401b9bb56d4","g":"e014542aec6265e4","name":"Valve Timer & Counter Logic","func":"// Payload: msg.payload.valveStatus = \"OPEN\" or \"CLOSED\"\nconst status = msg.payload.valveStatus;\nconst now = Date.now();\nconst today = new Date().toISOString().slice(0, 10);\n\nlet data = flow.get(\"valveTracker\") || {\n    date: today,\n    count: 0,\n    open: false,\n    lastOpened: null,\n    totalSecondsOpen: 0\n};\n\n// Reset daily\nif (data.date !== today) {\n    data = {\n        date: today,\n        count: 0,\n        open: false,\n        lastOpened: null,\n        totalSecondsOpen: 0\n    };\n}\n\nif (status === \"OPEN\") {\n    if (!data.open) {\n        // Valve just opened\n        data.count++;\n        data.open = true;\n        data.lastOpened = now;\n    } else {\n        // Valve remains open, update time\n        data.open = true;\n    }\n} else if (status === \"CLOSED\" && data.open) {\n    // Valve just closed\n    const duration = Math.floor((now - data.lastOpened) / 1000);\n    data.totalSecondsOpen += duration;\n    data.open = false;\n    data.lastOpened = null;\n}\n\n// Live update seconds if valve still open\nlet currentTotal = data.totalSecondsOpen;\nif (data.open && data.lastOpened) {\n    currentTotal += Math.floor((now - data.lastOpened) / 1000);\n}\n\nflow.set(\"valveTracker\", data);\n\n// Format as HH:MM:SS\nfunction formatTime(secs) {\n    const h = Math.floor(secs / 3600);\n    const m = Math.floor((secs % 3600) / 60);\n    const s = secs % 60;\n    return `${h}h ${m}m ${s}s`;\n}\n\nmsg.payload = {\n    valveStatus: status,\n    discharge_count_today: data.count,\n    openSeconds: currentTotal,\n    formatted_time: formatTime(currentTotal),\n    date: today\n};\n\nreturn msg;","outputs":1,"x":2060,"y":280,"wires":[["f8c93a1c224e2d51"]]},{"id":"4fec2aefb1ad3d59","type":"ui_chart","z":"f951a401b9bb56d4","g":"2e23eec490713d78","name":"","group":"773f31f85a73f828","order":3,"width":14,"height":9,"label":"pH Chart","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"1000","removeOlderUnit":"86400","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#2de15a","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1320,"y":400,"wires":[[]]},{"id":"f510c537dd4130b6","type":"ui_chart","z":"f951a401b9bb56d4","g":"2e23eec490713d78","name":"","group":"773f31f85a73f828","order":22,"width":14,"height":9,"label":"TDS Chart","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"1000","removeOlderUnit":"86400","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#477190","#5d7da8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1330,"y":440,"wires":[[]]},{"id":"0a216f5c77f18cdf","type":"ui_chart","z":"f951a401b9bb56d4","g":"2e23eec490713d78","name":"","group":"773f31f85a73f828","order":2,"width":14,"height":9,"label":"Temperature Chart","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"1000","removeOlderUnit":"86400","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#ea1f29","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1350,"y":480,"wires":[[]]},{"id":"04e5def9af2dd018","type":"ui_chart","z":"f951a401b9bb56d4","g":"2e23eec490713d78","name":"","group":"773f31f85a73f828","order":23,"width":14,"height":9,"label":"Turbidity Chart","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"1000","removeOlderUnit":"86400","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#994cc2","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":1340,"y":520,"wires":[[]]},{"id":"a09cadc905c280e2","type":"function","z":"f951a401b9bb56d4","g":"f3bac752d535526d","name":"Daily Min/Max/Avg (All Sensors)","func":"// Use the numeric sensor fields from your payload\nconst sensors = [\"pH_value\", \"TDS_value\", \"Temperature_value\", \"Turbidity_value\"];\n\nconst now = new Date();\nconst today = now.toISOString().slice(0, 10);\n\nlet stats = flow.get(\"daily_sensor_stats\") || {};\n\nlet updated = false;\n\nsensors.forEach(field => {\n    const val = Number(msg.payload[field]);\n    if (isNaN(val)) return; // skip invalid number\n\n    if (!stats[field] || stats[field].date !== today) {\n        // Initialize stats for today\n        stats[field] = {\n            date: today,\n            min: val,\n            max: val,\n            sum: val,\n            count: 1\n        };\n        updated = true;\n    } else {\n        // Update existing daily stats\n        stats[field].min = Math.min(stats[field].min, val);\n        stats[field].max = Math.max(stats[field].max, val);\n        stats[field].sum += val;\n        stats[field].count += 1;\n        updated = true;\n    }\n});\n\nif (updated) {\n    flow.set(\"daily_sensor_stats\", stats);\n}\n\n// Prepare dashboard output using friendly keys (without _value suffix)\nlet output = {};\nsensors.forEach(field => {\n    if (stats[field] && stats[field].count > 0) {\n        // Convert field key to short version by removing '_value'\n        let shortKey = field.replace('_value', '');\n        output[shortKey] = {\n            min: stats[field].min,\n            max: stats[field].max,\n            avg: Number((stats[field].sum / stats[field].count).toFixed(2)),\n            count: stats[field].count\n        };\n    }\n});\n\nmsg.payload = output;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1830,"y":560,"wires":[["82361c5f9a79d9c9"]]},{"id":"82361c5f9a79d9c9","type":"ui_template","z":"f951a401b9bb56d4","g":"f3bac752d535526d","group":"d528b61e57e1037d","name":"Min/Max/Avg Card (All Sensors)","order":1,"width":10,"height":9,"format":"<style>\n  .sensor-stats-wrap {\n    background: linear-gradient(145deg, #111827, #1f2937);\n    border-radius: 22px;\n    padding: 28px 18px 24px 18px;\n    max-width: 440px;\n    margin: 24px auto;\n    box-shadow: 0 4px 24px #232c4533, 0 2px 14px #0ecb8131, inset 0 0 10px #ffffff0d;\n    border: 1.5px solid #ffffff0a;\n  }\n\n  .sensor-stats-title {\n    color: #fee140;\n    font-weight: 900;\n    margin-bottom: 20px;\n    text-align: center;\n    font-size: 1.33rem;\n    letter-spacing: 0.025em;\n    text-shadow: 0 2.5px 20px #21314D70;\n  }\n\n  .sensor-stats-table {\n    width: 100%;\n    font-size: 1.13em;\n    border-collapse: separate;\n    border-spacing: 0 14px;\n    color: #e2eaff;\n  }\n\n  .sensor-stats-table th {\n    color: #5bff8a;\n    font-weight: 700;\n    letter-spacing: .05em;\n    padding: 8px 3px;\n    text-align: center;\n    text-shadow: 0 1px 6px #14eaa240;\n  }\n\n  .sensor-stats-table td {\n    font-weight: 500;\n    padding: 8px 10px;\n    border-radius: 12px !important;\n    background: rgba(28, 37, 56, 0.82);\n    text-align: center;\n    box-shadow: inset 0 0 5px #1a254060;\n    transition: 0.3s ease;\n  }\n\n  .sensor-stats-table td:first-child {\n    text-align: left;\n    font-weight: 800;\n    color: #fee140;\n    background: linear-gradient(90deg, #111827ee, #1c223b);\n    letter-spacing: 0.4px;\n    border-left: 3px solid #fee14088;\n  }\n\n  .stat-min {\n    background: linear-gradient(90deg, #2b5244 10%, #16a34a 90%) !important;\n    color: #34f58f;\n    font-weight: 800;\n    padding: 5px 14px !important;\n    border-radius: 10px;\n    box-shadow: 0 1px 8px #00ff8875;\n  }\n\n  .stat-max {\n    background: linear-gradient(90deg, #3e2c17 10%, #f59e0b 85%) !important;\n    color: #ffe48b;\n    font-weight: 800;\n    padding: 5px 14px !important;\n    border-radius: 10px;\n    box-shadow: 0 1px 8px #ffbb3375;\n  }\n\n  .stat-avg {\n    background: linear-gradient(90deg, #203c6d 20%, #3b82f6 80%) !important;\n    color: #60a9ff;\n    font-weight: 800;\n    padding: 5px 14px !important;\n    border-radius: 10px;\n    box-shadow: 0 1px 8px #2da1ff88;\n  }\n\n  .sensor-stats-footnote {\n    color: #9ec3ff;\n    font-size: 0.94em;\n    text-align: center;\n    margin-top: 20px;\n    letter-spacing: .035em;\n    opacity: 0.78;\n    text-shadow: 0 0 5px #1f3b7e33;\n  }\n\n  @media (max-width:600px) {\n    .sensor-stats-wrap {\n      max-width: 96vw;\n      padding: 16px 4vw;\n    }\n\n    .sensor-stats-table {\n      font-size: 1em;\n    }\n  }\n</style>\n<div class=\"sensor-stats-wrap\">\n  <div class=\"sensor-stats-title\">Today's Sensor Stats</div>\n  <table class=\"sensor-stats-table\">\n    <tr>\n      <th>Sensor</th>\n      <th>Min</th>\n      <th>Max</th>\n      <th>Avg</th>\n    </tr>\n    <tr ng-repeat=\"sensor in ['pH','TDS','Temperature','Turbidity']\">\n      <td>{{sensor}}</td>\n      <td><span class=\"stat-min\">{{msg.payload[sensor].min}}</span></td>\n      <td><span class=\"stat-max\">{{msg.payload[sensor].max}}</span></td>\n      <td><span class=\"stat-avg\">{{msg.payload[sensor].avg}}</span></td>\n    </tr>\n  </table>\n  <p class=\"sensor-stats-footnote\">Resets at midnight • Live updating</p>\n</div>\n","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":true,"templateScope":"local","className":"","x":2170,"y":560,"wires":[[]]},{"id":"c487e70540948542","type":"function","z":"f951a401b9bb56d4","g":"f3bac752d535526d","name":"Compute WQI","func":"// Extract latest numeric sensor values from input payload\nlet pH = Number(msg.payload.pH_value);\nlet TDS = Number(msg.payload.TDS_value);\nlet Turbidity = Number(msg.payload.Turbidity_value);\nlet Temperature = Number(msg.payload.Temperature_value);\n\n// Define WQI calculation parameters (standards and weights based on norms)\nlet params = [\n    { name: \"pH\", value: pH, ideal: 7, standard: 8.5, weight: 0.22 },\n    { name: \"TDS\", value: TDS, ideal: 0, standard: 500, weight: 0.28 },\n    { name: \"Temperature\", value: Temperature, ideal: 25, standard: 45, weight: 0.22 },\n    { name: \"Turbidity\", value: Turbidity, ideal: 0, standard: 30, weight: 0.28 }\n];\n\n// Weighted WQI calculation\nlet sum_WQ = 0, sum_W = 0;\nparams.forEach(param => {\n    let q = 100 * Math.abs((param.value - param.ideal) / (param.standard - param.ideal));\n    if (q > 100 || isNaN(q)) q = 100; // Limit or default for missing/malformed data\n    sum_WQ += q * param.weight;\n    sum_W += param.weight;\n});\nlet WQI = sum_WQ / sum_W;\n\n// Categorize WQI for display\nlet quality = \"Poor\";\nif (WQI >= 95) quality = \"Excellent\";\nelse if (WQI >= 89) quality = \"Very Good\";\nelse if (WQI >= 80) quality = \"Good\";\nelse if (WQI >= 65) quality = \"Fair\";\nelse if (WQI >= 45) quality = \"Marginal\";\n\n// --- Key FIX: set msg.payload directly to number (best for badge) ---\nmsg.payload = {\n    WQI: Number(WQI.toFixed(2)),\n    WQI_quality: quality\n};\n// Optional: also set msg.wqi = number to catch all badge cases\nmsg.wqi = Number(WQI.toFixed(2));\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1780,"y":600,"wires":[["d052879566078f54"]]},{"id":"de9f235684bb3aad","type":"function","z":"f951a401b9bb56d4","g":"5d136533d7eec2c8","name":"Sensor Health Checker","func":"let now = Date.now();\nlet healthyInterval = 0.1 * 60 * 1000;    // 2 minutes in ms\nlet warningInterval = 0.2 * 60 * 1000;    // 5 minutes in ms\n\nlet sensors = [\n  { name: \"pH\", last: flow.get(\"pH_last\"), needsCalibration: flow.get(\"pH_cal\") },\n  { name: \"TDS\", last: flow.get(\"TDS_last\"), needsCalibration: flow.get(\"TDS_cal\") },\n  { name: \"Temperature\", last: flow.get(\"Temperature_last\"), needsCalibration: flow.get(\"Temperature_cal\") },\n  { name: \"Turbidity\", last: flow.get(\"Turbidity_last\"), needsCalibration: flow.get(\"Turbidity_cal\") }\n];\n\nlet output = sensors.map(s => {\n    let minsAgo = s.last ? Math.floor((now - s.last) / 60000) : null;\n    let status = \"\";\n    let icon = \"\";\n    let color = \"\";\n    if (s.needsCalibration) {\n        status = \"CALIBRATE\";\n        icon = \"🔧\";\n        color = \"#ffa500\";\n    } else if (s.last === undefined || s.last === null) {\n        status = \"OFFLINE\";\n        icon = \"🔴\";\n        color = \"#ff0000\";\n    } else if ((now - s.last) <= healthyInterval) {\n        status = \"HEALTHY\";\n        icon = \"🟢\";\n        color = \"#008000\";\n    } else if ((now - s.last) <= warningInterval) {\n        status = \"WARNING\";\n        icon = \"🟡\";\n        color = \"#f1c232\";\n    } else {\n        status = \"OFFLINE\";\n        icon = \"🔴\";\n        color = \"#ff0000\";\n    }\n    return {\n        Sensor: s.name,\n        Status: status,\n        Icon: icon,\n        Color: color,\n        \"Last Seen\": minsAgo === null ? \"Never\" : (minsAgo === 0 ? \"Just Now\" : `${minsAgo} min ago`)\n    };\n});\nmsg.payload = output;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":700,"wires":[["9f8ebdafc659108d"]]},{"id":"9f8ebdafc659108d","type":"ui_template","z":"f951a401b9bb56d4","g":"5d136533d7eec2c8","group":"d985cc9ae7642718","name":"Sensor Health Status Card","order":1,"width":10,"height":12,"format":"<style>\n  .sens-health-card {\n    background: linear-gradient(145deg, #111827 40%, #1f2937 100%);\n    border-radius: 18px;\n    box-shadow: 0 6px 32px #0ecb8122, 0 3px 12px #1e2d45cc;\n    padding: 2px 0 18px 0;\n    max-width: 460px;\n    margin: 16px auto 25px auto;\n    border: 1.5px solid #2d3748;\n    position: relative;\n    overflow: hidden;\n    backdrop-filter: blur(12px);\n  }\n\n  .sens-health-card::before {\n    content: '';\n    position: absolute;\n    inset: -1px;\n    border-radius: 18px;\n    background: linear-gradient(125deg, #0efcb9cc, #14e0f0cc, #4b8bffcc, #0efcb9cc);\n    background-size: 400% 400%;\n    animation: borderFlow 8s linear infinite;\n    z-index: 0;\n    opacity: 0.15;\n  }\n\n  @keyframes borderFlow {\n    0% {\n      background-position: 0% 50%;\n    }\n\n    50% {\n      background-position: 100% 50%;\n    }\n\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n\n  .sens-health-title {\n    margin: 0 0 17px 0;\n    text-align: center;\n    color: #ffe55c;\n    font-weight: 800;\n    letter-spacing: .02em;\n    font-size: 1.33rem;\n    padding: 16px 0 2px 0;\n    text-shadow: 0 0 6px #fee14099, 0 0 20px #fff00033;\n    position: relative;\n    z-index: 1;\n  }\n\n  .sens-health-table {\n    width: 95%;\n    font-size: 1.08em;\n    margin: auto;\n    border-collapse: separate;\n    border-spacing: 0 9px;\n    position: relative;\n    z-index: 1;\n  }\n\n  .sens-health-table th {\n    color: #00ffb7;\n    font-weight: 700;\n    letter-spacing: .04em;\n    text-align: center;\n    background: none !important;\n    padding: 6px 4px;\n    font-size: 1.06em;\n    text-shadow: 0 0 2px #00ffb799;\n  }\n\n  .sens-health-table td {\n    background: linear-gradient(90deg, #1e2536 60%, #202849 100%);\n    font-weight: 600;\n    border-radius: 9px;\n    color: #c7e3fa;\n    padding: 7px 12px;\n    box-shadow: 0 1.5px 6px #0ecb8130;\n    backdrop-filter: brightness(1.06);\n    transition: all 0.25s ease;\n  }\n\n  .sens-health-table td:first-child {\n    text-align: left;\n    color: #ffdf6c;\n    font-weight: 700;\n    letter-spacing: .01em;\n    text-shadow: 0 0 4px #ffe98a77;\n  }\n\n  .sens-status-badge {\n    display: inline-block;\n    min-width: 70px;\n    border-radius: 30px;\n    padding: 6px 18px 6px 14px;\n    font-weight: 700;\n    font-size: 1.05em;\n    letter-spacing: .04em;\n    background: #323c5b;\n    color: #fff;\n    transition: all 0.3s ease-in-out;\n    text-shadow: 0 1px 2px #000;\n    box-shadow: 0 2px 7px #0ecb8144;\n  }\n\n  .sens-status-badge.green {\n    background: linear-gradient(90deg, #1ed96e 60%, #2de96a 100%);\n    color: #ffffff;\n    box-shadow: 0 2px 12px #18fc8a66;\n  }\n\n  .sens-status-badge.red {\n    background: linear-gradient(90deg, #ff3e55 60%, #be2525 100%);\n    color: #ffffff;\n    box-shadow: 0 2px 12px #ff475755;\n  }\n\n  .sens-status-badge.yellow {\n    background: linear-gradient(90deg, #fce97c 50%, #ffba08 100%);\n    color: #232c45;\n    box-shadow: 0 2px 14px #fee14099;\n  }\n\n  @media (max-width:600px) {\n    .sens-health-card {\n      max-width: 95vw;\n    }\n\n    .sens-health-table {\n      font-size: .95em;\n    }\n\n    .sens-health-title {\n      font-size: 1.15rem;\n    }\n  }\n</style>\n\n<div class=\"sens-health-card\">\n  <div class=\"sens-health-title\">Sensor Health Status</div>\n  <table class=\"sens-health-table\">\n    <tr>\n      <th style=\"text-align:left;\">Sensor</th>\n      <th>Status</th>\n      <th>Last Seen</th>\n    </tr>\n    <tr ng-repeat=\"s in msg.payload\">\n      <td>{{s.Sensor}}</td>\n      <td align=\"center\">\n        <span class=\"sens-status-badge\"\n          ng-class=\"{\n            'green': s.Status === 'OK',\n            'red': s.Status === 'Fault',\n            'yellow': s.Status === 'Warning'\n          }\"\n        >{{s.Icon}} {{s.Status}}</span>\n      </td>\n      <td align=\"center\">{{s['Last Seen']}}</td>\n    </tr>\n  </table>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2100,"y":700,"wires":[[]]},{"id":"e0a50e1f5aa9cb47","type":"ui_template","z":"f951a401b9bb56d4","g":"c8a05a80b8522e0c","group":"01f89b94e7de115a","name":"Temperature Bar","order":3,"width":15,"height":4,"format":"<style>\n  .temp-wrapper {\n    width: 100%;\n    max-width: 340px;\n    margin: 18px auto 12px auto;\n    padding: 14px 0 6px 0;\n    background: linear-gradient(135deg, rgba(26, 32, 58, 0.92), rgba(15, 23, 42, 0.85));\n    border-radius: 18px;\n    box-shadow: 0 3px 20px #1facfb33, 0 1.5px 14px #000b;\n    backdrop-filter: blur(3.5px);\n    border: 1px solid rgba(255, 255, 255, 0.05);\n  }\n\n  .temp-title {\n    font-size: 20px;\n    font-weight: 900;\n    text-align: center;\n    margin-bottom: 13px;\n    color: #fde047;\n    letter-spacing: 0.05em;\n    text-shadow: 0 2px 14px #facc1550, 0 0 8px #fff4;\n  }\n\n  .tempbar {\n    width: 93%;\n    margin: 0 auto 12px auto;\n    background: linear-gradient(90deg, #1f2937 0%, #374151 100%);\n    height: 28px;\n    border-radius: 14px;\n    position: relative;\n    box-shadow: 0 3px 14px #0ea5e950;\n    overflow: hidden;\n    border: 1px solid rgba(255, 255, 255, 0.04);\n  }\n\n  .tempfill {\n    height: 100%;\n    border-radius: 14px;\n    text-align: center;\n    font-weight: 800;\n    font-size: 1.15em;\n    line-height: 28px;\n    transition: width 0.7s cubic-bezier(.52, .02, .45, .99), background 0.4s ease;\n    box-shadow: 0 2px 14px #0fffcf40, 0 0px 16px #0fffcf66;\n    color: #1b263b;\n    letter-spacing: .04em;\n    backdrop-filter: blur(1px);\n  }\n\n  .tempfill::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    border-radius: 14px;\n    background: radial-gradient(circle at 30% 50%, #ffffff11 10%, transparent 70%);\n    pointer-events: none;\n  }\n\n  .temp-value {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    text-align: center;\n    font-size: 1.12em;\n    font-weight: 800;\n    color: #fff;\n    text-shadow: 0 2px 10px #2db9fcaa, 0 0 4px #fff6;\n    letter-spacing: 0.03em;\n  }\n</style>\n<div class=\"temp-wrapper\">\n  <div class=\"temp-title\">Temperature</div>\n  <div class=\"tempbar\">\n    <div class=\"tempfill\"\n      style=\"\n        width: {{msg.payload}}%;\n        background: \n          {{ msg.payload <= 25 ? 'linear-gradient(90deg,#1facfb 70%,#20ffe0 100%)' :\n             (msg.payload <= 35 ? 'linear-gradient(90deg,#53ff7a 60%,#fff863 100%)' :\n             (msg.payload <= 45 ? 'linear-gradient(90deg,#fff863 15%,#ff6b26 95%)' :\n             'linear-gradient(90deg,#ff3763 40%,#cf13dc 100%)')) }};\n      \">\n      <span class=\"temp-value\">{{msg.payload}} °C</span>\n    </div>\n  </div>\n</div>\n","storeOutMessages":true,"fwdInMessages":false,"resendOnRefresh":true,"templateScope":"local","className":"","x":1350,"y":260,"wires":[[]]},{"id":"f8c93a1c224e2d51","type":"ui_template","z":"f951a401b9bb56d4","g":"e014542aec6265e4","group":"5ce0edf73a3fb05c","name":"Valve Tracker Info Card","order":1,"width":10,"height":6,"format":"<style>\n.valve-info-card {\n  background: linear-gradient(145deg, #111827, #1f2a40);\n  border-radius: 18px;\n  box-shadow: 0 6px 22px #0e1a30aa, 0 2px 8px #2db9fc33, inset 0 0 6px #ffffff0a;\n  color: #e0eef9;\n  max-width: 730px;\n  margin: 20px auto 12px auto;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  justify-content: space-between;\n  gap: 18px;\n  padding: 28px 28px 18px 28px;\n  border: 1.5px solid #ffffff0d;\n}\n.valve-info-panel {\n  flex: 1 1 0;\n  background: linear-gradient(120deg, #1e2e44 60%, #26437d 100%);\n  border-radius: 12px;\n  margin: 0 5px;\n  padding: 14px 20px;\n  min-width: 140px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0 2px 10px #2db9fc20, inset 0 0 10px #ffffff0a;\n  transition: all 0.3s ease;\n}\n.valve-info-icon {\n  font-size: 2.3em;\n  margin-bottom: 8px;\n  filter: drop-shadow(0 2px 6px #52ca8b55);\n}\n.valve-info-label {\n  font-size: 1.1em;\n  font-weight: 700;\n  color: #fee140;\n  margin-bottom: 5px;\n  letter-spacing: .045em;\n  text-shadow: 0 1.5px 7px #665c2455;\n}\n.valve-info-value {\n  font-size: 2.15em;\n  font-weight: 800;\n  color: #53ff7a;\n  margin-top: 6px;\n  letter-spacing: .055em;\n  text-shadow: 0 2px 12px #1a2b47a8;\n}\n.valve-info-panel:last-child .valve-info-value {\n  color: #4eb9ff;\n  text-shadow: 0 2px 12px #2373e0aa;\n}\n@media (max-width: 768px) {\n  .valve-info-card {\n    flex-direction: column;\n    gap: 0;\n    padding: 14px 4vw 10px 4vw;\n  }\n  .valve-info-panel {\n    margin: 10px 0;\n    min-width: 0;\n    width: 100%;\n  }\n  .valve-info-icon {\n    font-size: 1.8em;\n  }\n  .valve-info-label {\n    font-size: 1.02em;\n  }\n  .valve-info-value {\n    font-size: 1.55em;\n  }\n}\n</style>\n\n<div class=\"valve-info-card\">\n  <div class=\"valve-info-panel\">\n    <span class=\"valve-info-icon\">🔁</span>\n    <span class=\"valve-info-label\">Discharges Today</span>\n    <span class=\"valve-info-value\">{{ msg.payload.discharge_count_today || 0 }}</span>\n  </div>\n  <div class=\"valve-info-panel\">\n    <span class=\"valve-info-icon\">⏱️</span>\n    <span class=\"valve-info-label\">Open Time Today</span>\n    <span class=\"valve-info-value\">{{ msg.payload.formatted_time || '00:00:00' }}</span>\n  </div>\n</div>","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":false,"templateScope":"local","className":"","x":2330,"y":280,"wires":[[]]},{"id":"5dc11f4b66d3cb69","type":"ui_template","z":"f951a401b9bb56d4","g":"5a166091742504f0","group":"5df9e899578214ab","name":"Manual Button","order":2,"width":4,"height":2,"format":"<style>\n.custom-flush-switch-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 18px 0 8px 0;\n}\n\n.custom-flush-switch {\n  position: relative;\n  display: inline-block;\n  width: 72px;\n  height: 40px;\n}\n.custom-flush-switch input[type=\"checkbox\"] {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.custom-flush-slider {\n  position: absolute; cursor: pointer;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background: linear-gradient(90deg,#26385a 60%,#1e283e 100%);\n  border-radius: 20px;\n  border: 2.5px solid #46506c;\n  transition: background 0.3s, border 0.22s;\n  box-shadow: 0 2px 8px #1ce09550, 0 0px 4px #0004;\n}\n.custom-flush-switch input:checked + .custom-flush-slider {\n  background: linear-gradient(90deg, #14fb84 0%, #22c55e 100%);\n  border: 2.5px solid #22c55e;\n  box-shadow: 0 3px 15px #8bfeca80;\n}\n.custom-flush-slider:before {\n  content: \"\";\n  position: absolute;\n  height: 32px; width: 32px; left: 4px; bottom: 4px;\n  background: #202f4a;\n  border-radius: 50%;\n  box-shadow: 0 1.5px 8px #18e0976e;\n  transition: transform 0.27s cubic-bezier(.66,.01,.33,1.01), background 0.3s;\n}\n.custom-flush-switch input:checked + .custom-flush-slider:before {\n  transform: translateX(32px);\n  background: linear-gradient(120deg,#7affcb 10%,#1ce097 88%);\n  box-shadow: 0 2px 16px #1ef59e47;\n}\n.custom-flush-label {\n  color: #fee140;\n  font-weight: 700;\n  font-size: 1.19em;\n  margin-left: 16px;\n  font-family: inherit;\n  letter-spacing: .03em;\n  user-select: none;\n  text-shadow: 0 1.2px 6px #22e0b840;\n}\n</style>\n\n<div class=\"custom-flush-switch-wrap\">\n  <label class=\"custom-flush-switch\">\n    <input type=\"checkbox\"\n      ng-model=\"manualFlush\"\n      ng-change=\"send({payload: manualFlush ? 'ON' : 'OFF' })\"\n      ng-checked=\"msg.payload === 'ON'\">\n    <span class=\"custom-flush-slider\"></span>\n  </label>\n  <span class=\"custom-flush-label\">MANUAL FLUSH</span>\n</div>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":120,"y":800,"wires":[["cb025b5c17f4652f"]]},{"id":"82e82cacc987bfa5","type":"ui_template","z":"f951a401b9bb56d4","g":"c8a05a80b8522e0c","group":"01f89b94e7de115a","name":"TDS Level","order":2,"width":10,"height":7,"format":"<style>\n  .level-card {\n    background: linear-gradient(145deg, #1a2236, #101624);\n    border-radius: 20px;\n    max-width: 210px;\n    margin: 22px auto 18px auto;\n    padding: 24px 18px 24px 18px;\n    color: #fff;\n    text-align: center;\n    box-shadow: 0 8px 22px #0a193566, 0 2px 8px #00ffe544;\n    position: relative;\n    overflow: hidden;\n    backdrop-filter: blur(4px);\n  }\n\n  .level-gauge-title {\n    font-size: 1.28em;\n    font-weight: 900;\n    letter-spacing: .05em;\n    color: #fee140;\n    text-shadow: 0 0 8px #fee14055;\n    margin-bottom: 13px;\n  }\n\n  .level-bar-outer {\n    width: 60px;\n    height: 180px;\n    background: linear-gradient(120deg, #1b2237 60%, #2a3b5f 120%);\n    border-radius: 22px;\n    border: 2.6px solid #223062;\n    margin: 0 auto 14px auto;\n    position: relative;\n    overflow: hidden;\n    box-shadow: 0 9px 24px #00f1ff26;\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n  }\n\n  .level-bar-inner {\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    border-radius: 22px 22px 14px 14px;\n    background: linear-gradient(180deg,\n        #58ffbc80 0%,\n        #3ad0ffcc 50%,\n        #283cfc 100%);\n    transition: height 0.9s cubic-bezier(.48, .14, .33, 1.02), background 0.3s ease;\n    box-shadow: 0 0 16px #30e1ff88;\n  }\n\n  .level-bar-inner::after {\n    content: \"\";\n    position: absolute;\n    top: -8px;\n    left: 0;\n    width: 100%;\n    height: 10px;\n    background: #ffffff44;\n    border-radius: 50%;\n    filter: blur(5px);\n  }\n\n  .level-gauge-value {\n    margin-top: 8px;\n    font-size: 2.1em;\n    font-weight: 800;\n    color: #4dd8ff;\n    text-shadow: 0 1.5px 8px #30d1ff80, 0 0 6px #60f6ff55;\n    letter-spacing: .04em;\n  }\n\n  @media (max-width:600px) {\n    .level-card {\n      max-width: 94vw;\n    }\n  }\n</style>\n<div class=\"level-card\">\n  <div class=\"level-gauge-title\">TDS Level</div>\n  <div class=\"level-bar-outer\">\n    <div\n      id=\"level-bar-inner\"\n      class=\"level-bar-inner\"\n      style=\"height:0%;\"></div>\n  </div>\n  <div class=\"level-gauge-value\" id=\"level-gauge-value\">--</div>\n</div>\n<script>\n(function(scope){\n  function updateLevelGauge() {\n    var val = parseFloat(scope.msg && scope.msg.payload);\n    if(isNaN(val)) val = 0;\n    // Adjust maxValue below to match your actual tank maximum!\n    var maxValue = 1000; // e.g., liter or mm\n    var pct = Math.max(0, Math.min(1, val / maxValue));\n    var bar = document.getElementById(\"level-bar-inner\");\n    if(bar) {\n      bar.style.height = (pct * 100) + \"%\";\n    }\n    var v = document.getElementById(\"level-gauge-value\");\n    if(v) v.textContent = val;\n  }\n  // Initial on-load\n  updateLevelGauge();\n  // Every incoming payload/message will trigger this update:\n  scope.$watch('msg', function() {\n    updateLevelGauge();\n  });\n})(scope);\n</script>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1330,"y":220,"wires":[[]]},{"id":"a30b7449fc7870b8","type":"ui_template","z":"f951a401b9bb56d4","g":"c8a05a80b8522e0c","group":"01f89b94e7de115a","name":"pH Meter","order":1,"width":15,"height":7,"format":"<style>\n.ph-bar-gauge-card {\n  background: linear-gradient(135deg, #121824, #1c2a44 85%);\n  border-radius: 22px;\n  box-shadow: 0 8px 28px #00ff8866, 0 3px 12px #1a2c4a55;\n  width: 100%;\n  max-width: 1290px;\n  margin: 32px auto 20px auto;\n  padding: 26px 24px 33px 24px;\n  color: #ffffffee;\n  font-family: 'Segoe UI', sans-serif;\n  text-align: center;\n  position: relative;\n  box-sizing: border-box;\n  transition: all 0.3s ease-in-out;\n}\n.ph-horizontal-bar-container {\n  position: relative;\n  width: 100%;\n  height: 36px;\n  margin: 0 auto 20px auto;\n  background: linear-gradient(\n    to right,\n    #f44336 0%,\n    #ff9800 8.33%,\n    #ffeb3b 16.66%,\n    #4caf50 33.33%,\n    #00bcd4 50%,\n    #3f51b5 66.66%,\n    #9c27b0 83.33%,\n    #673ab7 100%\n  );\n  border-radius: 18px;\n  box-shadow: 0 4px 20px #fee14033, 0 2px 6px #22283166 inset;\n  overflow: visible;\n  border: 2.5px solid #33405d;\n}\n.ph-bar-tick-labels {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.02em;\n  color: #ffffffaa;\n  margin: 0 auto 8px auto;\n  font-weight: 600;\n  letter-spacing: 0.02em;\n  flex-wrap: wrap;\n  max-width: 1110px;\n}\n.ph-bar-double-arrow {\n  position: absolute;\n  top: -6px;\n  width: 0;\n  height: 50px;\n  left: 0;\n  z-index: 10;\n  pointer-events: none;\n  transition: left 0.35s ease-in-out;\n  filter: drop-shadow(0 0 4px #fff6);\n}\n.ph-bar-double-arrow svg {\n  width: 20px;\n  height: 50px;\n}\n.ph-bar-gauge-value {\n  font-size: 1.55em;\n  font-weight: 900;\n  margin-bottom: 6px;\n  color: #ffffffcc;\n  text-shadow: 0 1.5px 8px #0005;\n  letter-spacing: 0.05em;\n}\n.ph-bar-gauge-label {\n  font-size: 1.13em;\n  font-weight: 700;\n  color: #aaa;\n  letter-spacing: 0.03em;\n  text-shadow: 0 1px 6px #0003;\n}\n</style>\n\n<div class=\"ph-bar-gauge-card\">\n  <div style=\"font-size:1.13em;font-weight:800;letter-spacing:.02em;color:#fee140;margin-bottom:13px;\">\n    pH Gauge\n  </div>\n\n  <!-- Tick Labels: Only 1, 7, and 14 -->\n  <div class=\"ph-bar-tick-labels\">\n    <span>1</span>\n    <span>7</span>\n    <span>14</span>\n  </div>\n\n  <div class=\"ph-horizontal-bar-container\" id=\"ph-bar\">\n    <div class=\"ph-bar-double-arrow\" id=\"ph-arrow\">\n      <svg viewBox=\"0 0 16 60\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect x=\"7\" y=\"10\" width=\"2\" height=\"40\" rx=\"1\" fill=\"#fff\"/>\n        <polygon points=\"2,10 14,10 8,2\" fill=\"#fff\"/>\n        <polygon points=\"2,50 14,50 8,58\" fill=\"#fff\"/>\n      </svg>\n    </div>\n  </div>\n\n  <div class=\"ph-bar-gauge-value\" id=\"ph-bar-value\">--</div>\n  <div class=\"ph-bar-gauge-label\" id=\"ph-bar-label\">--</div>\n</div>\n\n<script>\n(function(scope){\n  function getBand(ph) {\n    if (ph < 7) return {label: \"Acidic\", color:\"#ff0000\"};\n    if (ph == 7) return {label: \"Neutral\", color:\"#00ff00\"};\n    return {label: \"Basic\", color:\"#8b00ff\"};\n  }\n\n  function updatePHBar(ph) {\n    var _ph = parseFloat(ph);\n    if (isNaN(_ph)) _ph = 1;\n    _ph = Math.max(1, Math.min(14, _ph));\n    var band = getBand(_ph);\n    var bar = document.getElementById('ph-bar');\n    var arrow = document.getElementById('ph-arrow');\n    var valueDiv = document.getElementById('ph-bar-value');\n    var labelDiv = document.getElementById('ph-bar-label');\n    // Use full bar width for mapping\n    var barWidth = bar ? bar.offsetWidth : 1110;\n    // Center the 16px arrow\n    var px = ((_ph - 1) / 13) * barWidth - 8;\n    px = Math.max(0, Math.min(barWidth - 16, px)); // Clamp to range\n    if (arrow) {\n      arrow.style.left = px + 'px';\n      arrow.style.display = 'block';\n    }\n    if (valueDiv) {\n      valueDiv.textContent = _ph.toFixed(2);\n      valueDiv.style.color = band.color;\n    }\n    if (labelDiv) {\n      labelDiv.textContent = band.label;\n      labelDiv.style.color = band.color;\n    }\n  }\n\n  function triggerUpdate() {\n    updatePHBar(scope.msg && scope.msg.payload);\n  }\n\n  triggerUpdate();\n  scope.$watch('msg', function(newMsg) {\n    updatePHBar(newMsg && newMsg.payload);\n  });\n\n  // Responsive: observe bar resize\n  if (window.ResizeObserver && document.getElementById('ph-bar')) {\n    new ResizeObserver(triggerUpdate).observe(document.getElementById('ph-bar'));\n  } else {\n    window.addEventListener('resize', triggerUpdate);\n  }\n})(scope);\n</script>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1320,"y":180,"wires":[[]]},{"id":"98d7c5cb69e4ad86","type":"ui_template","z":"f951a401b9bb56d4","g":"bda6c5d33570dd19","group":"historical_group","name":"Select Time Range","order":1,"width":"0","height":"0","format":"<div class=\"cool-timerange-card\">\n  <div class=\"timerange-title\"><i class=\"fa fa-history\"></i> Select Historical Range</div>\n  <div class=\"timerange-options\">\n    <button class=\"timerange-btn\" ng-class=\"{'selected': selectedRange === '1h'}\" ng-click=\"selectRange('1h')\">Last Hour</button>\n    <button class=\"timerange-btn\" ng-class=\"{'selected': selectedRange === '24h'}\" ng-click=\"selectRange('24h')\">Last 24 Hours</button>\n    <button class=\"timerange-btn\" ng-class=\"{'selected': selectedRange === '7d'}\" ng-click=\"selectRange('7d')\">Last 7 Days</button>\n  </div>\n</div>\n<script>\n  (function(scope) {\n  // Ensure highlight is not affected by unrelated dashboard messages\n  scope.selectedRange = scope.selectedRange || null;\n\n  // Grabs the current mode from parent (if present)\n  function getCurrentMode() {\n    // Try to use parent property, fallback to 'multi'\n    try {\n      if(scope.$parent && scope.$parent.msg && scope.$parent.msg.payload && scope.$parent.msg.payload.mode)\n        return scope.$parent.msg.payload.mode;\n    } catch(e){}\n    return 'multi';\n  }\n\n  scope.selectRange = function(range) {\n    if(scope.selectedRange === range) {\n      scope.selectedRange = null;\n      scope.send({payload: {range: null, mode: getCurrentMode()}});\n    } else {\n      scope.selectedRange = range;\n      scope.send({payload: {range: range, mode: getCurrentMode()}});\n    }\n  };\n\n  // Only reset highlight if flow explicitly sets range to null\n  scope.$watch('msg', function(msg) {\n    if(msg && msg.payload && typeof msg.payload.range !== \"undefined\") {\n      scope.selectedRange = msg.payload.range;\n    }\n  });\n})(scope);\n</script>\n<style>\n  .cool-timerange-card {\n    background: rgba(30, 36, 56, 0.90);\n    border-radius: 16px;\n    box-shadow: 0 0 22px 6px #26f9ff33;\n    padding: 24px 20px 20px 20px;\n    margin: 0 auto 22px auto;\n    max-width: 400px;\n    text-align: center;\n  }\n\n  .timerange-title {\n    font-size: 1.18em;\n    font-weight: bold;\n    text-shadow: 0 0 11px #36f9ff99;\n    color: #68ffeb;\n    background: linear-gradient(90deg, #3ceafc, #f9f871 70%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    margin-bottom: 18px;\n    letter-spacing: .07em;\n  }\n\n  .timerange-options {\n    display: flex;\n    justify-content: center;\n    gap: 24px;\n  }\n\n  .timerange-btn {\n    padding: 10px 25px;\n    border-radius: 13px;\n    background: rgba(25, 40, 60, 0.98);\n    border: 2px solid #39d1ffb7;\n    color: #e0faff;\n    font-weight: 700;\n    letter-spacing: .05em;\n    outline: none;\n    font-size: 1.06em;\n    box-shadow: 0 0 10px #16f9f733;\n    cursor: pointer;\n    transition: all .19s;\n  }\n\n  .timerange-btn:hover,\n  .timerange-btn.selected {\n    background: linear-gradient(90deg, #36f9ff 50%, #f9f871bb 100%);\n    color: #27283b;\n    border-color: #fee140;\n    box-shadow: 0 0 18px #fee14099, 0 0 22px #36f9ff55;\n    filter: brightness(1.08);\n  }\n</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":130,"y":640,"wires":[["258dfafa3855cff1"]]},{"id":"5e69fdfc36e1849e","type":"ui_template","z":"f951a401b9bb56d4","g":"bda6c5d33570dd19","group":"historical_group","name":"Graph","order":2,"width":"0","height":"0","format":"<div class=\"chart-mode-selector\">\n  <button class=\"chart-mode-btn\" ng-class=\"{'selected': selectedMode === 'multi'}\" ng-click=\"selectMode('multi')\">📈 Multi-Sensor Data</button>\n  <button class=\"chart-mode-btn\" ng-class=\"{'selected': selectedMode === 'ph'}\" ng-click=\"selectMode('ph')\">🧪 pH Sensor</button>\n  <button class=\"chart-mode-btn\" ng-class=\"{'selected': selectedMode === 'temp'}\" ng-click=\"selectMode('temp')\">🌡️ Temp Sensor</button>\n  <button class=\"chart-mode-btn\" ng-class=\"{'selected': selectedMode === 'tds'}\" ng-click=\"selectMode('tds')\">🧂 TDS Sensor</button>\n  <button class=\"chart-mode-btn\" ng-class=\"{'selected': selectedMode === 'turb'}\" ng-click=\"selectMode('turb')\">💧 Turbidity Sensor</button>\n</div>\n\n<div style=\"background:#191e2e; border-radius:18px; box-shadow:0 2px 16px #21e0b188;\n    padding:24px 16px 22px 16px; max-width:1400px; min-width:700px; min-height:700px; height:700px; margin:30px auto;\n    font-family:sans-serif; position:relative;\">\n  <canvas id=\"customLineChart\"\n    style=\"width:100% !important; height:100% !important; min-height:650px; min-width:900px; display:none;\"></canvas>\n  <div id=\"emptyNotice\" style=\"color:#faf8c7; font-size:1.6em; font-weight:bold;\n      text-align:center; position:absolute; top:50%; left:0; right:0; transform:translateY(-50%);\n      letter-spacing:.03em; z-index:5; pointer-events:none;\">\n    Please select a time range to display historical trends.\n  </div>\n</div>\n\n<script>\n  (function(scope){\n  scope.selectedMode = scope.selectedMode || 'multi';\n  // Helper to get current time range selection from parent scope/message (if available)\n  function getCurrentRange() {\n    try {\n      if(scope.$parent && typeof scope.$parent.selectedRange !== \"undefined\") {\n        return scope.$parent.selectedRange;\n      }\n      if(scope.$parent && scope.$parent.msg && scope.$parent.msg.payload && typeof scope.$parent.msg.payload.range !== \"undefined\") {\n        return scope.$parent.msg.payload.range;\n      }\n    } catch(e){}\n    return null;\n  }\n\n  scope.selectMode = function(mode) {\n    if(scope.selectedMode === mode) {\n      scope.selectedMode = 'multi';\n      scope.send({payload: {mode: 'multi', range: getCurrentRange()}});\n    } else {\n      scope.selectedMode = mode;\n      scope.send({payload: {mode: mode, range: getCurrentRange()}});\n    }\n  };\n\n  scope.$watch('msg', function(msg) {\n    if(msg && msg.payload && typeof msg.payload.mode !== \"undefined\") {\n      scope.selectedMode = msg.payload.mode;\n    }\n  });\n\n  function loadChartJs(cb){\n    if(window.Chart) return cb();\n    var s=document.createElement('script');s.src=\"https://cdn.jsdelivr.net/npm/chart.js\";\n    s.onload=cb;document.head.appendChild(s);\n  }\n\n  let chart;\n  let lastSelected = null;\n  let lastMode = 'multi';\n\n  function getDatasets(payload, mode) {\n    if(!payload.data) return [];\n    const ds = [\n      {label:'pH',data:payload.data[0],borderColor:'#4eaeff',backgroundColor:'rgba(78,174,255,.09)',fill:false,pointStyle:'circle',borderWidth:3,tension:0.22},\n      {label:'TDS',data:payload.data[1],borderColor:'#ea4939',backgroundColor:'rgba(234,73,57,.11)',fill:false,pointStyle:'rect',borderWidth:3,tension:0.19},\n      {label:'Temp (°C)',data:payload.data[2],borderColor:'#ffc107',backgroundColor:'rgba(255,193,7,.13)',fill:false,pointStyle:'triangle',borderWidth:3,tension:0.23},\n      {label:'Turbidity',data:payload.data[3],borderColor:'#26d1e6',backgroundColor:'rgba(38,209,230,.11)',fill:false,pointStyle:'star',borderWidth:3,tension:0.20}\n    ];\n    switch (mode) {\n      case 'ph': return [ds[0]];\n      case 'tds': return [ds[1]];\n      case 'temp': return [ds[2]];\n      case 'turb': return [ds[3]];\n      default: return ds;\n    }\n  }\n\n  function getTitle(mode) {\n    switch (mode) {\n      case 'ph': return 'pH Sensor Trend';\n      case 'tds': return 'TDS Sensor Trend';\n      case 'temp': return 'Temperature Sensor Trend';\n      case 'turb': return 'Turbidity Sensor Trend';\n      default: return 'Multi-Sensor Historical Trends';\n    }\n  }\n\n  function getY(cfg, mode) {\n    if (mode === 'ph') return {min:0, max:14, beginAtZero:true, ...cfg};\n    return cfg;\n  }\n\n  function makeChart(payload, mode) {\n    var c = document.getElementById('customLineChart');\n    var n = document.getElementById('emptyNotice');\n    if (payload && payload.data && payload.labels && payload.data.length && payload.labels.length) {\n      c.style.display = '';\n      n.style.display = 'none';\n      if (chart) chart.destroy();\n      var ctx = c.getContext('2d');\n      chart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: payload.labels,\n          datasets: getDatasets(payload, mode)\n        },\n        options: {\n          responsive:true,\n          maintainAspectRatio: false,\n          plugins:{\n            legend:{labels:{color:'#fff',font:{weight:'bolder',size:15},padding:15}},\n            title:{display:true,text:getTitle(mode),color:'#fee140',font:{weight:'bold',size:21}},\n            tooltip:{enabled:true,backgroundColor:'#232c45',borderWidth:2,borderColor:'#fee140',titleColor:'#fee140',bodyColor:'#fff'}\n          },\n          scales:{\n            x:{ticks:{color:'#e0eefa',font:{weight:'bold',size:13}}},\n            y:getY({\n              beginAtZero:false,\n              ticks:{color:'#f1ede6',font:{weight:'bold',size:13}},\n              grid:{color:'#232c4577'}\n            }, mode)\n          }\n        }\n      });\n    } else {\n      if(chart) { chart.destroy(); chart = null; }\n      c.style.display = 'none';\n      n.style.display = '';\n    }\n  }\n\n  scope.$watch('msg',function(msg){\n    var selection = msg&&msg.payload&&msg.payload.selection;\n    var mode = (msg && msg.payload && msg.payload.mode) || lastMode || 'multi';\n    var hasData = msg&&msg.payload&&msg.payload.data&&msg.payload.labels&&msg.payload.data.length&&msg.payload.labels.length;\n    if (selection!==undefined) {\n      if (selection === lastSelected && !hasData) {\n        makeChart(null, mode);\n        lastSelected = null;\n      } else if (hasData) {\n        makeChart(msg.payload, mode);\n        lastSelected = selection;\n      } else {\n        makeChart(null, mode);\n        lastSelected = selection;\n      }\n    } else if (hasData || mode) {\n      makeChart(msg && msg.payload, mode);\n      lastSelected = null;\n    } else {\n      makeChart(null, mode);\n      lastSelected = null;\n    }\n    lastMode = mode;\n  });\n  loadChartJs(function(){});\n})(scope);\n</script>\n\n<style>\n  .chart-mode-selector {\n    display: flex;\n    justify-content: flex-start;\n    gap: 22px;\n    margin: 12px 30px 25px 30px;\n    background: transparent;\n  }\n\n  .chart-mode-btn {\n    padding: 10px 28px;\n    border-radius: 14px;\n    background: rgba(29, 40, 60, 0.89);\n    border: 2.2px solid #2bcfffcc;\n    color: #e9faff;\n    font-weight: 700;\n    letter-spacing: .06em;\n    font-size: 1.17em;\n    box-shadow: 0 0 14px #36f9ff33;\n    cursor: pointer;\n    outline: none;\n    transition: all .15s;\n  }\n\n  .chart-mode-btn.selected,\n  .chart-mode-btn:focus {\n    background: linear-gradient(120deg, #36f9ff 44%, #f9f871 120%);\n    color: #191e2e;\n    border-color: #fee140;\n    box-shadow: 0 0 18px #fee140bb, 0 0 27px #36f9ff70;\n    filter: brightness(1.11);\n  }\n\n  .chart-mode-btn:hover:not(.selected) {\n    box-shadow: 0 0 18px #36f9ff99, 0 0 22px #fed94360;\n    border-color: #facc15;\n    color: #232c48;\n    background: linear-gradient(94deg, #39eafc 65%, #f9f86a 101%);\n  }\n</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":790,"y":640,"wires":[[]]},{"id":"d052879566078f54","type":"ui_template","z":"f951a401b9bb56d4","g":"f3bac752d535526d","group":"aa33d3d0b8bac521","name":"WQI Display","order":1,"width":20,"height":9,"format":"<div class=\"neon-glass-wqi\">\n  <h3 class=\"neon-title\">🌊 Water Quality Index</h3>\n\n  <div class=\"neon-wqi-value\" style=\"color: {{getColor(msg.payload.WQI)}};\">\n    {{msg.payload.WQI}}\n  </div>\n\n  <div class=\"neon-status\">\n    Status: <strong>{{msg.payload.WQI_quality}}</strong>\n  </div>\n\n  <div class=\"neon-legend\">\n    <p>Ideal WQI: 100 (lower deviation = better quality)</p>\n    <p>Categories: \n      <span class=\"excellent\">Excellent ≥95</span>, \n      <span class=\"verygood\">Very Good ≥89</span>, \n      <span class=\"good\">Good ≥80</span>, \n      <span class=\"fair\">Fair ≥65</span>, \n      <span class=\"marginal\">Marginal ≥45</span>, \n      <span class=\"poor\">Poor &lt;45</span>\n    </p>\n  </div>\n</div>\n\n<style>\nbody {\n  background: linear-gradient(120deg, #181529 0%, #232951 100%);\n  min-height: 100vh;\n}\n.neon-glass-wqi {\n  backdrop-filter: blur(8px);\n  background: rgba(35, 41, 81, 0.50);\n  border-radius: 24px;\n  box-shadow:\n    0 2px 24px #5efcff55,\n    0 0 0 2px #47d3e2, \n    0 0 16px 7px #7b2ff2cc,\n    0 8px 40px #2c006199;\n  padding: 36px 25px 20px 25px;\n  display: inline-block;\n  min-width: 340px;\n  margin: 32px auto;\n  text-align: center;\n  border: 1.5px solid #5efcff44;\n  transition: box-shadow 0.25s;\n  animation: pulseGlow 2s infinite alternate;\n}\n@keyframes pulseGlow {\n  0% { box-shadow: 0 2px 24px #5efcff22, 0 0 0 2px #47d3e2, 0 0 16px 7px #7b2ff2cc, 0 8px 40px #2c006155; }\n  100% { box-shadow: 0 2px 48px #5efcffdd, 0 0 0 2px #47d3e2, 0 0 32px 16px #7b2ff2cc, 0 8px 70px #2c0061bb; }\n}\n/* Enlarged text for high impact */\n.neon-title {\n  font-family: 'Orbitron', 'Segoe UI', sans-serif;\n  color: #5efcff;\n  letter-spacing: 2px;\n  font-size: 2em; /* Previously 1.36em */\n  margin-bottom: 14px;\n  text-shadow: 0 0 7px #23f0dd, 0 0 30px #47d3e2;\n}\n.neon-wqi-value {\n  font-size: 5em; /* Previously 2.88em */\n  font-weight: 700;\n  padding: 0.3em 0.6em;\n  margin: 0 auto 10px auto;\n  background: linear-gradient(90deg, #5efcff33 20%, #7b2ff2bb 90%);\n  border-radius: 2em;\n  box-shadow: 0 0 16px #7b2ff244, 0 0 64px #23f0dd44 inset;\n  text-shadow: 0 0 14px #5efcff, 0 0 34px #23f0dd77;\n  filter: drop-shadow(0 0 10px #2c0061cc);\n}\n.neon-status {\n  font-size: 2em; /* Previously 1.19em */\n  margin-bottom: 10px;\n  color: #fff;\n  font-weight: 500;\n  letter-spacing: 1.5px;\n  text-shadow: 0 0 7px #7b2ff2aa;\n}\n.neon-legend p {\n  margin: 0.6em 0 0 0;\n  font-size: 1.4em; /* Previously 0.92em */\n  color: #c8e0e6;\n}\n/* Category colors */\n.excellent { color: #00ffc9; text-shadow: 0 0 8px #2ecc71bb; }\n.verygood { color: #2ef2e2; text-shadow: 0 0 5px #1deb92cc; }\n.good     { color: #61dcfb; text-shadow: 0 0 8px #3498db; }\n.fair     { color: #f1fa72; text-shadow: 0 0 8px #f1c40f; }\n.marginal { color: #ff8d40; text-shadow: 0 0 7px #e67e22cc; }\n.poor     { color: #ff5555; text-shadow: 0 0 10px #e74c3c; }\n</style>\n\n<script>\n(function(scope) {\n    scope.getColor = function(wqi) {\n        if (wqi >= 95) return \"#00ffc9\";       // Excellent - neon green\n        else if (wqi >= 89) return \"#2ef2e2\";  // Very Good - cyan\n        else if (wqi >= 80) return \"#61dcfb\";  // Good - blue\n        else if (wqi >= 65) return \"#f1fa72\";  // Fair - yellow\n        else if (wqi >= 45) return \"#ff8d40\";  // Marginal - orange\n        else return \"#ff5555\";                 // Poor - bright neon red\n    };\n})(scope);\n</script>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2110,"y":600,"wires":[[]]},{"id":"6e39983e0b40dc80","type":"ui_template","z":"f951a401b9bb56d4","g":"24c40a031b8cf421","group":"325906020dc01bfb","name":"","order":4,"width":0,"height":0,"format":"<style>\n    .vision-glass {\n        background: linear-gradient(115deg, #1a2f46 70%, #53ff7a22 100%);\n        border-radius: 17px;\n        box-shadow: 0 2px 13px #45ffd870, 0 1.5px 10px #61fbbb17;\n        padding: 18px 24px;\n        margin: 18px auto;\n        max-width: 540px;\n        color: #e7fff4;\n        text-align: left;\n        font-size: 1.17em;\n        font-style: italic;\n    }\n\n    .vision-glass b {\n        color: #fee140;\n    }\n</style>\n<div class=\"vision-glass\">\n    <b>Our Vision:</b> Bring safe, transparent, and AI-powered water management to every industry—protecting\n    communities, saving resources, and creating a cleaner tomorrow.\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":100,"y":220,"wires":[[]]},{"id":"b1466074c182f54e","type":"ui_template","z":"f951a401b9bb56d4","g":"24c40a031b8cf421","group":"325906020dc01bfb","name":"","order":3,"width":0,"height":0,"format":"<style>\n    .about-project-glass {\n        background: linear-gradient(135deg, #1c273c 92%, #0e2e2570 100%);\n        border-radius: 22px;\n        box-shadow: 0 6px 28px #23e8e955, 0 2px 7px #21e0b138;\n        padding: 29px 34px 25px 34px;\n        margin: 24px auto 14px auto;\n        max-width: 740px;\n        font-family: inherit;\n        color: #fff;\n        text-align: left;\n        font-size: 1.12em;\n        position: relative;\n        animation: fadeInAbout 1.1s .16s cubic-bezier(.41, .81, .6, 1.13);\n    }\n\n    @keyframes fadeInAbout {\n        0% {\n            opacity: 0;\n            transform: translateY(80px) scale(0.92);\n        }\n\n        100% {\n            opacity: 1;\n            transform: translateY(0) scale(1);\n        }\n    }\n\n    .about-project-title {\n        font-size: 1.21em;\n        font-weight: bold;\n        color: #fee140;\n        margin-bottom: 10px;\n        letter-spacing: .015em;\n    }\n\n    .about-project-main {\n        line-height: 1.75;\n        font-weight: 600;\n        color: #e0eaff;\n    }\n</style>\n<div class=\"about-project-glass\">\n    <div class=\"about-project-title\">About the Project</div>\n    <div class=\"about-project-main\">\n        This dashboard fuses <b>Industrial IoT sensors</b> and <b>AI-driven analytics</b> for seamless,\n        <span style=\"color:#23e6c0;\">real-time wastewater monitoring</span> and management.<br><br>\n    You’ll explore live data streams, valve statuses and AI-powered event detection—making operations\n        <b>smarter, safer, and future-ready</b> for industrial water treatment.\n    </div>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":100,"y":180,"wires":[[]]},{"id":"f524534e578c5d09","type":"ui_template","z":"f951a401b9bb56d4","g":"24c40a031b8cf421","group":"325906020dc01bfb","name":"","order":2,"width":0,"height":0,"format":"<style>\n    .members-row {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n        gap: 32px;\n        margin: 40px 0 16px 0;\n    }\n\n    .member-card {\n        background: linear-gradient(120deg, #22e0b970 72%, #1a2236 100%);\n        border-radius: 19px;\n        box-shadow: 0 3px 18px #18e0b177, 0 1px 11px #1a223610;\n        padding: 18px 7px 13px 7px;\n        width: 104px;\n        min-width: 76px;\n        text-align: center;\n        color: #fff;\n        font-size: .97em;\n        transition: transform 0.26s cubic-bezier(.42, 1.35, .55, 0.98), box-shadow 0.14s, background 0.15s;\n        transform: scale(0.8);\n        cursor: pointer;\n        border: 1.5px solid #2ee89e80;\n    }\n\n    .member-card:hover {\n        transform: scale(1.19);\n        background: linear-gradient(101deg, #4cebfa 54%, #53ff7a 100%);\n        box-shadow: 0 7px 34px #4cc38a6f, 0 1px 15px #1669f680;\n        z-index: 2;\n    }\n\n    .member-avatar {\n        width: 44px;\n        height: 44px;\n        border-radius: 50%;\n        background: linear-gradient(120deg, #1b5c87 56%, #23c6f9 130%);\n        margin: 0 auto 10px auto;\n        overflow: hidden;\n        box-shadow: 0 1.5px 8px #19e0b183;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .member-avatar img {\n        width: 34px;\n        height: 34px;\n        object-fit: cover;\n        border-radius: 50%;\n        border: 2.2px solid #fee140;\n    }\n\n    .member-name {\n        font-size: 1.01em;\n        font-weight: 900;\n        color: #fee140;\n        margin-bottom: 2px;\n        letter-spacing: .01em;\n    }\n\n    .member-role {\n        font-size: .81em;\n        font-weight: 700;\n        color: #86e6cf;\n        margin-bottom: 3px;\n        letter-spacing: .01em;\n    }\n\n    .member-desc {\n        margin-top: 5px;\n        color: #d9fff6;\n        font-weight: 500;\n        font-size: 0.85em;\n        opacity: .82;\n        text-shadow: 0 1.5px 7px #0ecb8144;\n    }\n\n    @media (max-width:900px) {\n        .members-row {\n            gap: 13px;\n        }\n\n        .member-card {\n            width: 94vw;\n            min-width: 64px;\n            max-width: 142px;\n            margin: 0 auto;\n        }\n    }\n</style>\n<div class=\"members-row\">\n    <div class=\"member-card\">\n        <div class=\"member-avatar\">\n            <img src=\"https://img.icons8.com/color/96/user-male-circle--v2.png\" alt=\"You\">\n        </div>\n        <div class=\"member-name\">You</div>\n        <div class=\"member-role\">Dashboard Developer</div>\n        <div class=\"member-desc\">Designed, built, and themed the entire dashboard—analytics, widgets, UI, and overall\n            experience.</div>\n    </div>\n    <div class=\"member-card\">\n        <div class=\"member-avatar\">\n            <img src=\"https://img.icons8.com/color/96/user-male-skin-type-2.png\" alt=\"Pushkar\">\n        </div>\n        <div class=\"member-name\">Pushkar</div>\n        <div class=\"member-role\">Machine Learning Engineer</div>\n        <div class=\"member-desc\">Developed and deployed the ML models for live anomaly detection and automated data\n            insights.</div>\n    </div>\n    <div class=\"member-card\">\n        <div class=\"member-avatar\">\n            <img src=\"https://img.icons8.com/color/96/user-female-circle--v2.png\" alt=\"Any Girl (PLC)\">\n        </div>\n        <div class=\"member-name\">Any Girl</div>\n        <div class=\"member-role\">PLC/Automation Specialist</div>\n        <div class=\"member-desc\">Handled PLC & field integration.<br>(In truth, we'd love to have any girl here replacing Deepesh, but it was his PLC work!)\n        </div>\n    </div>\n    <div class=\"member-card\">\n        <div class=\"member-avatar\">\n            <img src=\"https://img.icons8.com/color/96/user-male-skin-type-4.png\" alt=\"Sumit\">\n        </div>\n        <div class=\"member-name\">Sumit</div>\n        <div class=\"member-role\">Team Member</div>\n        <div class=\"member-desc\">Provided project support—no major ML/dashboard code, but helped along the way.</div>\n    </div>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":100,"y":140,"wires":[[]]},{"id":"cc302d4a9c4afa72","type":"ui_template","z":"f951a401b9bb56d4","g":"24c40a031b8cf421","group":"325906020dc01bfb","name":"","order":1,"width":0,"height":0,"format":"<style>\n    .key-features-shine {\n        background: linear-gradient(110deg, #141e30 92%, #3affae22 100%);\n        border-radius: 19px;\n        box-shadow: 0 3px 24px #23c6f941, 0 2px 10px #4cc38a27;\n        padding: 26px 24px 12px 24px;\n        margin: 18px auto 16px auto;\n        max-width: 540px;\n        font-size: 1.13em;\n        font-weight: 700;\n    }\n\n    .feature-bullet-row {\n        display: flex;\n        align-items: flex-start;\n        gap: 14px;\n        margin-bottom: 16px;\n    }\n\n    .feature-bullet-icon {\n        font-size: 1.45em;\n        margin-top: 2px;\n        color: #fee140;\n        text-shadow: 0 2px 7px #22e0b88b;\n    }\n\n    .feature-bullet-text {\n        color: #53ff7a;\n        font-weight: 800;\n        letter-spacing: .03em;\n    }\n\n    .feature-bullet-desc {\n        color: #ddeaff;\n        font-weight: 600;\n        letter-spacing: .008em;\n        margin-top: 0.5px;\n    }\n</style>\n<div class=\"key-features-shine\">\n    <div class=\"feature-bullet-row\">\n        <span class=\"feature-bullet-icon\">📊</span>\n        <span><span class=\"feature-bullet-text\">Live Sensor Dashboard</span>\n        <div class=\"feature-bullet-desc\">Real-time pH, TDS, temperature & turbidity at a glance.</div>\n        </span>\n    </div>\n    <div class=\"feature-bullet-row\">\n        <span class=\"feature-bullet-icon\">⚡</span>\n        <span><span class=\"feature-bullet-text\">AI & ML Analytics</span>\n        <div class=\"feature-bullet-desc\">Instant anomaly alerts, safety classification, and trending analytics.</div>\n        </span>\n    </div>\n    <div class=\"feature-bullet-row\">\n        <span class=\"feature-bullet-icon\">📝</span>\n        <span><span class=\"feature-bullet-text\">Valve Automation & Control</span>\n        <div class=\"feature-bullet-desc\">Track automatic & manual valve actions with smart event logging.</div>\n        </span>\n    </div>\n    <div class=\"feature-bullet-row\">\n        <span class=\"feature-bullet-icon\">🔒</span>\n        <span><span class=\"feature-bullet-text\">Security & Cloud Reliability</span>\n        <div class=\"feature-bullet-desc\">All data is securely hosted & always available.</div>\n        </span>\n    </div>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":100,"y":100,"wires":[[]]},{"id":"070716c9c19474d0","type":"ui_template","z":"f951a401b9bb56d4","g":"24c40a031b8cf421","group":"325906020dc01bfb","name":"","order":0,"width":0,"height":0,"format":"<style>\n    .project-banner-card {\n        background: linear-gradient(120deg, #161e2c 75%, #21e0b190 100%);\n        border-radius: 24px;\n        box-shadow: 0 8px 36px #23f6d960, 0 2px 8px #1669f660;\n        text-align: center;\n        padding: 33px 0 20px 0;\n        max-width: 680px;\n        margin: 30px auto 22px auto;\n        animation: bannerFloat 2.2s .15s cubic-bezier(.39, 1.24, .51, 1.02);\n        position: relative;\n        overflow: hidden;\n    }\n\n    @keyframes bannerFloat {\n        0% {\n            opacity: 0;\n            transform: translateY(-50px) scale(0.8);\n        }\n\n        68% {\n            opacity: 1;\n            transform: scale(1.06);\n        }\n\n        100% {\n            opacity: 1;\n            transform: translateY(0) scale(1);\n        }\n    }\n\n    .project-logo-circle {\n        width: 90px;\n        height: 90px;\n        background: linear-gradient(135deg, #23c6f9 60%, #53ff7a 100%);\n        border-radius: 50%;\n        margin: 0 auto 12px auto;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        box-shadow: 0 3px 24px #23c6f955;\n    }\n\n    .project-logo-circle img {\n        width: 68px;\n        height: 68px;\n        border-radius: 23px;\n        background: #fff;\n    }\n\n    .project-banner-title {\n        font-size: 2.2em;\n        font-weight: 900;\n        letter-spacing: -2px;\n        background: linear-gradient(90deg, #fee140 30%, #23ffe6 70%);\n        background-clip: text;\n        -webkit-background-clip: text;\n        color: transparent;\n        -webkit-text-fill-color: transparent;\n        margin-bottom: 7px;\n        text-shadow: 0 4px 36px #23c6f979;\n    }\n\n    .project-banner-tagline {\n        font-size: 1.12em;\n        font-weight: 700;\n        color: #4cc38a;\n        margin-bottom: 3px;\n        letter-spacing: .025em;\n        text-shadow: 0 2px 18px #53ff7a32;\n    }\n</style>\n<div class=\"project-banner-card\">\n    <div class=\"project-logo-circle\">\n        <img src=\"https://img.icons8.com/color/96/water-bottle.png\" alt=\"Project Logo\">\n    </div>\n    <div class=\"project-banner-title\">IIoT Wastewater Intelligence Dashboard</div>\n    <div class=\"project-banner-tagline\">Smarter Waste, Safer Water, Brighter Future</div>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":100,"y":60,"wires":[[]]},{"id":"1825f18ce73bca5a","type":"mindconnect","z":"f951a401b9bb56d4","g":"e5fcb9ee03a17075","name":"ckc_Water_agent","configtype":"SHARED_SECRET","agentconfig":"{\n  \"content\": {\n    \"baseUrl\": \"https://southgate.eu1.mindsphere.io\",\n    \"iat\": \"eyJraWQiOiJrZXktaWQtMSIsInR5cCI6IkpXVCIsImFsZyI6IlJTMjU2In0.eyJpc3MiOiJTQ0kiLCJzdWIiOiJjNjA0ZjMyYTI3MTA0OTdmYTQ2YjEyMjY0Mjg3YTI2OSIsImF1ZCI6IkFJQU0iLCJpYXQiOjE3NTMyNTczMzMsIm5iZiI6MTc1MzI1NzMzMywiZXhwIjoxNzUzODYyMTMzLCJqdGkiOiIwMGI5ZWYxMi1iNjg4LTQ4NjEtOGMwOS1jZDE1YmEwMzMzMWMiLCJzY29wZSI6IklBVCIsInRlbiI6ImlvdGVkdSIsInRlbl9jdHgiOiJtYWluLXRlbmFudCIsImNsaWVudF9jcmVkZW50aWFsc19wcm9maWxlIjpbIlNIQVJFRF9TRUNSRVQiXSwic2NoZW1hcyI6WyJ1cm46c2llbWVuczptaW5kc3BoZXJlOnYxIl19.pzQr2P02dKZhukAHOtg4ARAn-dCE34rEW5YxUqxyzRgvobeerdrka0MUdOngXHqCkDk-HAKZ3a1LUNmyo32jISAIW9DlwDvp8JZjqiWjUhzhLZG8c_F7ezGCH-rjn9zjlfJVc6Mc7deNEYOprp4V_FcUDf0GolFQxwutr5tC1eNmWZQXfRd_PUdyA4k5CGltYaGG3cFo2JKhIiFW4xFT1UbQS8AEdtalQoR_VTQn5AqWLvKqoZxbK4I3qJ95ZsfhVtd6b3bZbatRWk6kr_gMSPp9ZQFraXg9qK4rCgnqtfE9rQuKZVP5wXu2S9Kh439B1RNJINQUajV8AMFXtgaYpQ\",\n    \"clientCredentialProfile\": [\n      \"SHARED_SECRET\"\n    ],\n    \"clientId\": \"c604f32a2710497fa46b12264287a269\",\n    \"tenant\": \"iotedu\"\n  },\n  \"expiration\": \"2025-07-30T07:55:33.000Z\"\n}","privatekey":"","model":"","validate":true,"validateevent":true,"chunk":false,"disablekeepalive":false,"emitcontrol":false,"datalakeonly":false,"supressverbosity":false,"retry":3,"parallel":1,"asyncduration":10,"x":1230,"y":60,"wires":[[]]},{"id":"4d1d0aaf4eb86b93","type":"function","z":"f951a401b9bb56d4","g":"e5fcb9ee03a17075","name":"function 5","func":"// Read latest sensor values from flow context\nlet turbidity = flow.get(\"Turbidity\");     // (number, e.g. 13.42)\nlet temp      = flow.get(\"Temperature\");   // (number, e.g. 23.5)\nlet tds       = flow.get(\"TDS\");           // (number, e.g. 431.21)\nlet ph        = flow.get(\"pH\");            // (number, e.g. 7.02)\n\n// Format all values as MindSphere expects: string-encoded numbers, no decimals for integers\n\nconst values = [\n    {\n        dataPointId: \"DP-turbidity\",\n        qualityCode: \"0\",\n        value: (turbidity % 1 === 0) ? String(parseInt(turbidity)) : String(turbidity)\n    },\n    {\n        dataPointId: \"DP-temp\",\n        qualityCode: \"0\",\n        value: (temp % 1 === 0) ? String(parseInt(temp)) : String(temp)\n    },\n    {\n        dataPointId: \"DP-TDS\",\n        qualityCode: \"0\",\n        value: (tds % 1 === 0) ? String(parseInt(tds)) : String(tds)\n    },\n    {\n        dataPointId: \"DP-ph\",\n        qualityCode: \"0\",\n        value: (ph % 1 === 0) ? String(parseInt(ph)) : String(ph)\n    }\n];\n\n// Add an optional timestamp in msg._time (not required by MindConnect's data API, but useful)\nmsg._time = new Date();\nmsg.payload = values;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1040,"y":60,"wires":[["1825f18ce73bca5a"]]},{"id":"b7a57e82b1da9d26","type":"modbus-write","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"VAVLE","showStatusActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"HoldingRegister","adr":"26","quantity":"1","server":"9dbbabf5ee2fbaf6","emptyMsgOnFail":false,"keepMsgProperties":false,"delayOnStart":false,"startDelayTime":"","x":830,"y":800,"wires":[["88aa82eab7597e29"],[]]},{"id":"a958410c502b2bbf","type":"function","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"function 4","func":"// Check if switch is ON (true or \"ON\")\nlet isOn = msg.payload === true || msg.payload === \"ON\";\n\n// Set manual override flag in flow\nflow.set(\"manual_flush_active\", isOn);\n\n// Optional: Immediately send a Modbus value (256 or 0)\nmsg.payload = {\n    value: isOn ? 256 : 0,\n    unitid: \"1\",\n    fc: 6,\n    address: 26,\n    quantity: \"1\",\n    messageId: new Date().getTime().toString()\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":800,"wires":[["b7a57e82b1da9d26"]]},{"id":"88aa82eab7597e29","type":"debug","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"debug 4","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1060,"y":800,"wires":[]},{"id":"24a3609bc4cb46bd","type":"function","z":"f951a401b9bb56d4","g":"3fa10a145ace2b44","name":"JSON Data Logger","func":"let pH = flow.get(\"pH\") || 0;\nlet TDS = flow.get(\"TDS\") || 0;\nlet Temperature = flow.get(\"Temperature\") || 0;\nlet Turbidity = flow.get(\"Turbidity\") || 0;\nlet valveStatus = flow.get(\"valve_status\") || \"UNKNOWN\";\nlet time = new Date().toISOString();\n\nconst logObj = {\n    timestamp: time,\n    pH: pH,\n    TDS: TDS,\n    Temperature: Temperature,\n    Turbidity: Turbidity,\n    valveStatus: valveStatus\n};\n\n// Each payload is one JSON line\nmsg.payload = JSON.stringify(logObj) + '\\n';\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":100,"wires":[["a3988621a743029e","180f7d470e66d423"]]},{"id":"1eb7c74f230969a4","type":"function","z":"f951a401b9bb56d4","g":"3fa10a145ace2b44","name":"Csv Logger","func":"// ✅ Time-based throttle (1 log/sec)\nlet now = Date.now();\nlet lastLogged = flow.get(\"lastLoggedAt\") || 0;\nif (now - lastLogged < 1000) return null;\nflow.set(\"lastLoggedAt\", now);\n\n// 🕓 Fresh timestamp\nlet time = new Date().toISOString();\n\n// 📥 Sensor values from flow\nlet pH = Number(flow.get(\"pH\")) || 0;\nlet TDS = Number(flow.get(\"TDS\")) || 0;\nlet Temp = Number(flow.get(\"Temperature\")) || 0;\nlet Turbidity = Number(flow.get(\"Turbidity\")) || 0;\nlet valveStatus = flow.get(\"valve_status\") || \"UNKNOWN\";\n\n// 🔁 Previous values for diffs\nlet prev_pH = flow.get(\"prev_pH\") || pH;\nlet prev_TDS = flow.get(\"prev_TDS\") || TDS;\nlet prev_Temp = flow.get(\"prev_Temp\") || Temp;\nflow.set(\"prev_pH\", pH);\nflow.set(\"prev_TDS\", TDS);\nflow.set(\"prev_Temp\", Temp);\n\n// 🔁 Rolling buffers (3-value)\nlet tdsBuffer = flow.get(\"tdsBuffer\") || [];\nlet phBuffer = flow.get(\"phBuffer\") || [];\ntdsBuffer.push(TDS);\nphBuffer.push(pH);\nif (tdsBuffer.length > 3) tdsBuffer.shift();\nif (phBuffer.length > 3) phBuffer.shift();\nflow.set(\"tdsBuffer\", tdsBuffer);\nflow.set(\"phBuffer\", phBuffer);\n\n// 📐 Feature engineering\nlet ph_diff = (pH - prev_pH).toFixed(3);\nlet tds_diff = (TDS - prev_TDS).toFixed(3);\nlet temp_diff = (Temp - prev_Temp).toFixed(3);\nlet ph_dev = (pH - 7).toFixed(3);\nlet tds_temp_ratio = (TDS / (Temp || 1)).toFixed(3);\nlet turbidity_x_ph = (Turbidity * pH).toFixed(3);\nlet temp_sqr = (Temp ** 2).toFixed(2);\nlet tds_rollmean_3 = (tdsBuffer.reduce((a, b) => a + b, 0) / tdsBuffer.length).toFixed(3);\nlet ph_mean = phBuffer.reduce((a, b) => a + b, 0) / phBuffer.length;\nlet ph_variance = phBuffer.map(x => (x - ph_mean) ** 2).reduce((a, b) => a + b, 0) / phBuffer.length;\nlet ph_rollstd_3 = Math.sqrt(ph_variance).toFixed(3);\n\n// ❗ Status cause logic\nlet unsafe = [];\nif (pH < 6.5 || pH > 8.5) unsafe.push(\"pH\");\nif (TDS > 500) unsafe.push(\"TDS\");\nif (Turbidity < 10 || Turbidity > 30) unsafe.push(\"Turbidity\");\nif (Temp > 45) unsafe.push(\"Temperature\");\nlet cause = unsafe.length > 0 ? unsafe.join(\"&\") : \"None\";\n\n// 📄 CSV Header\nlet headerWritten = flow.get(\"csv_header_written\") || false;\nlet csv = \"\";\n\nif (!headerWritten) {\n    csv += \"timestamp,TDS,turbidity,temperature,pH,status,cause,ph_dev,tds_temp_ratio,turbidity_x_ph,temp_sqr,tds_diff,temp_diff,ph_diff,tds_rollmean_3,ph_rollstd_3\\n\";\n    flow.set(\"csv_header_written\", true);\n}\n\n// 🧾 Append data row\ncsv += `${time},${TDS},${Turbidity},${Temp},${pH},${valveStatus},${cause},${ph_dev},${tds_temp_ratio},${turbidity_x_ph},${temp_sqr},${tds_diff},${temp_diff},${ph_diff},${tds_rollmean_3},${ph_rollstd_3}\\n`;\n\nmsg.payload = csv;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1790,"y":140,"wires":[["414fef7cbe44d41d"]]},{"id":"a3988621a743029e","type":"file","z":"f951a401b9bb56d4","g":"3fa10a145ace2b44","name":"","filename":"C:/Users/acer/OneDrive/Desktop/waterdata00.jsonl","filenameType":"str","appendNewline":false,"createDir":true,"overwriteFile":"false","encoding":"utf8","x":2130,"y":100,"wires":[[]]},{"id":"180f7d470e66d423","type":"debug","z":"f951a401b9bb56d4","g":"3fa10a145ace2b44","name":"debug 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2020,"y":60,"wires":[]},{"id":"414fef7cbe44d41d","type":"file","z":"f951a401b9bb56d4","g":"3fa10a145ace2b44","name":"","filename":"C:\\Users\\acer\\OneDrive\\Desktop\\iiot project\\iiot project\\waterlog00.csv","filenameType":"str","appendNewline":true,"createDir":false,"overwriteFile":"false","encoding":"none","x":2190,"y":140,"wires":[[]]},{"id":"95fe897a0de511e5","type":"file in","z":"f951a401b9bb56d4","g":"2829f343b3288301","name":"","filename":"C:\\Users\\acer\\OneDrive\\Desktop\\iiot project\\iiot project\\waterlog00.csv","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"utf8","allProps":false,"x":2150,"y":980,"wires":[["1348539eef49fb83"]]},{"id":"a9a2c0b18b6751ca","type":"function","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"📊 Build TDS Input","func":"let tds = flow.get(\"TDS\") || 0;\nlet tds_t1 = flow.get(\"tds_t1\") || tds;\nlet tds_t2 = flow.get(\"tds_t2\") || tds;\nlet tds_t3 = flow.get(\"tds_t3\") || tds;\n\nlet temp = flow.get(\"Temperature\") || 0;\nlet temp_t1 = flow.get(\"temp_t1\") || temp;\nlet temp_t2 = flow.get(\"temp_t2\") || temp;\n\nlet ph = flow.get(\"pH\") || 0;\nlet ph_t1 = flow.get(\"ph_t1\") || ph;\nlet ph_t2 = flow.get(\"ph_t2\") || ph;\nlet ph_t3 = flow.get(\"ph_t3\") || ph;\n\nlet turb = flow.get(\"Turbidity\") || 0;\n\n// Save new history values\nflow.set(\"tds_t3\", tds_t2);\nflow.set(\"tds_t2\", tds_t1);\nflow.set(\"tds_t1\", tds);\n\nflow.set(\"temp_t2\", temp_t1);\nflow.set(\"temp_t1\", temp);\n\nflow.set(\"ph_t3\", ph_t2);\nflow.set(\"ph_t2\", ph_t1);\nflow.set(\"ph_t1\", ph);\n\n// 🌟 ENGINEERED FEATURES (EXACTLY as trained)\nlet input = {\n  TDS: tds,\n  turbidity: turb,\n  temperature: temp,\n  pH: ph,\n  ph_dev: Math.abs(7 - ph),\n  tds_temp_ratio: tds / (temp || 1),\n  turbidity_x_ph: turb * ph,\n  temp_sqr: temp * temp,\n  tds_diff: tds_t1 - tds_t2,\n  temp_diff: temp_t1 - temp_t2,\n  ph_diff: ph_t1 - ph_t2,\n  tds_rollmean_3: (tds_t1 + tds_t2 + tds_t3) / 3,\n  ph_rollstd_3: Math.sqrt(\n    (\n      Math.pow(ph_t1 - ((ph_t1 + ph_t2 + ph_t3) / 3), 2) +\n      Math.pow(ph_t2 - ((ph_t1 + ph_t2 + ph_t3) / 3), 2) +\n      Math.pow(ph_t3 - ((ph_t1 + ph_t2 + ph_t3) / 3), 2)\n    ) / 3\n  )\n};\n\nmsg.payload = input;\nmsg.method = \"POST\";\nmsg.url = \"http://127.0.0.1:5000/forecast-tds\";\nmsg.headers = { \"Content-Type\": \"application/json\" };\nmsg.sensor_input = input;\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":1200,"wires":[["02f278d602dbdc7a"]]},{"id":"02f278d602dbdc7a","type":"http request","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"Call /forecast-tds","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":2130,"y":1200,"wires":[["ece029dd8f673300"]]},{"id":"ece029dd8f673300","type":"function","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"🧾 Format TDS Output","func":"let pred = msg.payload.forecast_tds;\nlet data = msg.sensor_input || {};\nlet actual = data.TDS || \"N/A\";\n\nmsg.payload = {\n    pred:pred,\n    actual:actual\n};\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2370,"y":1200,"wires":[["e20f45fde206f91f"]]},{"id":"505cc5b6b97e1f38","type":"function","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"🌡️ Build Temp Input","func":"let tds = flow.get(\"TDS\") || 0;\nlet turb = flow.get(\"Turbidity\") || 0;\nlet ph = flow.get(\"pH\") || 0;\nlet temp = flow.get(\"Temperature\") || 0;\n\n// Save pH history\nlet ph_t1 = flow.get(\"ph_t1\") || ph;\nlet ph_t2 = flow.get(\"ph_t2\") || ph;\nlet ph_t3 = flow.get(\"ph_t3\") || ph;\n\nflow.set(\"ph_t3\", ph_t2);\nflow.set(\"ph_t2\", ph_t1);\nflow.set(\"ph_t1\", ph);\n\n// Save TDS history\nlet tds_t1 = flow.get(\"tds_t1\") || tds;\nlet tds_t2 = flow.get(\"tds_t2\") || tds;\nlet tds_t3 = flow.get(\"tds_t3\") || tds;\n\nflow.set(\"tds_t3\", tds_t2);\nflow.set(\"tds_t2\", tds_t1);\nflow.set(\"tds_t1\", tds);\n\n// Final engineered feature input (MUST match training)\nlet input = {\n    TDS: tds,\n    turbidity: turb,\n    pH: ph,\n    ph_dev: Math.abs(7 - ph),\n    tds_temp_ratio: tds / (temp || 1),\n    turbidity_x_ph: turb * ph,\n    temp_sqr: Math.pow(temp, 2),\n    tds_diff: tds_t1 - tds_t2,\n    ph_diff: ph_t1 - ph_t2,\n    ph_rollstd_3: Math.sqrt(\n        (Math.pow(ph_t1 - ((ph_t1 + ph_t2 + ph_t3) / 3), 2) +\n            Math.pow(ph_t2 - ((ph_t1 + ph_t2 + ph_t3) / 3), 2) +\n            Math.pow(ph_t3 - ((ph_t1 + ph_t2 + ph_t3) / 3), 2)) / 3\n    ),\n    tds_rollmean_3: (tds_t1 + tds_t2 + tds_t3) / 3\n};\n\n// Prepare POST request\nmsg.payload = input;\nmsg.method = \"POST\";\nmsg.url = \"http://127.0.0.1:5000/forecast-temp\";\nmsg.headers = { \"Content-Type\": \"application/json\" };\nmsg.sensor_input = {\n    TDS: tds,\n    turbidity: turb,\n    pH: ph,\n    Temperature: temp\n};\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1820,"y":1240,"wires":[["f8d02a9dab5155ea"]]},{"id":"f8d02a9dab5155ea","type":"http request","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"Call /forecast-temp","method":"use","ret":"obj","url":"","x":2130,"y":1240,"wires":[["504e421845e5875a"]]},{"id":"504e421845e5875a","type":"function","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"🧾 Format Temp Output","func":"let pred = msg.payload.forecast_temp;\nlet actual = (msg.sensor_input && msg.sensor_input.Temperature) || \"N/A\";\nmsg.payload = {\n    pred: pred,\n    actual: actual\n};\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2370,"y":1240,"wires":[["cfce6b4707132d1d"]]},{"id":"a08fc5430ca70112","type":"function","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"🧪 Build pH Input","func":"// ✅ Fetch current sensor readings\nlet tds = flow.get(\"TDS\") || 0;\nlet turb = flow.get(\"Turbidity\") || 0;\nlet temp = flow.get(\"Temperature\") || 0;\nlet ph = flow.get(\"pH\") || 0;\n\n// ✅ Manage time-lagged pH\nlet ph_t1 = flow.get(\"ph_t1\") || ph;\nlet ph_t2 = flow.get(\"ph_t2\") || ph;\nlet ph_t3 = flow.get(\"ph_t3\") || ph;\n\n// ✅ Manage time-lagged TDS & Temperature (required for tds_diff and temp_diff)\nlet tds_t1 = flow.get(\"tds_t1\") || tds;\nlet tds_t2 = flow.get(\"tds_t2\") || tds;\nlet temp_t1 = flow.get(\"temp_t1\") || temp;\nlet temp_t2 = flow.get(\"temp_t2\") || temp;\n\n// 🔁 Update stored history\nflow.set(\"ph_t3\", ph_t2);\nflow.set(\"ph_t2\", ph_t1);\nflow.set(\"ph_t1\", ph);\n\nflow.set(\"tds_t2\", tds_t1);\nflow.set(\"tds_t1\", tds);\n\nflow.set(\"temp_t2\", temp_t1);\nflow.set(\"temp_t1\", temp);\n\n// 🔧 Build engineered features\nlet pH_rollmean_3 = (ph_t1 + ph_t2 + ph_t3) / 3;\nlet pH_rollstd_3 = Math.sqrt(\n    (Math.pow(ph_t1 - pH_rollmean_3, 2) +\n     Math.pow(ph_t2 - pH_rollmean_3, 2) +\n     Math.pow(ph_t3 - pH_rollmean_3, 2)) / 3\n);\n\n// 🎯 Input for Flask model (must match training exactly)\nlet input = {\n    TDS: tds,\n    turbidity: turb,\n    temperature: temp,\n    tds_temp_ratio: tds / (temp || 1),\n    turbidity_x_ph: turb * ph_t1,\n    temp_sqr: Math.pow(temp, 2),\n    tds_diff: tds_t1 - tds_t2,\n    temp_diff: temp_t1 - temp_t2,\n    ph_diff: ph_t1 - ph_t2,\n    pH_rollmean_3: pH_rollmean_3,\n    pH_rollstd_3: pH_rollstd_3,\n    tds_x_temp: tds * temp,\n    turb_over_tds: turb / (tds || 1),\n    ph_x_temp: ph_t1 * temp,\n    tds_temp_ph_ratio: tds / ((temp * ph_t1) || 1)\n};\n\n// 🌐 Prepare HTTP POST to Flask API\nmsg.payload = input;\nmsg.method = \"POST\";\nmsg.url = \"http://127.0.0.1:5000/forecast-ph\";\nmsg.headers = { \"Content-Type\": \"application/json\" };\n\n// 📦 Attach actual reading for comparison\nmsg.sensor_input = {\n    actual_pH: ph,\n    ...input\n};\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":1280,"wires":[["387a3c8b1c02f4e5"]]},{"id":"387a3c8b1c02f4e5","type":"http request","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"Call /forecast-ph","method":"use","ret":"obj","url":"","x":2120,"y":1280,"wires":[["36b22ec53bdfaa3c"]]},{"id":"36b22ec53bdfaa3c","type":"function","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"🧾 Format pH Output","func":"let pred = msg.payload.forecast_ph;\nlet actual = (msg.sensor_input && msg.sensor_input.actual_pH) || \"N/A\";\nmsg.payload = {\n    pred:pred,\n    actual:actual\n};\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2360,"y":1280,"wires":[["a0beed6ed610352e"]]},{"id":"3da83a96cfed2fe3","type":"function","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"🌫️ Build Turb Input","func":"let tds = flow.get(\"TDS\") || 0;\nlet temp = flow.get(\"Temperature\") || 0;\nlet ph = flow.get(\"pH\") || 0;\nlet turb = flow.get(\"Turbidity\") || 0;\n\n// Time-lag for turbidity\nlet turb_t1 = flow.get(\"turb_t1\") || turb;\nlet turb_t2 = flow.get(\"turb_t2\") || turb;\nlet turb_t3 = flow.get(\"turb_t3\") || turb;\n\nflow.set(\"turb_t3\", turb_t2);\nflow.set(\"turb_t2\", turb_t1);\nflow.set(\"turb_t1\", turb);\n\n// Derived features\nlet turb_rollmean = (turb_t1 + turb_t2 + turb_t3) / 3;\nlet turb_rollstd = Math.sqrt(\n  (Math.pow(turb_t1 - turb_rollmean, 2) +\n   Math.pow(turb_t2 - turb_rollmean, 2) +\n   Math.pow(turb_t3 - turb_rollmean, 2)) / 3\n);\n\nlet input = {\n  TDS: tds,\n  temperature: temp,\n  pH: ph,\n  tds_temp_ratio: tds / (temp || 1),\n  turbidity_x_ph: turb * ph,\n  temp_sqr: Math.pow(temp, 2),\n  tds_diff: flow.get(\"tds_t1\") - flow.get(\"tds_t2\") || 0,\n  temp_diff: flow.get(\"temp_t1\") - flow.get(\"temp_t2\") || 0,\n  turbidity_diff: turb - turb_t1,\n  turbidity_rollmean_3: turb_rollmean,\n  turbidity_rollstd_3: turb_rollstd,\n  tds_x_temp: tds * temp,\n  tds_over_temp: tds / (temp || 1),\n  turb_x_ph: turb * ph\n};\n\nmsg.payload = input;\nmsg.method = \"POST\";\nmsg.url = \"http://127.0.0.1:5000/forecast-turbidity\";\nmsg.headers = { \"Content-Type\": \"application/json\" };\n\nmsg.sensor_input = {\n  actual_turbidity: turb,\n  ...input\n};\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":1320,"wires":[["1167f5c69bfa7dd7"]]},{"id":"1167f5c69bfa7dd7","type":"http request","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"Call /forecast-turbidity","method":"use","ret":"obj","url":"","x":2140,"y":1320,"wires":[["a3f4e41f33a07242"]]},{"id":"a3f4e41f33a07242","type":"function","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","name":"🧾 Format Turbidity Output","func":"let pred = msg.payload.forecast_turbidity;\nlet d = msg.sensor_input || {};\nfunction fmt(x, unit = \"\") {\n    return (x !== undefined && !isNaN(x)) ? `${Number(x).toFixed(2)} ${unit}` : \"NaN\";\n}\nlet predStr = fmt(pred, \"NTU\");\nlet actualStr = fmt(d.actual_turbidity, \"NTU\");\n\nmsg.payload = {\n  pred: pred,\n  actual: actualStr\n};\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2380,"y":1320,"wires":[["b1c7564f5503c77b"]]},{"id":"69daeecc893032a4","type":"function","z":"f951a401b9bb56d4","g":"2829f343b3288301","name":"🧠 Engineer Features for Anomaly","func":"// 🔄 Get live sensor values\nlet pH = flow.get(\"pH\") || 0;\nlet temp = flow.get(\"Temperature\") || 0;\nlet tds = flow.get(\"TDS\") || 0;\nlet turb = flow.get(\"Turbidity\") || 0;\n\n// 🔁 Previous readings\nlet ph_t1 = flow.get(\"ph_t1\") || pH;\nlet ph_t2 = flow.get(\"ph_t2\") || pH;\nflow.set(\"ph_t2\", ph_t1);\nflow.set(\"ph_t1\", pH);\n\nlet tds_t1 = flow.get(\"tds_t1\") || tds;\nlet tds_t2 = flow.get(\"tds_t2\") || tds;\nflow.set(\"tds_t2\", tds_t1);\nflow.set(\"tds_t1\", tds);\n\nlet temp_t1 = flow.get(\"temp_t1\") || temp;\nlet temp_t2 = flow.get(\"temp_t2\") || temp;\nflow.set(\"temp_t2\", temp_t1);\nflow.set(\"temp_t1\", temp);\n\n// 💡 Feature engineering\nlet engineered = {\n  TDS: tds,\n  turbidity: turb,\n  temperature: temp,\n  pH: pH,\n  ph_dev: Math.abs(7 - pH),\n  tds_temp_ratio: tds / (temp || 1),\n  turbidity_x_ph: turb * pH,\n  temp_sqr: Math.pow(temp, 2),\n  tds_diff: tds_t1 - tds_t2,\n  temp_diff: temp_t1 - temp_t2,\n  ph_diff: ph_t1 - ph_t2,\n  tds_rollmean_3: (tds + tds_t1 + tds_t2) / 3,\n  ph_rollstd_3: Math.sqrt((\n    Math.pow(pH - ((pH + ph_t1 + ph_t2) / 3), 2) +\n    Math.pow(ph_t1 - ((pH + ph_t1 + ph_t2) / 3), 2) +\n    Math.pow(ph_t2 - ((pH + ph_t1 + ph_t2) / 3), 2)\n  ) / 3)\n};\n\n// ✅ Attach input to msg for later use\nmsg.payload = engineered;\nmsg.sensor_input = engineered;  // THIS LINE FIXES YOUR ISSUE\nmsg.method = \"POST\";\nmsg.url = \"http://127.0.0.1:5000/detect-anomaly\";\nmsg.headers = { \"Content-Type\": \"application/json\" };\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2080,"y":1040,"wires":[["058dc73e2fdfbb44"]]},{"id":"058dc73e2fdfbb44","type":"http request","z":"f951a401b9bb56d4","g":"2829f343b3288301","name":"Call /detect-anomaly","method":"use","ret":"obj","paytoqs":"ignore","url":"","persist":false,"authType":"","x":2360,"y":1040,"wires":[["a1f026bebe8d4904"]]},{"id":"1348539eef49fb83","type":"csv","z":"f951a401b9bb56d4","g":"2829f343b3288301","name":"","spec":"rfc","sep":",","hdrin":true,"hdrout":"none","multi":"mult","ret":"\\r\\n","temp":"","skip":"0","strings":true,"include_empty_strings":"","include_null_values":"","x":1790,"y":1040,"wires":[["69daeecc893032a4","a9a2c0b18b6751ca","505cc5b6b97e1f38","a08fc5430ca70112","3da83a96cfed2fe3","ae13eb7e5c6c236d"]]},{"id":"b38d389385669359","type":"inject","z":"f951a401b9bb56d4","g":"2829f343b3288301","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"10","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1810,"y":980,"wires":[["95fe897a0de511e5"]]},{"id":"ae13eb7e5c6c236d","type":"debug","z":"f951a401b9bb56d4","g":"2829f343b3288301","name":"debug 12","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2000,"y":1080,"wires":[]},{"id":"e75b3366c2457668","type":"ui_template","z":"f951a401b9bb56d4","g":"6aaaf8996c6bbb1d","group":"0ac555be21dab7e4","name":"Predictive Maintenance","order":1,"width":6,"height":16,"format":"<style>\n  .card-wrapper {\n    max-width: 360px;\n    margin: 20px auto;\n    background: linear-gradient(145deg, #181d29, #282e3f);\n    border-radius: 20px;\n    box-shadow: 0 0 24px #000000a0;\n    padding: 24px 18px;\n    font-family: 'Segoe UI', 'Poppins', sans-serif;\n  }\n\n  .header-glow {\n    font-size: 1.5rem;\n    margin-bottom: 14px;\n    font-weight: 800;\n    background: linear-gradient(90deg, #ffe155, #ffae52);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-shadow: 0 0 12px #ffda60a1;\n    letter-spacing: 0.05em;\n    text-align: center;\n  }\n\n  .status-box {\n    padding: 10px 12px;\n    margin-bottom: 18px;\n    border-radius: 14px;\n    font-weight: 600;\n    text-align: center;\n    color: white;\n    box-shadow: 0 0 12px rgba(255, 255, 255, 0.2);\n  }\n\n  .status-safe {\n    background: #002f1e;\n    border: 2px solid #00ffc3;\n    color: #00ffc3;\n    box-shadow: 0 0 12px #00ffc385;\n  }\n\n  .status-warning {\n    background: #332800;\n    border: 2px solid #ffe155;\n    color: #ffe155;\n    box-shadow: 0 0 12px #ffe15580;\n  }\n\n  .status-critical {\n    background: #300b0b;\n    border: 2px solid #ff3d3d;\n    color: #ff3d3d;\n    box-shadow: 0 0 12px #ff3d3d8c;\n  }\n\n  .sexy-sensor-card {\n    padding: 14px 12px;\n    border-radius: 16px;\n    margin-bottom: 18px;\n    background: #141e2f;\n    color: white;\n    text-align: center;\n    position: relative;\n    border: 2px solid transparent;\n  }\n\n  .sexy-sensor-card::before {\n    content: \"\";\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    right: -2px;\n    bottom: -2px;\n    border-radius: 18px;\n    background: linear-gradient(145deg, #00ffc3, #ff5de3, #e2ff72);\n    z-index: -1;\n    filter: blur(4px);\n    opacity: 0.55;\n  }\n\n  .sexy-sensor-label {\n    font-size: 0.95rem;\n    color: #bbbbbb;\n    margin-top: 4px;\n  }\n\n  .sexy-sensor-value {\n    font-size: 2rem; /* Bigger */\n    font-weight: bold;\n    margin-top: 6px;\n    text-shadow: 0 0 10px rgba(255, 255, 255, 0.35); /* Glow */\n  }\n\n  .delta-value {\n    font-size: 1rem; /* Bigger */\n    color: #ddd;\n    margin-top: 4px;\n    text-shadow: 0 0 6px rgba(180, 180, 255, 0.2); /* Glow */\n  }\n</style>\n\n<div class=\"card-wrapper\">\n  <h3 class=\"header-glow\">🛠️ Predictive Maintenance Status</h3>\n\n  <div id=\"status-box\" class=\"status-box\">Loading...</div>\n\n  <div class=\"sexy-sensor-card\">\n    <div style=\"font-size: 1.3rem;\">🧂</div>\n    <div class=\"sexy-sensor-label\">TDS</div>\n    <div class=\"sexy-sensor-value\" style=\"color:#00ffc3;\">\n      {{msg.input_data.TDS}} ppm\n    </div>\n    <div class=\"delta-value\">ΔTDS: {{msg.input_data.tds_diff}}</div>\n  </div>\n\n  <div class=\"sexy-sensor-card\">\n    <div style=\"font-size: 1.3rem;\">🌡️</div>\n    <div class=\"sexy-sensor-label\">Temp</div>\n    <div class=\"sexy-sensor-value\" style=\"color:#ff6fdc;\">\n      {{msg.input_data.temperature}} °C\n    </div>\n    <div class=\"delta-value\">ΔTemp: {{msg.input_data.temp_diff}}</div>\n  </div>\n\n  <div class=\"sexy-sensor-card\">\n    <div style=\"font-size: 1.3rem;\">🧪</div>\n    <div class=\"sexy-sensor-label\">pH</div>\n    <div class=\"sexy-sensor-value\" style=\"color:#caff73;\">\n      {{msg.input_data.pH}}\n    </div>\n    <div class=\"delta-value\">ΔpH: {{msg.input_data.ph_diff}}</div>\n  </div>\n</div>\n\n<script>\n  (function () {\n    const data = {{msg.input_data | safe}};\n\n    let statusText = \"🟢 Everything is Alright\";\n    let statusClass = \"status-safe\";\n\n    if (\n      data.TDS > 1000 || data.TDS < 50 ||\n      data.temperature > 60 || data.temperature < 5 ||\n      data.pH > 8.5 || data.pH < 6.5\n    ) {\n      statusText = \"⚠️ Warning: Check Parameters\";\n      statusClass = \"status-warning\";\n    }\n\n    if (\n      data.TDS > 1500 || data.temperature > 75 || data.pH > 9 || data.pH < 5\n    ) {\n      statusText = \"🚨 Maintenance Required\";\n      statusClass = \"status-critical\";\n    }\n\n    const statusBox = document.getElementById(\"status-box\");\n    statusBox.innerText = statusText;\n    statusBox.className = \"status-box \" + statusClass;\n  })();\n</script>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2710,"y":1440,"wires":[[]]},{"id":"ed42d48d5d886e5f","type":"file in","z":"f951a401b9bb56d4","g":"6aaaf8996c6bbb1d","name":"","filename":"C:\\Users\\acer\\OneDrive\\Desktop\\iiot project\\iiot project\\waterlog00.csv","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"utf8","allProps":false,"x":2170,"y":1420,"wires":[["49f35f7daa1a786f"]]},{"id":"22e868acd1535e0c","type":"function","z":"f951a401b9bb56d4","g":"6aaaf8996c6bbb1d","name":"function 3","func":"// 🧠 From CSV input (parsed by previous CSV node)\nlet rows = msg.payload;\nif (!Array.isArray(rows) || rows.length < 3) {\n    node.warn(\"Need at least 3 rows to compute lag features.\");\n    return null;\n}\n\n// Grab time steps: t-2, t-1, t\nlet r1 = rows[rows.length - 3];  // t-2\nlet r2 = rows[rows.length - 2];  // t-1\nlet r3 = rows[rows.length - 1];  // t (latest)\n\n// Parse safely\nfunction toNum(val) {\n    let num = parseFloat(val);\n    return isNaN(num) ? 0 : num;\n}\n\n// Current values\nlet TDS = toNum(r3.TDS);\nlet Temp = toNum(r3.temperature);\nlet pH = toNum(r3.pH);\n\n// Past values\nlet TDS_t1 = toNum(r2.TDS);\nlet TDS_t2 = toNum(r1.TDS);\nlet Temp_t1 = toNum(r2.temperature);\nlet Temp_t2 = toNum(r1.temperature);\nlet pH_t1 = toNum(r2.pH);\nlet pH_t2 = toNum(r1.pH);\n\n// Final input payload\nlet input = {\n    TDS: TDS,\n    temperature: Temp,\n    pH: pH,\n    tds_diff: parseFloat((TDS - TDS_t1).toFixed(3)),\n    temp_diff: parseFloat((Temp - Temp_t1).toFixed(3)),\n    ph_diff: parseFloat((pH - pH_t1).toFixed(3)),\n    \"TDS_t-1\": TDS_t1,\n    \"TDS_t-2\": TDS_t2,\n    \"Temp_t-1\": Temp_t1,\n    \"Temp_t-2\": Temp_t2,\n    \"pH_t-1\": pH_t1,\n    \"pH_t-2\": pH_t2\n};\n\n// ⏩ POST to Flask\nmsg.method = \"POST\";\nmsg.url = \"http://127.0.0.1:5000/maintenance-check\";\nmsg.payload = input;\nmsg.headers = { \"Content-Type\": \"application/json\" };\n\n// Attach input for output formatting\nmsg.input_data = input;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2180,"y":1480,"wires":[["bc141f90cc88bbcf"]]},{"id":"62a2fc0a930a6f36","type":"function","z":"f951a401b9bb56d4","g":"6aaaf8996c6bbb1d","name":"function 4","func":"let status = msg.payload.maintenance_status || \"Unknown\";\nlet input = msg.input_data || {};\n\nfunction safe(val) {\n    return (val !== undefined && !isNaN(val)) ? val : \"N/A\";\n}\n\nmsg.payload =\n    `🛠 Predictive Maintenance Check\nStatus: ${status}\n\n📊 Inputs:\nTDS: ${safe(input.TDS)}\nTemp: ${safe(input.temperature)} °C\npH: ${safe(input.pH)}\nΔTDS: ${safe(input.tds_diff)}\nΔTemp: ${safe(input.temp_diff)}\nΔpH: ${safe(input.ph_diff)}`;\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2520,"y":1460,"wires":[["96ed51ead175e09a","e75b3366c2457668"]]},{"id":"bc141f90cc88bbcf","type":"http request","z":"f951a401b9bb56d4","g":"6aaaf8996c6bbb1d","name":"maintainance ","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":2350,"y":1480,"wires":[["62a2fc0a930a6f36"]]},{"id":"49f35f7daa1a786f","type":"csv","z":"f951a401b9bb56d4","g":"6aaaf8996c6bbb1d","name":"","spec":"rfc","sep":",","hdrin":true,"hdrout":"none","multi":"mult","ret":"\\r\\n","temp":"","skip":"0","strings":true,"include_empty_strings":"","include_null_values":"","x":2030,"y":1480,"wires":[["22e868acd1535e0c"]]},{"id":"66d313db7862afa2","type":"inject","z":"f951a401b9bb56d4","g":"6aaaf8996c6bbb1d","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"7","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1810,"y":1420,"wires":[["ed42d48d5d886e5f"]]},{"id":"96ed51ead175e09a","type":"debug","z":"f951a401b9bb56d4","g":"6aaaf8996c6bbb1d","name":"debug 8","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2660,"y":1480,"wires":[]},{"id":"bae09b38098f3839","type":"modbus-write","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"MOTOR ON","showStatusActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"HoldingRegister","adr":"25","quantity":"1","server":"9dbbabf5ee2fbaf6","emptyMsgOnFail":false,"keepMsgProperties":false,"delayOnStart":false,"startDelayTime":"","x":1070,"y":880,"wires":[[],[]]},{"id":"e5142b8c634628f2","type":"function","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"function 2","func":"// Check the state of the switch and assign modbus value\nmsg.payload = msg.payload === true ? 256 : 0;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":880,"wires":[["bae09b38098f3839"]]},{"id":"be9a740676324818","type":"ui_template","z":"f951a401b9bb56d4","g":"1826a0bb27ccf03f","group":"fe8832c86cba1be2","name":"Universal Style","order":1,"width":0,"height":0,"format":"<style id=\"custom-theme\">\n    /* --- NEON CYBER BLUE-PURPLE-PINK THEME --- */\n    /* Base */\n    body.nr-dashboard-theme {\n        background: linear-gradient(135deg, #120233 0%, #1a1454 80%, #421484 100%) !important;\n        font-family: 'Century Gothic', 'Segoe UI', sans-serif !important;\n        color: #efeafd !important;\n        background-attachment: fixed !important;\n    }\n\n    /* HEADER Bar */\n    .nr-dashboard-header,\n    .nr-dashboard-toolbar {\n        background: linear-gradient(90deg, #321974 70%, #5c2569 100%) !important;\n        color: #fff !important;\n        border-bottom: 1px solid #7e6fff !important;\n        box-shadow: 0 4px 16px #8b5cf655, 0 2px 8px #c26dda33;\n    }\n\n    /* SIDEBAR */\n    md-sidenav,\n    .nr-dashboard-sidebar {\n        background: linear-gradient(130deg, #220a43 0%, #361b61 70%, #432883 100%) !important;\n        color: #ede8f6 !important;\n        border-top-right-radius: 14px;\n        border-bottom-right-radius: 14px;\n        box-shadow: 2px 0 26px #4cfdfb24;\n    }\n\n    /* Sidenav buttons */\n    md-sidenav .md-button,\n    .nr-dashboard-sidebar .md-button,\n    .nr-dashboard-sidebar .md-list-item {\n        color: #cabadc !important;\n        background: transparent !important;\n        border-radius: 8px !important;\n        transition: background 0.3s, color 0.2s;\n    }\n\n    md-sidenav .md-button:hover,\n    .nr-dashboard-sidebar .md-button:hover,\n    .nr-dashboard-sidebar .md-list-item:hover {\n        background: linear-gradient(90deg, #4323ad 0%, #d367cb 100%) !important;\n        color: #fff1fa !important;\n    }\n\n    /* Neon Glow for Active Sidebar Tab (robust for all node-red dashboard markup) */\n    .nr-dashboard-sidebar .md-button.md-active,\n    .nr-dashboard-sidebar .md-list-item.active,\n    .nr-dashboard-sidebar .nr-dashboard-sidebar-selected,\n    .nr-dashboard-sidebar [aria-selected=\"true\"],\n    .nr-dashboard-sidebar .md-list-item[aria-selected=\"true\"],\n    .nr-dashboard-sidebar .md-button[aria-selected=\"true\"] {\n        background: linear-gradient(90deg, #7f34db 40%, #ea56f8 100%);\n        color: #fff0fb !important;\n        box-shadow: 0 0 16px 0 #8b5cf666, 0 0 22px 8px #f43fdc99, 0 0 22px 2px #20d7fc66;\n        border-radius: 12px !important;\n        position: relative;\n        z-index: 4;\n        transition: box-shadow 0.16s, background 0.18s;\n    }\n\n    /* GROUP (Panels) */\n    .nr-dashboard-cardpanel,\n    .md-card,\n    .nr-dashboard-theme md-card,\n    .nr-dashboard-group,\n    .nr-dashboard-template,\n    .nr-dashboard-list,\n    .nr-dashboard-text {\n        background: linear-gradient(120deg, #261948 70%, #3c2472 120%) !important;\n        color: #e0dbff !important;\n        border: 1.5px solid #944eea !important;\n        border-radius: 16px !important;\n        box-shadow: 0 10px 18px #41076514, 0 4px 42px #cd37ff22;\n    }\n\n    /* Panel headers */\n    .nr-dashboard-group-title,\n    .md-title {\n        color: #ea56f8 !important;\n        font-weight: bold !important;\n        background: none !important;\n        border-radius: 12px 12px 0 0;\n        margin-bottom: 7px !important;\n        letter-spacing: 0.03em;\n        text-shadow: 0 1px 10px #f43fdc22;\n    }\n\n    /* Templates & text */\n    .nr-dashboard-text,\n    .nr-dashboard-template,\n    .nr-dashboard-template p,\n    .nr-dashboard-template span {\n        color: #e5dbf7 !important;\n        background: none !important;\n    }\n\n    /* Buttons */\n    .md-button,\n    .nr-dashboard-button {\n        background: linear-gradient(90deg, #5f2fff 70%, #b95cff 100%) !important;\n        color: #fff !important;\n        border: 2px solid #ea56f8 !important;\n        border-radius: 10px !important;\n        font-weight: 700 !important;\n        transition: background 0.18s, border 0.17s, color 0.18s, box-shadow 0.20s;\n        box-shadow: 0 2px 10px #944eea44;\n    }\n\n    .md-button:hover,\n    .nr-dashboard-button:hover {\n        background: linear-gradient(90deg, #ea56f8 40%, #36f9ff 100%) !important;\n        color: #fff !important;\n        border-color: #36f9ff !important;\n    }\n\n    /* Gauges and Charts */\n    .nr-dashboard-gauge text,\n    .nr-dashboard-chart text {\n        fill: #f43fdc !important;\n    }\n\n    .nr-dashboard-widget-gauge .nr-dashboard-gauge-donutchart,\n    .nr-dashboard-gauge {\n        background: #361b61 !important;\n        border-radius: 16px !important;\n    }\n\n    .nr-dashboard-chart {\n        background-color: #261948 !important;\n        border-radius: 16px !important;\n        box-shadow: 0 2px 20px #d360f329;\n    }\n\n    /* Progressbar */\n    .nr-dashboard-progressbar .progress {\n        background: linear-gradient(90deg, #5df6ff 0%, #f43fdc 100%) !important;\n    }\n\n    /* Tables */\n    .nr-dashboard-table td,\n    .nr-dashboard-table th,\n    .nr-dashboard-theme .nr-dashboard-table,\n    .nr-dashboard-theme .md-table {\n        color: #e6d6ff !important;\n        background-color: #242054 !important;\n        border-color: #734ded !important;\n        border-radius: 4px !important;\n    }\n\n    /* Highlights */\n    .highlight-yellow,\n    .highlight-warning {\n        color: #faccf9 !important;\n        text-shadow: 0 2px 7px #f6b3fc44;\n    }\n\n    .highlight-red,\n    .highlight-error {\n        color: #f43fdc !important;\n        text-shadow: 0 2px 8px #ea56f844;\n    }\n\n    .highlight-green,\n    .highlight-ok {\n        color: #36f9ff !important;\n        text-shadow: 0 1px 6px #36f9ff33;\n    }\n\n    /* Scrollbars */\n    ::-webkit-scrollbar-thumb {\n        background: #231045 !important;\n        border-radius: 8px !important;\n    }\n\n    ::-webkit-scrollbar {\n        background: #11082a !important;\n        width: 9px !important;\n    }\n\n    /* Mobile tweaks */\n    @media (max-width: 800px) {\n\n        .md-card,\n        .nr-dashboard-cardpanel,\n        .nr-dashboard-theme md-card,\n        .nr-dashboard-group {\n            border-radius: 8px !important;\n        }\n\n        .nr-dashboard-sidebar,\n        md-sidenav {\n            border-radius: 0 10px 10px 0 !important;\n        }\n    }\n</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"global","className":"","x":380,"y":60,"wires":[[]]},{"id":"b1c7564f5503c77b","type":"ui_template","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","group":"2c338e5efeb300a2","name":"TURBIDITY","order":1,"width":9,"height":8,"format":"<style>\n  .prediction-wrapper {\n    background: linear-gradient(145deg, #241a08 65%, #504012 120%);\n    border-radius: 24px;\n    padding: 24px 28px;\n    max-width: 530px;\n    /* reduced by 50px */\n    margin: 20px auto;\n    box-shadow: 0 5px 35px #f9c96040, 0 0 90px #ffe08e32;\n    font-family: 'Fira Mono', 'Segoe UI', monospace, sans-serif;\n    color: #fff9d0;\n    position: relative;\n    backdrop-filter: blur(8px);\n    animation: fadeIn 0.6s ease-in;\n  }\n\n  .prediction-wrapper::after {\n    content: \"\";\n    position: absolute;\n    inset: 0;\n    border-radius: 24px;\n    background: linear-gradient(128deg, transparent 84%, #ffd68218 100%);\n    box-shadow: 0 0 120px 15px #ffd36d32 inset;\n    pointer-events: none;\n    z-index: 0;\n  }\n\n  .prediction-header {\n    font-size: 1.8em;\n    font-weight: 900;\n    background: linear-gradient(90deg, #ffe066, #f7ae37 40%, #ffebad 90%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-shadow: 0 0 16px #ffd14886;\n    margin-bottom: 24px;\n    z-index: 2;\n    position: relative;\n    letter-spacing: 1.3px;\n    text-align: center;\n  }\n\n  .tds-boxes {\n    display: flex;\n    justify-content: space-around;\n    gap: 22px;\n    flex-wrap: wrap;\n    z-index: 2;\n    position: relative;\n  }\n\n  .tds-card {\n    flex: 1 1 210px;\n    background: linear-gradient(120deg, #4b390f 75%, #eed18e 120%);\n    border-radius: 18px;\n    padding: 24px 18px;\n    box-shadow: 0 5px 35px #faca5770, 0 0px 90px #fff6e0b4;\n    text-align: center;\n    backdrop-filter: blur(10px);\n    transition: transform 0.25s;\n  }\n\n  .tds-card:hover {\n    transform: scale(1.03);\n  }\n\n  .tds-label {\n    font-size: 1.1em;\n    font-weight: 700;\n    color: #ffea89;\n    text-shadow: 0 0 4px #faecb0b4;\n    margin-bottom: 12px;\n    display: block;\n  }\n\n  .tds-value {\n    font-size: 2.1em;\n    font-weight: 900;\n    color: #ffe15c;\n    text-shadow: 0 0 6px #ffe78f;\n  }\n\n  .tds-card.actual .tds-label {\n    color: #fbb85d;\n  }\n\n  .tds-card.actual .tds-value {\n    color: #ffac3c;\n    text-shadow: 0 0 6px #ffd196;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n</style>\n\n<div class=\"prediction-wrapper\">\n  <div class=\"prediction-header\">Turbidity Prediction</div>\n  <div class=\"tds-boxes\">\n    <div class=\"tds-card\">\n      <div class=\"tds-label\">Predicted</div>\n      <div class=\"tds-value\" ng-bind=\"msg.payload.pred\"></div>\n    </div>\n    <div class=\"tds-card actual\">\n      <div class=\"tds-label\">Actual</div>\n      <div class=\"tds-value\" ng-bind=\"msg.payload.actual\"></div>\n    </div>\n  </div>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2630,"y":1320,"wires":[[]]},{"id":"a0beed6ed610352e","type":"ui_template","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","group":"2c338e5efeb300a2","name":"pH","order":2,"width":7,"height":8,"format":"<style>\n  .prediction-wrapper {\n    background: linear-gradient(145deg, #241a08 65%, #504012 120%);\n    border-radius: 24px;\n    padding: 24px 28px;\n    max-width: 530px;\n    /* reduced by 50px */\n    margin: 20px auto;\n    box-shadow: 0 5px 35px #f9c96040, 0 0 90px #ffe08e32;\n    font-family: 'Fira Mono', 'Segoe UI', monospace, sans-serif;\n    color: #fff9d0;\n    position: relative;\n    backdrop-filter: blur(8px);\n    animation: fadeIn 0.6s ease-in;\n  }\n\n  .prediction-wrapper::after {\n    content: \"\";\n    position: absolute;\n    inset: 0;\n    border-radius: 24px;\n    background: linear-gradient(128deg, transparent 84%, #ffd68218 100%);\n    box-shadow: 0 0 120px 15px #ffd36d32 inset;\n    pointer-events: none;\n    z-index: 0;\n  }\n\n  .prediction-header {\n    font-size: 1.8em;\n    font-weight: 900;\n    background: linear-gradient(90deg, #ffe066, #f7ae37 40%, #ffebad 90%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-shadow: 0 0 16px #ffd14886;\n    margin-bottom: 24px;\n    z-index: 2;\n    position: relative;\n    letter-spacing: 1.3px;\n    text-align: center;\n  }\n\n  .tds-boxes {\n    display: flex;\n    justify-content: space-around;\n    gap: 22px;\n    flex-wrap: wrap;\n    z-index: 2;\n    position: relative;\n  }\n\n  .tds-card {\n    flex: 1 1 210px;\n    background: linear-gradient(120deg, #4b390f 75%, #eed18e 120%);\n    border-radius: 18px;\n    padding: 24px 18px;\n    box-shadow: 0 5px 35px #faca5770, 0 0px 90px #fff6e0b4;\n    text-align: center;\n    backdrop-filter: blur(10px);\n    transition: transform 0.25s;\n  }\n\n  .tds-card:hover {\n    transform: scale(1.03);\n  }\n\n  .tds-label {\n    font-size: 1.1em;\n    font-weight: 700;\n    color: #ffea89;\n    text-shadow: 0 0 4px #faecb0b4;\n    margin-bottom: 12px;\n    display: block;\n  }\n\n  .tds-value {\n    font-size: 2.1em;\n    font-weight: 900;\n    color: #ffe15c;\n    text-shadow: 0 0 6px #ffe78f;\n  }\n\n  .tds-card.actual .tds-label {\n    color: #fbb85d;\n  }\n\n  .tds-card.actual .tds-value {\n    color: #ffac3c;\n    text-shadow: 0 0 6px #ffd196;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n</style>\n\n<div class=\"prediction-wrapper\">\n  <div class=\"prediction-header\">pH Prediction</div>\n  <div class=\"tds-boxes\">\n    <div class=\"tds-card\">\n      <div class=\"tds-label\">Predicted</div>\n      <div class=\"tds-value\" ng-bind=\"msg.payload.pred\"></div>\n    </div>\n    <div class=\"tds-card actual\">\n      <div class=\"tds-label\">Actual</div>\n      <div class=\"tds-value\" ng-bind=\"msg.payload.actual\"></div>\n    </div>\n  </div>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2610,"y":1280,"wires":[[]]},{"id":"e20f45fde206f91f","type":"ui_template","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","group":"2c338e5efeb300a2","name":"TDS","order":3,"width":7,"height":8,"format":"<style>\n  .prediction-wrapper {\n    background: linear-gradient(145deg, #241a08 65%, #504012 120%);\n    border-radius: 24px;\n    padding: 24px 28px;\n    max-width: 530px; /* reduced by 50px */\n    margin: 20px auto;\n    box-shadow: 0 5px 35px #f9c96040, 0 0 90px #ffe08e32;\n    font-family: 'Fira Mono', 'Segoe UI', monospace, sans-serif;\n    color: #fff9d0;\n    position: relative;\n    backdrop-filter: blur(8px);\n    animation: fadeIn 0.6s ease-in;\n  }\n\n  .prediction-wrapper::after {\n    content: \"\";\n    position: absolute;\n    inset: 0;\n    border-radius: 24px;\n    background: linear-gradient(128deg, transparent 84%, #ffd68218 100%);\n    box-shadow: 0 0 120px 15px #ffd36d32 inset;\n    pointer-events: none;\n    z-index: 0;\n  }\n\n  .prediction-header {\n    font-size: 1.8em;\n    font-weight: 900;\n    background: linear-gradient(90deg, #ffe066, #f7ae37 40%, #ffebad 90%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-shadow: 0 0 16px #ffd14886;\n    margin-bottom: 24px;\n    z-index: 2;\n    position: relative;\n    letter-spacing: 1.3px;\n    text-align: center;\n  }\n\n  .tds-boxes {\n    display: flex;\n    justify-content: space-around;\n    gap: 22px;\n    flex-wrap: wrap;\n    z-index: 2;\n    position: relative;\n  }\n\n  .tds-card {\n    flex: 1 1 210px;\n    background: linear-gradient(120deg, #4b390f 75%, #eed18e 120%);\n    border-radius: 18px;\n    padding: 24px 18px;\n    box-shadow: 0 5px 35px #faca5770, 0 0px 90px #fff6e0b4;\n    text-align: center;\n    backdrop-filter: blur(10px);\n    transition: transform 0.25s;\n  }\n\n  .tds-card:hover {\n    transform: scale(1.03);\n  }\n\n  .tds-label {\n    font-size: 1.1em;\n    font-weight: 700;\n    color: #ffea89;\n    text-shadow: 0 0 4px #faecb0b4;\n    margin-bottom: 12px;\n    display: block;\n  }\n\n  .tds-value {\n    font-size: 2.1em;\n    font-weight: 900;\n    color: #ffe15c;\n    text-shadow: 0 0 6px #ffe78f;\n  }\n\n  .tds-card.actual .tds-label {\n    color: #fbb85d;\n  }\n\n  .tds-card.actual .tds-value {\n    color: #ffac3c;\n    text-shadow: 0 0 6px #ffd196;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n</style>\n\n<div class=\"prediction-wrapper\">\n  <div class=\"prediction-header\">TDS Prediction</div>\n  <div class=\"tds-boxes\">\n    <div class=\"tds-card\">\n      <div class=\"tds-label\">Predicted</div>\n      <div class=\"tds-value\" ng-bind=\"msg.payload.pred\"></div>\n    </div>\n    <div class=\"tds-card actual\">\n      <div class=\"tds-label\">Actual</div>\n      <div class=\"tds-value\" ng-bind=\"msg.payload.actual\"></div>\n    </div>\n  </div>\n</div>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2610,"y":1200,"wires":[[]]},{"id":"cfce6b4707132d1d","type":"ui_template","z":"f951a401b9bb56d4","g":"54571cbd19178bf6","group":"2c338e5efeb300a2","name":"TEMPERATURE","order":4,"width":9,"height":8,"format":"<style>\n  .prediction-wrapper {\n    background: linear-gradient(145deg, #241a08 65%, #504012 120%);\n    border-radius: 24px;\n    padding: 24px 28px;\n    max-width: 530px;\n    /* reduced by 50px */\n    margin: 20px auto;\n    box-shadow: 0 5px 35px #f9c96040, 0 0 90px #ffe08e32;\n    font-family: 'Fira Mono', 'Segoe UI', monospace, sans-serif;\n    color: #fff9d0;\n    position: relative;\n    backdrop-filter: blur(8px);\n    animation: fadeIn 0.6s ease-in;\n  }\n\n  .prediction-wrapper::after {\n    content: \"\";\n    position: absolute;\n    inset: 0;\n    border-radius: 24px;\n    background: linear-gradient(128deg, transparent 84%, #ffd68218 100%);\n    box-shadow: 0 0 120px 15px #ffd36d32 inset;\n    pointer-events: none;\n    z-index: 0;\n  }\n\n  .prediction-header {\n    font-size: 1.8em;\n    font-weight: 900;\n    background: linear-gradient(90deg, #ffe066, #f7ae37 40%, #ffebad 90%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-shadow: 0 0 16px #ffd14886;\n    margin-bottom: 24px;\n    z-index: 2;\n    position: relative;\n    letter-spacing: 1.3px;\n    text-align: center;\n  }\n\n  .tds-boxes {\n    display: flex;\n    justify-content: space-around;\n    gap: 22px;\n    flex-wrap: wrap;\n    z-index: 2;\n    position: relative;\n  }\n\n  .tds-card {\n    flex: 1 1 210px;\n    background: linear-gradient(120deg, #4b390f 75%, #eed18e 120%);\n    border-radius: 18px;\n    padding: 24px 18px;\n    box-shadow: 0 5px 35px #faca5770, 0 0px 90px #fff6e0b4;\n    text-align: center;\n    backdrop-filter: blur(10px);\n    transition: transform 0.25s;\n  }\n\n  .tds-card:hover {\n    transform: scale(1.03);\n  }\n\n  .tds-label {\n    font-size: 1.1em;\n    font-weight: 700;\n    color: #ffea89;\n    text-shadow: 0 0 4px #faecb0b4;\n    margin-bottom: 12px;\n    display: block;\n  }\n\n  .tds-value {\n    font-size: 2.1em;\n    font-weight: 900;\n    color: #ffe15c;\n    text-shadow: 0 0 6px #ffe78f;\n  }\n\n  .tds-card.actual .tds-label {\n    color: #fbb85d;\n  }\n\n  .tds-card.actual .tds-value {\n    color: #ffac3c;\n    text-shadow: 0 0 6px #ffd196;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n</style>\n\n<div class=\"prediction-wrapper\">\n  <div class=\"prediction-header\">Temperature Prediction</div>\n  <div class=\"tds-boxes\">\n    <div class=\"tds-card\">\n      <div class=\"tds-label\">Predicted</div>\n      <div class=\"tds-value\" ng-bind=\"msg.payload.pred\"></div>\n    </div>\n    <div class=\"tds-card actual\">\n      <div class=\"tds-label\">Actual</div>\n      <div class=\"tds-value\" ng-bind=\"msg.payload.actual\"></div>\n    </div>\n  </div>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2650,"y":1240,"wires":[[]]},{"id":"1f390d11d3fb7996","type":"modbus-read","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"sensor value status","topic":"","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"Coil","adr":"1","quantity":"1","rate":"0.6","rateUnit":"s","delayOnStart":false,"startDelayTime":"","server":"9dbbabf5ee2fbaf6","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":630,"y":1020,"wires":[["05ea6e6b1910461f"],[]]},{"id":"05ea6e6b1910461f","type":"function","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"function 1","func":"// Get the array from msg.payload.data\nlet arr = msg.payload.data;\n\n// Check if it's valid\nif (Array.isArray(arr) && arr.length > 0) {\n    let motorState = arr[0];  // Get index 0\n    msg.payload = motorState;\n    node.warn(\"LED should be: \" + motorState);\n    return msg;\n} else {\n    node.warn(\"Data missing or malformed\");\n    return null;  // Stop here if something's wrong\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1080,"wires":[["1397b7bd8960c5c3","f464d6b167cd9afe"]]},{"id":"1397b7bd8960c5c3","type":"debug","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"debug 1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1000,"y":1100,"wires":[]},{"id":"91b4d0a92bef4046","type":"debug","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"debug 6","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":840,"y":1040,"wires":[]},{"id":"35d34bda57a299d3","type":"modbus-read","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"Motor ","topic":"","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"Coil","adr":"0","quantity":"5","rate":"0.4","rateUnit":"s","delayOnStart":false,"startDelayTime":"","server":"9dbbabf5ee2fbaf6","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":690,"y":960,"wires":[["4e3e6878ce92fb08"],["b62ce165c51953bc"]]},{"id":"b62ce165c51953bc","type":"function","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"function 6","func":"// Get the array from msg.payload.data\nlet arr = msg.payload.data;\n\n// Check if it's valid\nif (Array.isArray(arr) && arr.length > 0) {\n    let motorState = arr[0];  // Get index 0\n    msg.payload = motorState;\n    node.warn(\"LED should be: \" + motorState);\n    return msg;\n} else {\n    node.warn(\"Data missing or malformed\");\n    return null;  // Stop here if something's wrong\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":980,"wires":[["99ddf94b83f87e4f","a5ede0445fb3edca"]]},{"id":"99ddf94b83f87e4f","type":"debug","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"debug 7","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1000,"y":1000,"wires":[]},{"id":"4e3e6878ce92fb08","type":"debug","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"debug 8","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":840,"y":940,"wires":[]},{"id":"5ca81b4ef1c2937d","type":"modbus-read","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"sensor issue ","topic":"","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"Coil","adr":"3","quantity":"1","rate":"0.5","rateUnit":"s","delayOnStart":false,"startDelayTime":"","server":"9dbbabf5ee2fbaf6","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":630,"y":1260,"wires":[["dd7bb7f12b2e43e1"],[]]},{"id":"dd7bb7f12b2e43e1","type":"function","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"function 7","func":"// Get the array from msg.payload.data\nlet arr = msg.payload.data;\n\n// Check if it's valid\nif (Array.isArray(arr) && arr.length > 0) {\n    let motorState = arr[0];  // Get index 0\n    msg.payload = motorState;\n    node.warn(\"LED should be: \" + motorState);\n    return msg;\n} else {\n    node.warn(\"Data missing or malformed\");\n    return null;  // Stop here if something's wrong\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1280,"wires":[["21edfa543b97e226","b7f232083f97013d"]]},{"id":"21edfa543b97e226","type":"debug","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"debug 9","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1000,"y":1300,"wires":[]},{"id":"a3964f330f65c75b","type":"inject","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"3","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":670,"y":1300,"wires":[["dd7bb7f12b2e43e1"]]},{"id":"d319a3bc063d3ded","type":"modbus-read","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":" value open/close","topic":"","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"Coil","adr":"2","quantity":"1","rate":"0.5","rateUnit":"s","delayOnStart":false,"startDelayTime":"","server":"9dbbabf5ee2fbaf6","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":600,"y":1140,"wires":[["7798a797538dbfe0"],[]]},{"id":"7798a797538dbfe0","type":"function","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"function 8","func":"// Get the array from msg.payload.data\nlet arr = msg.payload.data;\n\n// Check if it's valid\nif (Array.isArray(arr) && arr.length > 0) {\n    let motorState = arr[0];  // Get index 0\n    msg.payload = motorState;\n    node.warn(\"LED should be: \" + motorState);\n    return msg;\n} else {\n    node.warn(\"Data missing or malformed\");\n    return null;  // Stop here if something's wrong\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1180,"wires":[["b751056798c5eb9c","da41ad80805b0ee2"]]},{"id":"b751056798c5eb9c","type":"debug","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"debug 11","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1000,"y":1200,"wires":[]},{"id":"66917a902111aee9","type":"inject","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"3","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":610,"y":1180,"wires":[["7798a797538dbfe0"]]},{"id":"1c5fe32e523e087e","type":"modbus-read","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"Maintainance timer","topic":"","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"Coil","adr":"4","quantity":"1","rate":"0.5","rateUnit":"s","delayOnStart":false,"startDelayTime":"","server":"9dbbabf5ee2fbaf6","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":630,"y":1360,"wires":[["3a108d4f68ba893f"],[]]},{"id":"3a108d4f68ba893f","type":"function","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"function 9","func":"// Get the array from msg.payload.data\nlet arr = msg.payload.data;\n\n// Check if it's valid\nif (Array.isArray(arr) && arr.length > 0) {\n    let motorState = arr[0];  // Get index 0\n    msg.payload = motorState;\n    node.warn(\"LED should be: \" + motorState);\n    return msg;\n} else {\n    node.warn(\"Data missing or malformed\");\n    return null;  // Stop here if something's wrong\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1380,"wires":[["88b475692441ab50"]]},{"id":"63a582fef45728c8","type":"inject","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"3","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":670,"y":1400,"wires":[["3a108d4f68ba893f"]]},{"id":"b91ba92c5f818e50","type":"debug","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"debug 14","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":840,"y":1340,"wires":[]},{"id":"fdbf3849f86d5480","type":"inject","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"3","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":610,"y":1100,"wires":[["05ea6e6b1910461f"]]},{"id":"a5ede0445fb3edca","type":"ui_template","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","group":"c36a6b09f36b3f87","name":"MOTOR","order":1,"width":6,"height":3,"format":"<style>\n  .motor-led-card {\n    background: linear-gradient(120deg, #19173a 70%, #332656 110%);\n    border-radius: 18px;\n    box-shadow: 0 4px 18px #2c085780;\n    display: flex;\n    align-items: center;\n    gap: 22px;\n    padding: 24px 34px;\n    margin: 27px 0;\n    max-width: 370px;\n    min-width: 200px;\n    font-family: 'Fira Mono', 'Segoe UI', Arial, monospace, sans-serif;\n    color: #f9e3fe;\n  }\n\n  .motor-led-label {\n    font-weight: bold;\n    font-size: 1.13em;\n    letter-spacing: 0.04em;\n    min-width: 75px;\n    text-align: left;\n  }\n\n  .motor-led-circle {\n    width: 33px;\n    height: 33px;\n    border-radius: 50%;\n    background: #444;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: background 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n  }\n\n  /* Force specificity with !important */\n  .motor-led-on {\n    background: radial-gradient(circle, #25e700 60%, #20b600 100%) !important;\n    box-shadow: 0 0 12px 5px #43ff36cc, 0 0 0 8px #1f9626b5 inset !important;\n  }\n\n  .motor-led-off {\n    background: radial-gradient(circle, #f93447 60%, #ad072a 100%) !important;\n    box-shadow: 0 0 12px 5px #ff2361cc, 0 0 0 8px #611724b0 inset !important;\n  }\n\n  .motor-led-status {\n    font-size: 1em;\n    font-weight: 400;\n    margin-left: 10px;\n    min-width: 55px;\n  }\n</style>\n\n<div class=\"motor-led-card\">\n  <span class=\"motor-led-label\">Motor</span>\n  <span id=\"motor_led\" class=\"motor-led-circle\"></span>\n  <span id=\"motor_led_status\" class=\"motor-led-status\"></span>\n</div>\n\n<script>\n  (function(scope) {\n    const led = document.getElementById('motor_led');\n    const text = document.getElementById('motor_led_status');\n\n    scope.$watch('msg.payload', function(motorState) {\n        // Normalize input to lowercase string for robustness\n        let state = String(motorState).toLowerCase().trim();\n\n        if (state === \"true\" || state === \"1\" || state === \"on\") {\n            led.classList.remove(\"motor-led-off\");\n            led.classList.add(\"motor-led-on\");\n            text.innerText = \"ON\";\n            text.style.color = \"#25e700\";\n        } else {\n            led.classList.remove(\"motor-led-on\");\n            led.classList.add(\"motor-led-off\");\n            text.innerText = \"OFF\";\n            text.style.color = \"#f93447\";\n        }\n    });\n})(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1000,"y":960,"wires":[[]]},{"id":"f464d6b167cd9afe","type":"ui_template","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","group":"c36a6b09f36b3f87","name":"SENSOR","order":4,"width":7,"height":3,"format":"<style>\n    .sensor-led-card {\n        background: linear-gradient(120deg, #1d1c3f 70%, #3a2a60 110%);\n        border-radius: 18px;\n        box-shadow: 0 4px 18px #2c085780;\n        display: flex;\n        align-items: center;\n        gap: 22px;\n        padding: 24px 34px;\n        margin: 27px 0;\n        max-width: 370px;\n        min-width: 200px;\n        font-family: 'Fira Mono', 'Segoe UI', Arial, monospace, sans-serif;\n        color: #f1dcff;\n    }\n\n    .sensor-led-label {\n        font-weight: bold;\n        font-size: 1.13em;\n        letter-spacing: 0.04em;\n        min-width: 75px;\n        text-align: left;\n    }\n\n    .sensor-led-circle {\n        width: 33px;\n        height: 33px;\n        border-radius: 50%;\n        background: #444;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: background 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n    }\n\n    .sensor-led-on {\n        background: radial-gradient(circle, #25e700 60%, #20b600 100%) !important;\n        box-shadow: 0 0 12px 5px #43ff36cc, 0 0 0 8px #1f9626b5 inset !important;\n    }\n\n    .sensor-led-off {\n        background: radial-gradient(circle, #f93447 60%, #ad072a 100%) !important;\n        box-shadow: 0 0 12px 5px #ff2361cc, 0 0 0 8px #611724b0 inset !important;\n    }\n\n    .sensor-led-status {\n        font-size: 1em;\n        font-weight: 400;\n        margin-left: 10px;\n        min-width: 55px;\n    }\n</style>\n\n<div class=\"sensor-led-card\">\n    <span class=\"sensor-led-label\">Sensor</span>\n    <span id=\"sensor_led\" class=\"sensor-led-circle\"></span>\n    <span id=\"sensor_led_status\" class=\"sensor-led-status\"></span>\n</div>\n\n<script>\n    (function(scope) {\n    const led = document.getElementById('sensor_led');\n    const text = document.getElementById('sensor_led_status');\n\n    scope.$watch('msg.payload', function(sensorVal) {\n        let state = String(sensorVal).toLowerCase().trim();\n\n        if (state === \"true\" || state === \"1\" || state === \"on\") {\n            led.classList.remove(\"sensor-led-off\");\n            led.classList.add(\"sensor-led-on\");\n            text.style.color = \"#25e700\";\n        } else {\n            led.classList.remove(\"sensor-led-on\");\n            led.classList.add(\"sensor-led-off\");\n            text.style.color = \"#f93447\";\n        }\n    });\n})(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1000,"y":1060,"wires":[[]]},{"id":"da41ad80805b0ee2","type":"ui_template","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","group":"c36a6b09f36b3f87","name":"VALVE","order":2,"width":6,"height":3,"format":"<style>\n  .valve-led-card {\n    background: linear-gradient(120deg, #181635 70%, #322652 110%);\n    border-radius: 18px;\n    box-shadow: 0 4px 18px #2c085780;\n    display: flex;\n    align-items: center;\n    gap: 22px;\n    padding: 24px 34px;\n    margin: 27px 0;\n    max-width: 370px;\n    min-width: 200px;\n    font-family: 'Fira Mono', 'Segoe UI', Arial, monospace, sans-serif;\n    color: #f9e3fe;\n  }\n\n  .valve-led-label {\n    font-weight: bold;\n    font-size: 1.13em;\n    letter-spacing: 0.04em;\n    min-width: 75px;\n    text-align: left;\n  }\n\n  .valve-led-circle {\n    width: 33px;\n    height: 33px;\n    border-radius: 50%;\n    background: #444 !important;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.3s ease-in-out;\n  }\n\n  .valve-led-on {\n    background: radial-gradient(circle, #25e700 60%, #20b600 100%) !important;\n    box-shadow: 0 0 12px 5px #43ff36cc, 0 0 0 8px #1f9626b5 inset !important;\n  }\n\n  .valve-led-off {\n    background: radial-gradient(circle, #f93447 60%, #ad072a 100%) !important;\n    box-shadow: 0 0 12px 5px #ff2361cc, 0 0 0 8px #611724b0 inset !important;\n  }\n\n  .valve-led-status {\n    font-size: 1em;\n    font-weight: 400;\n    margin-left: 10px;\n    min-width: 70px;\n    text-transform: uppercase;\n  }\n</style>\n\n<div class=\"valve-led-card\">\n  <span class=\"valve-led-label\">Valve</span>\n  <span id=\"valve_led\" class=\"valve-led-circle\"></span>\n  <span id=\"valve_led_status\" class=\"valve-led-status\"></span>\n</div>\n\n<script>\n(function(scope) {\n    const led = document.getElementById('valve_led');\n    const text = document.getElementById('valve_led_status');\n\n    scope.$watch('msg.payload', function(valveState) {\n        if (valveState === true || valveState === 1) {\n            // ON\n            led.className = \"valve-led-circle valve-led-on\";\n            text.innerText = \"OPEN\";\n            text.style.color = \"#25e700\";\n        } else {\n            // OFF\n            led.className = \"valve-led-circle valve-led-off\";\n            text.innerText = \"CLOSE\";\n            text.style.color = \"#f93447\";\n        }\n    });\n})(scope);\n</script>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":990,"y":1160,"wires":[[]]},{"id":"88b475692441ab50","type":"ui_template","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","group":"c36a6b09f36b3f87","name":"TIMER","order":5,"width":8,"height":3,"format":"<style>\n    .maintenance-led-card {\n        background: linear-gradient(120deg, #1d1a38 70%, #2f2751 110%);\n        border-radius: 18px;\n        box-shadow: 0 4px 18px #2c085780;\n        display: flex;\n        align-items: center;\n        gap: 22px;\n        padding: 24px 34px;\n        margin: 27px 0;\n        max-width: 370px;\n        min-width: 200px;\n        font-family: 'Fira Mono', 'Segoe UI', Arial, monospace, sans-serif;\n        color: #f9e3fe;\n    }\n\n    .maintenance-led-label {\n        font-weight: bold;\n        font-size: 1.13em;\n        letter-spacing: 0.04em;\n        min-width: 110px;\n        text-align: left;\n    }\n\n    .maintenance-led-circle {\n        width: 33px;\n        height: 33px;\n        border-radius: 50%;\n        background: #444;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: background 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n    }\n\n    .maintenance-led-required {\n        background: radial-gradient(circle, #25e700 60%, #20b600 100%) !important;\n        box-shadow: 0 0 12px 5px #43ff36cc, 0 0 0 8px #1f9626b5 inset !important;\n    }\n\n    .maintenance-led-ok {\n        background: radial-gradient(circle, #f93447 60%, #ad072a 100%) !important;\n        box-shadow: 0 0 12px 5px #ff2361cc, 0 0 0 8px #611724b0 inset !important;\n    }\n\n    .maintenance-led-status {\n        font-size: 1em;\n        font-weight: 400;\n        margin-left: 10px;\n        min-width: 100px;\n        text-transform: uppercase;\n    }\n</style>\n\n<div class=\"maintenance-led-card\">\n    <span class=\"maintenance-led-label\">Maintenance</span>\n    <span id=\"maintenance_led\" class=\"maintenance-led-circle\"></span>\n    <span id=\"maintenance_led_status\" class=\"maintenance-led-status\"></span>\n</div>\n\n<script>\n    (function(scope) {\n  const led = document.getElementById('maintenance_led');\n  const text = document.getElementById('maintenance_led_status');\n\n  scope.$watch('msg.payload', function(state) {\n    let value = String(state).toLowerCase().trim();\n\n    if (value === \"true\" || value === \"1\" || value === \"on\") {\n      // Maintenance REQUIRED — green\n      led.classList.remove(\"maintenance-led-ok\");\n      led.classList.add(\"maintenance-led-required\");\n      text.innerText = \"REQUIRED\";\n      text.style.color = \"#25e700\";\n    } else {\n      // Maintenance NOT required — red\n      led.classList.remove(\"maintenance-led-required\");\n      led.classList.add(\"maintenance-led-ok\");\n      text.innerText = \"NO MAINTENANCE\";\n      text.style.color = \"#f93447\";\n    }\n  });\n})(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1000,"y":1380,"wires":[[]]},{"id":"b7f232083f97013d","type":"ui_template","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","group":"c36a6b09f36b3f87","name":"ALARM","order":3,"width":8,"height":3,"format":"<style>\n  .sensor-health-card {\n    background: linear-gradient(120deg, #1a1b2f 70%, #2b2a49 110%);\n    border-radius: 18px;\n    box-shadow: 0 4px 18px #2c085780;\n    display: flex;\n    align-items: center;\n    gap: 22px;\n    padding: 24px 34px;\n    margin: 27px 0;\n    max-width: 370px;\n    min-width: 200px;\n    font-family: 'Fira Mono', 'Segoe UI', Arial, monospace, sans-serif;\n    color: #f9e3fe;\n  }\n\n  .sensor-health-label {\n    font-weight: bold;\n    font-size: 1.13em;\n    letter-spacing: 0.04em;\n    min-width: 75px;\n    text-align: left;\n  }\n\n  .sensor-health-circle {\n    width: 33px;\n    height: 33px;\n    border-radius: 50%;\n    background: #444;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: background 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\n  }\n\n  .sensor-health-on {\n    background: radial-gradient(circle, #25e700 60%, #20b600 100%) !important;\n    box-shadow: 0 0 12px 5px #43ff36cc, 0 0 0 8px #1f9626b5 inset !important;\n  }\n\n  .sensor-health-off {\n    background: radial-gradient(circle, #f93447 60%, #ad072a 100%) !important;\n    box-shadow: 0 0 12px 5px #ff2361cc, 0 0 0 8px #611724b0 inset !important;\n  }\n\n  .sensor-health-status {\n    font-size: 1em;\n    font-weight: 400;\n    margin-left: 10px;\n    min-width: 90px;\n    text-transform: uppercase;\n  }\n</style>\n\n<div class=\"sensor-health-card\">\n  <span class=\"sensor-health-label\">Sensor Alarm</span>\n  <span id=\"sensor_health_led\" class=\"sensor-health-circle\"></span>\n  <span id=\"sensor_health_status\" class=\"sensor-health-status\"></span>\n</div>\n\n<script>\n  (function(scope) {\n    const led = document.getElementById('sensor_health_led');\n    const text = document.getElementById('sensor_health_status');\n\n    scope.$watch('msg.payload', function(sensorStatus) {\n      let state = String(sensorStatus).toLowerCase().trim();\n\n      if (state === \"true\" || state === \"1\" || state === \"on\") {\n        led.classList.remove(\"sensor-health-off\");\n        led.classList.add(\"sensor-health-on\");\n        text.innerText = \"FUNCTIONING\";\n        text.style.color = \"#25e700\";\n      } else {\n        led.classList.remove(\"sensor-health-on\");\n        led.classList.add(\"sensor-health-off\");\n        text.innerText = \"FAULTY\";\n        text.style.color = \"#f93447\";\n      }\n    });\n  })(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":1000,"y":1260,"wires":[[]]},{"id":"2d5ea961cd3449a1","type":"ui_template","z":"f951a401b9bb56d4","g":"12076bdae9fd6764","group":"5df9e899578214ab","name":"Motor Button","order":1,"width":4,"height":2,"format":"<style>\n.custom-flush-switch-wrap {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 18px 0 8px 0;\n}\n\n.custom-flush-switch {\n  position: relative;\n  display: inline-block;\n  width: 72px;\n  height: 40px;\n}\n.custom-flush-switch input[type=\"checkbox\"] {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n.custom-flush-slider {\n  position: absolute; cursor: pointer;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background: linear-gradient(90deg,#26385a 60%,#1e283e 100%);\n  border-radius: 20px;\n  border: 2.5px solid #46506c;\n  transition: background 0.3s, border 0.22s;\n  box-shadow: 0 2px 8px #1ce09550, 0 0px 4px #0004;\n}\n.custom-flush-switch input:checked + .custom-flush-slider {\n  background: linear-gradient(90deg, #14fb84 0%, #22c55e 100%);\n  border: 2.5px solid #22c55e;\n  box-shadow: 0 3px 15px #8bfeca80;\n}\n.custom-flush-slider:before {\n  content: \"\";\n  position: absolute;\n  height: 32px; width: 32px; left: 4px; bottom: 4px;\n  background: #202f4a;\n  border-radius: 50%;\n  box-shadow: 0 1.5px 8px #18e0976e;\n  transition: transform 0.27s cubic-bezier(.66,.01,.33,1.01), background 0.3s;\n}\n.custom-flush-switch input:checked + .custom-flush-slider:before {\n  transform: translateX(32px);\n  background: linear-gradient(120deg,#7affcb 10%,#1ce097 88%);\n  box-shadow: 0 2px 16px #1ef59e47;\n}\n.custom-flush-label {\n  color: #fee140;\n  font-weight: 700;\n  font-size: 1.19em;\n  margin-left: 16px;\n  font-family: inherit;\n  letter-spacing: .03em;\n  user-select: none;\n  text-shadow: 0 1.2px 6px #22e0b840;\n}\n</style>\n\n<div class=\"custom-flush-switch-wrap\">\n  <label class=\"custom-flush-switch\">\n    <input type=\"checkbox\"\n      ng-model=\"manualFlush\"\n      ng-change=\"send({payload: manualFlush ? 'ON' : 'OFF' })\"\n      ng-checked=\"msg.payload === 'ON'\">\n    <span class=\"custom-flush-slider\"></span>\n  </label>\n  <span class=\"custom-flush-label\">MOTOR SWITCH</span>\n</div>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":610,"y":880,"wires":[["e5142b8c634628f2"]]},{"id":"a1f026bebe8d4904","type":"function","z":"f951a401b9bb56d4","g":"2829f343b3288301","name":"📋 Format Output","func":"\n\nlet data = msg.sensor_input || {};\n\nmsg.payload = {\n    anomaly_score: msg.payload?.anomaly_score ?? \"-\",\n    status: msg.payload?.status ?? \"-\",\n    // You can pass sensor values later if needed\n};\n\nlet status = msg.payload?.status?.toLowerCase() || \"unknown\";\nlet statusClass = \"metric-normal\";  // default\n\nif (status.includes(\"warn\")) {\n    statusClass = \"metric-warning\";\n} else if (status.includes(\"anomaly\") || status.includes(\"danger\") || status.includes(\"alert\")) {\n    statusClass = \"metric-danger\";\n}\n\nmsg.payload.status_class = statusClass;\n\nreturn msg;\n\n\n\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2590,"y":1040,"wires":[["0aedfb4efc3c9fd8","df5cfa24ef08e770"]]},{"id":"0aedfb4efc3c9fd8","type":"debug","z":"f951a401b9bb56d4","g":"2829f343b3288301","name":"debug 10","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2780,"y":1060,"wires":[]},{"id":"df5cfa24ef08e770","type":"ui_template","z":"f951a401b9bb56d4","g":"2829f343b3288301","group":"42e78152f526ac16","name":"ANOMALY","order":1,"width":12,"height":6,"format":"<style>\n  .anomaly-card {\n    margin: 24px 0 15px 0;\n    max-width: 540px;\n    min-width: 320px;\n    display: inline-block;\n    background: linear-gradient(120deg, #171a28 88%, #411f5e 120%);\n    border-radius: 30px;\n    box-shadow: 0 7px 38px #181048ac, 0 8px 54px #ff3674a3;\n    color: #efc5fb;\n    padding: 36px 28px 28px 28px;\n    font-family: 'Segoe UI', 'Fira Mono', Arial, monospace, sans-serif;\n    font-size: 1.12em;\n    position: relative;\n    animation: anomalyPulse 1.7s alternate infinite cubic-bezier(.48, 0, .56, 1.09);\n    word-break: break-word;\n  }\n\n  @keyframes anomalyPulse {\n    0% {\n      box-shadow: 0 1px 19px #3959c080, 0 2px 32px #e561d866;\n    }\n\n    100% {\n      box-shadow: 0 16px 54px #9c2dff78, 0 26px 80px #db008c67;\n    }\n  }\n\n  .anomaly-header {\n    font-size: 1.33em;\n    font-weight: bold;\n    text-align: center;\n    letter-spacing: 0.03em;\n    margin-bottom: 18px;\n    margin-top: -10px;\n    color: #ffb9fb;\n    text-shadow: 0 2px 14px #530a42cc;\n  }\n\n  .anomaly-content-box {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    gap: 24px;\n    margin-bottom: 8px;\n  }\n\n  .anomaly-metric-box {\n    background: rgba(38, 14, 53, 0.60);\n    border-radius: 17px;\n    padding: 20px 30px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-width: 90px;\n    border: 1.2px solid #895fff50;\n    transition: background 0.5s, box-shadow 0.5s;\n  }\n\n  .metric-normal {\n    box-shadow: 0 2px 18px #36f6d466;\n    border: 1.5px solid #28d9e988;\n  }\n\n  .metric-warning {\n    box-shadow: 0 2px 20px #ffc107aa;\n    border: 1.5px solid #ff980088;\n    background: rgba(255, 193, 7, 0.12);\n  }\n\n  .metric-danger {\n    box-shadow: 0 2px 20px #f4433699;\n    border: 1.5px solid #ff1744a1;\n    background: rgba(255, 71, 87, 0.18);\n  }\n\n  .anomaly-label {\n    font-size: 1em;\n    font-weight: 500;\n    margin-bottom: 9px;\n    letter-spacing: 0.05em;\n    color: #e3cfff;\n  }\n\n  .anomaly-value {\n    font-size: 1.45em;\n    font-weight: 600;\n    color: #e9f7ef;\n    text-shadow: 0 2px 12px #6122a0b1;\n  }\n\n  .anomaly-msg-pre {\n    color: #fde3ff;\n    font-size: 1.05em;\n    font-family: inherit;\n    line-height: 1.54;\n    background: none;\n    margin: 22px 0 0 0;\n    border: none;\n    white-space: pre-line;\n    text-shadow: 0 1px 12px #11115511;\n    text-align: left;\n    display: block;\n  }\n\n  .anomaly-bigicon {\n    font-size: 2.2em;\n    vertical-align: middle;\n    margin-right: 15px;\n    margin-left: 1px;\n    filter: drop-shadow(0 4px 17px #5935fccc);\n    float: left;\n  }\n\n  @media (max-width: 600px) {\n    .anomaly-card {\n      max-width: 98vw;\n      padding: 18px 5vw 12px 5vw;\n      font-size: 0.97em;\n    }\n\n    .anomaly-bigicon {\n      font-size: 1.35em;\n    }\n\n    .anomaly-content-box {\n      flex-direction: column;\n      gap: 12px;\n    }\n  }\n</style>\n\n<div class=\"anomaly-card\">\n  <div class=\"anomaly-header\">Anomaly Detection</div>\n  <div class=\"anomaly-content-box\">\n    <div class=\"anomaly-metric-box {{msg.payload.status_class}}\">\n      <div class=\"anomaly-label\">Score</div>\n      <div class=\"anomaly-value\">{{msg.payload.anomaly_score}}</div>\n    </div>\n    <div class=\"anomaly-metric-box {{msg.payload.status_class}}\">\n      <div class=\"anomaly-label\">Status</div>\n      <div class=\"anomaly-value\">{{msg.payload.status}}</div>\n    </div>\n  </div>\n  <span class=\"anomaly-bigicon\"></span>\n  <pre class=\"anomaly-msg-pre\" id=\"anomaly-msg-pre\"></pre>\n</div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2790,"y":1020,"wires":[[]]},{"id":"ca28c08c0a2ba804","type":"function","z":"f951a401b9bb56d4","g":"1b5f33b9eb3dafed","name":"Set Status Request","func":"// 1️⃣ Fetch latest sensor values from flow context\nlet TDS = flow.get(\"TDS\") || 0;\nlet turbidity = flow.get(\"Turbidity\") || 0;\nlet temperature = flow.get(\"Temperature\") || 0;\nlet pH = flow.get(\"pH\") || 0;\n\n// 2️⃣ Build sensor_input object for ML API\nlet sensor_input = {\n    TDS: Number(TDS),\n    turbidity: Number(turbidity),\n    temperature: Number(temperature),\n    pH: Number(pH)\n};\n\n// 3️⃣ Set up POST request to Flask API\nmsg.method = \"POST\";\nmsg.url = \"http://127.0.0.1:5000/predict-status\";\nmsg.headers = {\n    \"Content-Type\": \"application/json\"\n};\nmsg.payload = sensor_input;\n\n// 4️⃣ Save sensor input for UI display later\nmsg.sensor_backup = { ...sensor_input };\n\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":880,"wires":[["89a68d164e8f6beb"]]},{"id":"89a68d164e8f6beb","type":"http request","z":"f951a401b9bb56d4","g":"1b5f33b9eb3dafed","name":"Call /predict-status","method":"use","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":2030,"y":880,"wires":[["fd3a13616ad48151"]]},{"id":"fd3a13616ad48151","type":"function","z":"f951a401b9bb56d4","g":"1b5f33b9eb3dafed","name":"classifier ","func":"let data = msg.sensor_backup || {};\nlet TDS = parseFloat(data.TDS) || 0;\nlet turbidity = parseFloat(data.turbidity) || 0;\nlet temp = parseFloat(data.temperature) || 0;\nlet ph = parseFloat(data.pH) || 0;\n\nlet causes = [];\nlet status = \"Safe\";\n\n// --- TDS logic ---\nif (TDS > 1000) {\n  causes.push(\"High TDS\");\n} else if (TDS > 600) {\n  causes.push(\"TDS Warning\");\n}\n\n// --- Turbidity logic ---\nif (turbidity > 30) {\n  causes.push(\"High Turbidity\");\n} else if (turbidity > 10) {\n  causes.push(\"Turbidity Warning\");\n}\n\n// --- Temperature logic ---\nif (temp > 50) {\n  causes.push(\"High Temperature\");\n} else if (temp > 40) {\n  causes.push(\"Temperature Warning\");\n}\n\n// --- ✅ FIXED pH logic ---\nif (ph < 5 || ph > 9) {\n  causes.push(\"Abnormal pH\");\n} else if ((ph >= 5 && ph <= 6) || (ph >= 8 && ph <= 9)) {\n  causes.push(\"pH Warning\");\n  // else: 6 < ph < 8 → totally fine\n}\n\n// --- Determine final status ---\nif (causes.length > 0) {\n  if (causes.some(c => c.includes(\"High\") || c.includes(\"Abnormal\"))) {\n    status = \"Danger\";\n  } else {\n    status = \"Warning\";\n  }\n} else {\n  causes.push(\"All parameters within safe range\");\n}\n\nmsg.payload = {\n  status: status,\n  cause: causes.join(\", \"),\n  sensor_input: {\n    TDS: TDS.toFixed(2),\n    turbidity: turbidity.toFixed(2),\n    temperature: temp.toFixed(2),\n    pH: ph.toFixed(2)\n  }\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2200,"y":880,"wires":[["e524d26c014c0d60","b59eeecab33e09fa"]]},{"id":"b59eeecab33e09fa","type":"ui_template","z":"f951a401b9bb56d4","g":"1b5f33b9eb3dafed","group":"f8273465d3b19477","name":"CLASSIFIER","order":1,"width":12,"height":9,"format":"<style>\n  .status-card {\n    border-radius: 18px;\n    padding: 24px;\n    margin-top: 14px;\n    font-family: 'Segoe UI', sans-serif;\n    color: #fff;\n    box-shadow: 0 0 18px rgba(0, 0, 0, 0.3);\n    transition: background 0.5s ease;\n  }\n\n  .status-safe {\n    background: linear-gradient(145deg, #112d16, #0c3c21);\n    box-shadow: 0 0 18px #22ff8e44;\n  }\n\n  .status-warning {\n    background: linear-gradient(145deg, #3c2c10, #524016);\n    box-shadow: 0 0 18px #ffc44755;\n  }\n\n  .status-danger {\n    background: linear-gradient(145deg, #3d0e1e, #5a102a);\n    box-shadow: 0 0 18px #ff417766;\n  }\n\n  .status-title {\n    font-size: 2em;\n    /* increased */\n    font-weight: bold;\n    margin-bottom: 18px;\n    /* slightly more for bigger font */\n    text-shadow: 0 1px 6px #00000060;\n  }\n\n  .cause-box {\n    border-left: 4px solid #ff759f;\n    padding: 14px 18px;\n    /* slightly increased for larger font */\n    margin-bottom: 26px;\n    font-size: 1.19em;\n    /* increased */\n    font-weight: 500;\n    background: rgba(255, 118, 146, 0.08);\n    color: #ffc5de;\n    border-radius: 8px;\n    box-shadow: inset 0 0 12px #ff97bf26;\n  }\n\n  .sensor-grid {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 18px;\n  }\n\n  .sensor-box {\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 12px;\n    padding: 18px;\n    box-shadow: inset 0 0 8px #00000033;\n    backdrop-filter: blur(4px);\n    transition: transform 0.2s ease;\n  }\n\n  .sensor-box:hover {\n    transform: scale(1.025);\n  }\n\n  .sensor-label {\n    font-size: 1.19em;\n    /* increased */\n    color: #aaa;\n    margin-bottom: 8px;\n  }\n\n  .sensor-value {\n    font-size: 2.3em;\n    /* increased */\n    font-weight: 600;\n    color: #ffffffcc;\n    text-shadow: 0 1px 6px #00000088;\n  }\n\n  @media (max-width: 600px) {\n    .sensor-grid {\n      grid-template-columns: 1fr;\n    }\n\n    .status-title {\n      font-size: 1.36em;\n    }\n\n    .sensor-value {\n      font-size: 1.55em;\n    }\n\n    .sensor-label {\n      font-size: 1em;\n    }\n  }\n</style>\n\n<div id=\"statusCard\" class=\"status-card\">\n  <div class=\"status-title\">Status: <span id=\"statusText\">-</span></div>\n  <div class=\"cause-box\">⚡ Cause: <span id=\"causeText\">-</span></div>\n  <div class=\"sensor-grid\">\n    <div class=\"sensor-box\">\n      <div class=\"sensor-label\">TDS (ppm)</div>\n      <div class=\"sensor-value\" id=\"tdsVal\">-</div>\n    </div>\n    <div class=\"sensor-box\">\n      <div class=\"sensor-label\">Temperature (°C)</div>\n      <div class=\"sensor-value\" id=\"tempVal\">-</div>\n    </div>\n    <div class=\"sensor-box\">\n      <div class=\"sensor-label\">pH Level</div>\n      <div class=\"sensor-value\" id=\"phVal\">-</div>\n    </div>\n    <div class=\"sensor-box\">\n      <div class=\"sensor-label\">Turbidity (NTU)</div>\n      <div class=\"sensor-value\" id=\"turbVal\">-</div>\n    </div>\n  </div>\n</div>\n\n<script>\n  (function(scope) {\n    scope.$watch('msg.payload', function(payload) {\n        if (!payload || !payload.sensor_input) return;\n\n        const status = payload.status?.toLowerCase() || \"safe\";\n\n        const card = document.getElementById(\"statusCard\");\n        card.classList.remove(\"status-safe\", \"status-warning\", \"status-danger\");\n\n        if (status === \"danger\") {\n            card.classList.add(\"status-danger\");\n        } else if (status === \"warning\") {\n            card.classList.add(\"status-warning\");\n        } else {\n            card.classList.add(\"status-safe\");\n        }\n\n        document.getElementById(\"statusText\").textContent = payload.status || \"-\";\n        document.getElementById(\"causeText\").textContent = payload.cause || \"-\";\n\n        const s = payload.sensor_input;\n        document.getElementById(\"tdsVal\").textContent = s.TDS ?? \"-\";\n        document.getElementById(\"tempVal\").textContent = s.temperature ?? \"-\";\n        document.getElementById(\"phVal\").textContent = s.pH ?? \"-\";\n        document.getElementById(\"turbVal\").textContent = s.turbidity ?? \"-\";\n    });\n  })(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":2390,"y":880,"wires":[[]]},{"id":"e524d26c014c0d60","type":"debug","z":"f951a401b9bb56d4","g":"1b5f33b9eb3dafed","name":"debug 13","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2380,"y":840,"wires":[]},{"id":"cb025b5c17f4652f","type":"function","z":"f951a401b9bb56d4","g":"5a166091742504f0","name":"function 12","func":"flow.set(\"manual_flush_active\", msg.payload === \"ON\");\nreturn null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":800,"wires":[["a958410c502b2bbf"]]},{"id":"72e923f8d4e1829e","type":"modbus-write","z":"f951a401b9bb56d4","d":true,"name":"MOTOR ON","showStatusActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"HoldingRegister","adr":"25","quantity":"1","server":"9dbbabf5ee2fbaf6","emptyMsgOnFail":false,"keepMsgProperties":false,"delayOnStart":false,"startDelayTime":"","x":490,"y":1740,"wires":[[],[]]},{"id":"bc0a4028bc8b19ef","type":"ui_switch","z":"f951a401b9bb56d4","d":true,"name":"","label":"motor","tooltip":"","group":"c36a6b09f36b3f87","order":6,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"className":"","x":190,"y":1740,"wires":[["f8718a766a9304ff"]]},{"id":"f8718a766a9304ff","type":"function","z":"f951a401b9bb56d4","d":true,"name":"function 10","func":"msg.payload = [msg.payload === true ? 256 : 0];\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":1660,"wires":[["72e923f8d4e1829e","071cd94d257c02e3"]]},{"id":"071cd94d257c02e3","type":"debug","z":"f951a401b9bb56d4","d":true,"name":"debug 13","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":460,"y":1700,"wires":[]},{"id":"1bb55e0a7b2398df","type":"modbus-write","z":"f951a401b9bb56d4","d":true,"name":"VAVLE","showStatusActivities":false,"showErrors":false,"showWarnings":true,"unitid":"1","dataType":"HoldingRegister","adr":"27","quantity":"1","server":"9dbbabf5ee2fbaf6","emptyMsgOnFail":false,"keepMsgProperties":false,"delayOnStart":false,"startDelayTime":"","x":1580,"y":1760,"wires":[["aecfe3518ecd7798"],[]]},{"id":"573cdaedc0c12341","type":"function","z":"f951a401b9bb56d4","d":true,"name":"function 11","func":"// Check if switch is ON\nlet isOn = msg.payload === true || msg.payload === \"ON\";\n\n// Set manual override flag (optional tracking)\nflow.set(\"manual_flush_active\", isOn);\n\n// Send the proper Modbus payload as an array\nmsg.payload = [isOn ? 256 : 0];\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1390,"y":1720,"wires":[["1bb55e0a7b2398df","495e60d879bb767e"]]},{"id":"aecfe3518ecd7798","type":"debug","z":"f951a401b9bb56d4","d":true,"name":"debug 15","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1780,"y":1760,"wires":[]},{"id":"11d84b3c71c7ed86","type":"ui_switch","z":"f951a401b9bb56d4","d":true,"name":"","label":"value","tooltip":"","group":"c36a6b09f36b3f87","order":7,"width":0,"height":0,"passthru":true,"decouple":"false","topic":"topic","topicType":"msg","style":"","onvalue":"true","onvalueType":"bool","onicon":"","oncolor":"","offvalue":"false","offvalueType":"bool","officon":"","offcolor":"","animate":false,"className":"","x":1180,"y":1760,"wires":[["573cdaedc0c12341"]]},{"id":"495e60d879bb767e","type":"debug","z":"f951a401b9bb56d4","d":true,"name":"debug 16","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1620,"y":1700,"wires":[]},{"id":"266aac37fde857bb","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":1,"width":1,"height":1},{"id":"325097f6e161149d","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":3,"width":1,"height":1},{"id":"dcd6a3ad8eb63f44","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":4,"width":1,"height":1},{"id":"f46668ee0d6d9610","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":5,"width":1,"height":1},{"id":"67a67a144faf0c58","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":6,"width":1,"height":1},{"id":"7da87b1add1fdfbe","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":7,"width":1,"height":1},{"id":"70020c2126ef7afa","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":8,"width":1,"height":1},{"id":"063fb77bf36ba25f","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":9,"width":1,"height":1},{"id":"8cf66356faf0b4d2","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":10,"width":1,"height":1},{"id":"0501134d47af13de","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":11,"width":1,"height":1},{"id":"dd8eb2b3158ea709","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":12,"width":1,"height":1},{"id":"b002d308258886cc","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":13,"width":1,"height":1},{"id":"9d30114432e34dea","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":14,"width":1,"height":1},{"id":"abaa7a38a441196e","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":15,"width":1,"height":1},{"id":"8bf9c9cd6d789aca","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":16,"width":1,"height":1},{"id":"03cb27be89d2e038","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":17,"width":1,"height":1},{"id":"0a680fa62b655b06","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":18,"width":1,"height":1},{"id":"11ad1124c1c28a61","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":19,"width":1,"height":1},{"id":"537383763ee4dd1c","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":20,"width":1,"height":1},{"id":"6f61f6372227ab7c","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":21,"width":1,"height":1},{"id":"0e6de6e195d0325c","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":22,"width":1,"height":1},{"id":"bbddeb3e8918d02b","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":23,"width":1,"height":1},{"id":"032a832711708c8e","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":24,"width":1,"height":1},{"id":"68f68dd397f78f58","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":25,"width":1,"height":1},{"id":"c4b90fb90a53e4d7","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":26,"width":1,"height":1},{"id":"8ede0592b5373589","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":27,"width":1,"height":1},{"id":"c0429b9f6275cdb6","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":28,"width":1,"height":1},{"id":"7f352cb55650d23d","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":29,"width":1,"height":1},{"id":"0f9faf1acc1868d7","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":30,"width":1,"height":1},{"id":"30ba6822013c7693","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":31,"width":1,"height":1},{"id":"0b3f834d59f4a5fb","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":32,"width":1,"height":1},{"id":"1c2eb53ed599e9e1","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"46dbe4179151e83e","order":33,"width":1,"height":1},{"id":"3fec4d2241d775af","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":1,"width":1,"height":1},{"id":"653c05c336cdde2b","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":4,"width":1,"height":1},{"id":"297c5c3d4ea56aae","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":5,"width":1,"height":1},{"id":"a088c7707f4452f9","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":6,"width":1,"height":1},{"id":"8d497766a1d285b3","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":7,"width":1,"height":1},{"id":"bc89d9259a5fc0f0","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":8,"width":1,"height":1},{"id":"983ebe687074c90d","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":9,"width":1,"height":1},{"id":"43cedbf10de190c7","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":10,"width":1,"height":1},{"id":"d41676d057d49b22","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":11,"width":1,"height":1},{"id":"a8a2906d3acf0b1a","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":12,"width":1,"height":1},{"id":"4871303cfe183e3a","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":13,"width":1,"height":1},{"id":"86438807d55bed52","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":14,"width":1,"height":1},{"id":"39267ec68df0baf2","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":15,"width":1,"height":1},{"id":"0eb91a3b07d72b70","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":16,"width":1,"height":1},{"id":"49f2461f4903e371","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":17,"width":1,"height":1},{"id":"812e3050e368fed5","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":18,"width":1,"height":1},{"id":"5125005b85ece121","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":19,"width":1,"height":1},{"id":"89d3afc769b2a7a9","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":20,"width":1,"height":1},{"id":"d1cc705ef2fe8c91","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":21,"width":1,"height":1},{"id":"82f3b08aa6a4ed30","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":24,"width":1,"height":1},{"id":"d9201dfb2d1e6215","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":25,"width":1,"height":1},{"id":"b54278284b334837","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":26,"width":1,"height":1},{"id":"9fdda598aa9ffe9d","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":27,"width":1,"height":1},{"id":"4489a0574e10f2dd","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":28,"width":1,"height":1},{"id":"d36f13b87c95b7a7","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":29,"width":1,"height":1},{"id":"26db4a89c1131ed3","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":30,"width":1,"height":1},{"id":"29910fc664a7992e","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":31,"width":1,"height":1},{"id":"9149e5745ceb9f7f","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":32,"width":1,"height":1},{"id":"61f7afb7852cf96d","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":33,"width":1,"height":1},{"id":"b647a82bbbdbd967","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":34,"width":1,"height":1},{"id":"4afe4be6bd99aef9","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":35,"width":1,"height":1},{"id":"3d5f35f89472eb42","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":36,"width":1,"height":1},{"id":"63465eadc5ca1114","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":37,"width":1,"height":1},{"id":"e94d6cd9f2976b9b","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":38,"width":1,"height":1},{"id":"bf2af887a42d6e21","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":39,"width":1,"height":1},{"id":"5a5d215b2ebe3747","type":"ui_spacer","z":"f951a401b9bb56d4","name":"spacer","group":"773f31f85a73f828","order":40,"width":1,"height":1},{"id":"dash_grp","type":"ui_group","name":"SENSOR UPDATE","tab":"a81aef0fe3738e47","order":1,"disp":true,"width":21,"collapse":false,"className":""},{"id":"46dbe4179151e83e","type":"ui_group","name":"MULTI-SENSOR CHART","tab":"65367648b1f92c48","order":1,"disp":true,"width":30,"collapse":false,"className":""},{"id":"5825206d34439e3a","type":"ui_group","name":"MESSAGE","tab":"dash_tab","order":3,"disp":true,"width":"20","collapse":false,"className":""},{"id":"01f89b94e7de115a","type":"ui_group","name":"SENSOR GAUGE","tab":"a81aef0fe3738e47","order":3,"disp":true,"width":25,"collapse":false,"className":""},{"id":"45365d6b6e9cf321","type":"ui_group","name":"VALVE STATUS","tab":"a81aef0fe3738e47","order":2,"disp":true,"width":6,"collapse":false,"className":""},{"id":"773f31f85a73f828","type":"ui_group","name":"SENSOR INDIVIDUAL CHART","tab":"65367648b1f92c48","order":2,"disp":true,"width":30,"collapse":false,"className":""},{"id":"d528b61e57e1037d","type":"ui_group","name":"SENSOR REPORT","tab":"dash_tab","order":1,"disp":true,"width":10,"collapse":false,"className":""},{"id":"d985cc9ae7642718","type":"ui_group","name":"SENSOR HEALTH","tab":"a81aef0fe3738e47","order":5,"disp":true,"width":10,"collapse":false,"className":""},{"id":"5ce0edf73a3fb05c","type":"ui_group","name":"VALVE REPORT","tab":"dash_tab","order":4,"disp":true,"width":10,"collapse":false,"className":""},{"id":"5df9e899578214ab","type":"ui_group","name":"SWITCHES","tab":"a81aef0fe3738e47","order":4,"disp":true,"width":8,"collapse":false,"className":""},{"id":"historical_group","type":"ui_group","name":"HISTORICAL DATA ","tab":"095e6a97bc59c0be","order":3,"disp":true,"width":"24","collapse":false,"className":""},{"id":"aa33d3d0b8bac521","type":"ui_group","name":"WQI[Water Qaulity Index]","tab":"dash_tab","order":2,"disp":true,"width":20,"collapse":false,"className":""},{"id":"325906020dc01bfb","type":"ui_group","name":"About our Project","tab":"d22882faefd168e3","order":1,"disp":true,"width":"22","collapse":false,"className":""},{"id":"9dbbabf5ee2fbaf6","type":"modbus-client","name":"IIOT_Water_Finalll","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"queueLogEnabled":false,"failureLogEnabled":true,"tcpHost":"192.168.2.1","tcpPort":502,"tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":9600,"serialDatabits":8,"serialStopbits":1,"serialParity":"none","serialConnectionDelay":100,"serialAsciiResponseStartDelimiter":"0x3A","unit_id":1,"commandDelay":1,"clientTimeout":1000,"reconnectOnTimeout":true,"reconnectTimeout":2000,"parallelUnitIdsAllowed":true,"showErrors":false,"showWarnings":true,"showLogs":true},{"id":"0ac555be21dab7e4","type":"ui_group","name":"MAINTENANCE","tab":"88b48262c7e98262","order":3,"disp":true,"width":6,"collapse":false,"className":""},{"id":"fe8832c86cba1be2","type":"ui_group","name":"Group","tab":"a81aef0fe3738e47","order":7,"disp":true,"width":6},{"id":"2c338e5efeb300a2","type":"ui_group","name":"PREDICTION","tab":"88b48262c7e98262","order":2,"disp":true,"width":"16","collapse":false,"className":""},{"id":"c36a6b09f36b3f87","type":"ui_group","name":"OUTPUT","tab":"a81aef0fe3738e47","order":6,"disp":true,"width":35,"collapse":false,"className":""},{"id":"42e78152f526ac16","type":"ui_group","name":"ANOMALY","tab":"88b48262c7e98262","order":1,"disp":true,"width":"12","collapse":false,"className":""},{"id":"f8273465d3b19477","type":"ui_group","name":"CLASSIFIER","tab":"88b48262c7e98262","order":4,"disp":true,"width":12,"collapse":false,"className":""},{"id":"a81aef0fe3738e47","type":"ui_tab","name":"Central Console","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"65367648b1f92c48","type":"ui_tab","name":"Real-Time Metrics","icon":"timeline","order":2,"disabled":false,"hidden":false},{"id":"dash_tab","type":"ui_tab","name":"Performance Log","icon":"assignment","order":4,"disabled":false,"hidden":false},{"id":"095e6a97bc59c0be","type":"ui_tab","name":"History Vault","icon":"history","order":3,"disabled":false,"hidden":false},{"id":"d22882faefd168e3","type":"ui_tab","name":"About Us","icon":"dashboard","order":6,"disabled":true,"hidden":true},{"id":"88b48262c7e98262","type":"ui_tab","name":"ML Engine","icon":"memory","order":5,"disabled":false,"hidden":false}]